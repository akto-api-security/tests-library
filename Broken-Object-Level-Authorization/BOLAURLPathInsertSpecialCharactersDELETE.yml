id: BOLA_URL_INSERT_SPECIAL_CHAR_DELETE
info:
  name: "Exploiting BOLA by inserting Special Characters in URL path for Unauthorized Access with DELETE based APIs"
  description: >
    "In this BOLA test (for DELETE based APIs), attackers exploit vulnerabilities by inserting special characters into the URL path, attempting unauthorized access. This method focuses on flaws in object-level authorization, enabling attackers to manipulate  URLs and bypass access controls. By strategically using special characters, the test emulates unauthorized access attempts, exposing weaknesses in the authorization process for organizations to address and enhance their system's security."
  details: >
    "This BOLA test (for DELETE based APIs) involves probing for security weaknesses by inserting special characters into URL paths. This simulated attack aims to exploit vulnerabilities in object-level authorization, allowing unauthorized access. Attackers manipulate  the URL structure to bypass access controls, revealing potential flaws in the authorization process. This test helps organizations identify and rectify security risks associated with object-level authorization mechanisms."
  impact: >
    "Exploiting BOLA through special character insertion can have severe  impacts. Unauthorized access to sensitive objects may lead to data breaches, exposing confidential information. Attackers could manipulate or delete critical data, disrupting business operations and causing reputational damage. Organizations must address BOLA vulnerabilities promptly to prevent these potential impacts  on data integrity, privacy, and overall system security."
  category:
    name: BOLA
    shortName: BOLA
    displayName: Broken Object Level Authorization (BOLA)
  subCategory: BOLA_URL_INSERT_SPECIAL_CHAR_DELETE
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://www.akto.io/blog/bola-exploitation-using-unauthorized-uuid-on-api-endpoint"
    - "https://www.akto.io/blog/what-is-broken-object-level-authorization-bola"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa1-broken-object-level-authorization.md"
    - "https://cwe.mitre.org/data/definitions/284.html"
    - "https://cwe.mitre.org/data/definitions/285.html"
    - "https://cwe.mitre.org/data/definitions/639.html"
  cwe:
    - CWE-284
    - CWE-285
    - CWE-639
  cve:
    - CVE-2022-34770

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(a)(1)
  SOC 2:
    - Logical and Physical Access Controls
  PCI DSS:
    - Requirement 7
    - Requirement 8
  ISO 27001:
    - A.9.1.2
    - A.9.4.1
  NIST 800-53:
    - AC-6
    - AC-3
  CSA CCM:
    - IAM-02
  CIS Controls:
    - IG1 Safeguard 4.4
    - IG1 Safeguard 5.2
    - IG2 Safeguard 7.3
  FedRAMP:
    - AC-2
    - AC-3
  NIST 800-171:
    - 3.1.1
    - 3.5.3
  FISMA:
    - AC-3
    - IA-5
  Cybersecurity Maturity Model Certification (CMMC):
    - AC.1.001
    - AC.2.003
auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    eq: DELETE
  response_payload:
    length:
      eq: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - not found
      - not available
      - failure

wordLists:
  specialCharacters:
    - "*"
    - "'"
    - "!"
    - "@"
    - "^"
    - "&"
    - "%"
    - "$"

execute:
  type: multiple
  requests:
    - req:
        - modify_url:
            token_insert:
              location: 1
              replace_with: ${specialCharacters}
        - success: vulnerable
        - failure: x2
    - req:
        - modify_url:
            token_insert:
              location: 2
              replace_with: ${specialCharacters}
        - success: vulnerable
        - failure: x3
    - req:
        - modify_url:
            token_insert:
              location: 3
              replace_with: ${specialCharacters}
        - success: vulnerable
        - failure: x4
    - req:
        - modify_url:
            token_insert:
              location: 4
              replace_with: ${specialCharacters}
        - success: vulnerable
        - failure: x5
    - req:
        - modify_url:
            token_insert:
              location: 5
              replace_with: ${specialCharacters}
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      eq: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - not found
      - not available
      - failure
