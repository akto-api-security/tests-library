id: BOLA_URL_INSERT_INTEGER_ID_PATCH
info:
  name: "Exploiting BOLA by inserting Integer IDs in URL path for Unauthorized Access with PUT/PATCH based APIs"
  description: >
    "This test involves assessing the security of a system's Object Level Authorization by attempting to exploit it through the manipulation of Integer IDs in the URL path (for PUT/PATCH Based APIs). In this scenario, attackers attempt to gain unauthorized access by inserting  specific Integer IDs, bypassing proper authorization mechanisms. This test aims to identify vulnerabilities in the system's ability to enforce proper access controls, potentially exposing sensitive data or functionalities to unauthorized users."
  details: >
    "In this test, attackers exploit security weaknesses by manipulating Integer IDs within the URL path to gain unauthorized access (for PUT/PATCH Based APIs). By inserting specific Integer values, they attempt to bypass proper authorization controls implemented by the system. This test is crucial for identifying vulnerabilities in Object Level Authorization, which, if left unchecked, could lead to unauthorized users accessing sensitive data or functionalities within the system."
  impact: >
    "A successful BOLA attack, achieved by manipulating Integer IDs in the URL path, can have severe consequences. Unauthorized access may lead to exposure of sensitive data, unauthorized modifications, and compromise the overall integrity, confidentiality, and availability of the system. Implementing robust Object Level Authorization mechanisms becomes crucial to mitigate the risks associated with such security breaches."
  category:
    name: BOLA
    shortName: BOLA
    displayName: Broken Object Level Authorization (BOLA)
  subCategory: BOLA_URL_INSERT_INTEGER_ID_PATCH
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://www.akto.io/blog/bola-exploitation-using-unauthorized-uuid-on-api-endpoint"
    - "https://www.akto.io/blog/what-is-broken-object-level-authorization-bola"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa1-broken-object-level-authorization.md"
    - "https://cwe.mitre.org/data/definitions/284.html"
    - "https://cwe.mitre.org/data/definitions/285.html"
    - "https://cwe.mitre.org/data/definitions/639.html"
  cwe:
    - CWE-284
    - CWE-285
    - CWE-639
  cve:
    - CVE-2022-34770

settings:
  nature: INTRUSIVE
  plan: PRO
auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    contains_either:
      - PUT
      - PATCH
  response_payload:
    length:
      eq: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - not found
      - not available
      - failure

wordLists:
  integerIDs:
    - 1
    - 2
    - 3
    - 4
    - 5

execute:
  type: multiple
  requests:
    - req:
        - modify_url:
            token_insert:
              location: 1
              replace_with: ${integerIDs}
        - success: vulnerable
        - failure: x2
    - req:
        - modify_url:
            token_insert:
              location: 2
              replace_with: ${integerIDs}
        - success: vulnerable
        - failure: x3
    - req:
        - modify_url:
            token_insert:
              location: 3
              replace_with: ${integerIDs}
        - success: vulnerable
        - failure: x4
    - req:
        - modify_url:
            token_insert:
              location: 4
              replace_with: ${integerIDs}
        - success: vulnerable
        - failure: x5
    - req:
        - modify_url:
            token_insert:
              location: 5
              replace_with: ${integerIDs}
validate:
  response_code:
    gte: 200
    lt: 300
  url:
    endpoint_in_traffic_context: false
  response_payload:
    length:
      eq: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - not found
      - not available
      - failure
