id: BOLA_STRING_PARAM
info:
  name: "Exploiting BOLA: Direct System Operation Using String Parameter Values"
  description: > 
    "In this instance of Broken Object Level Authorization (BOLA), attackers exploit system 
    vulnerabilities by directly utilizing string parameter values to perform operations. This 
    manipulation poses a significant risk, potentially bypassing authorization controls and 
    compromising the system's integrity. It underscores the imperative for stringent input 
    validation and secure object-level authorization practices to mitigate these risks 
    effectively. Addressing such vulnerabilities promptly is crucial for preventing 
    unauthorized system operations and ensuring robust security measures."
  details: >
    "In the context of Broken Object Level Authorization (BOLA), this scenario involves 
    attackers exploiting vulnerabilities by directly employing string parameter values 
    to execute operations within the system. By manipulating these parameters, adversaries 
    may bypass authorization controls, posing a substantial risk to the system's integrity. 
    Robust input validation and secure object-level authorization practices are imperative 
    to mitigate these vulnerabilities effectively and prevent unauthorized system operations."
  impact: >
    "The impact of exploiting Broken Object Level Authorization (BOLA) through direct 
    utilization of string parameter values for system operations can be severe. Successful 
    manipulation may lead to unauthorized access, compromising sensitive data and potentially 
    causing system disruptions. Addressing these vulnerabilities promptly is essential to 
    prevent unauthorized operations, safeguard against data breaches, and uphold the overall 
    security posture of the system."
  remediation: "To mitigate BOLA vulnerabilities where attackers exploit string parameter values directly, implement stringent input validation mechanisms. Validate all input data thoroughly to prevent manipulation and unauthorized operations. Strengthen object-level authorization practices to ensure that only authorized users can perform operations. Promptly addressing these vulnerabilities is crucial for preventing unauthorized system access and maintaining robust security measures."
  category:
    name: BOLA
    shortName: BOLA
    displayName: Broken Object Level Authorization (BOLA)
  subCategory: BOLA_STRING_PARAM
  severity: HIGH
  tags: 
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://www.akto.io/blog/bola-exploitation-using-unauthorized-uuid-on-api-endpoint"
    - "https://www.akto.io/blog/what-is-broken-object-level-authorization-bola"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa1-broken-object-level-authorization.md"
    - "https://cwe.mitre.org/data/definitions/284.html"
    - "https://cwe.mitre.org/data/definitions/285.html"
    - "https://cwe.mitre.org/data/definitions/639.html"
  cwe:
    - CWE-284
    - CWE-285
    - CWE-639
  cve:
    - CVE-2023-7102

auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  private_variable_context:
    gt: 0
    regex: "\\b[a-zA-Z]+[-_]?\\d+\\b"
    extract: private_var

execute:
  type: single
  requests:
    - req:
        - add_query_param:
            private_var.key: ${private_var.value}
        - add_body_param:
            private_var.key: ${private_var.value}
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    percentage_match:
      lt: 10
    percentage_match_schema:
      gte: 90
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts