id: ADD_USER_ID
info:
  name: "IDOR by adding user id in query params"
  description: "Attacker can access resources of any user by adding user_id in URL."
  details: >
    "The endpoint appears to be vulnerable to broken object level authorization attack. The original request was replayed by adding other user's user id in query params.
    The server responded with 2XX success codes and less than <b>{{percentageMatch}}%</b> of the response body matched with original response body. <br>"
    "<b>Background:</b> Object level authorization is an access control mechanism that is usually implemented at the code level to validate that one user can only access objects that they should have access to."
  impact: "Unauthorized access can result in data disclosure to unauthorized parties, data loss, or data manipulation. Unauthorized access to objects can also lead to full account takeover."
  category:
    name: BOLA
    shortName: BOLA
    displayName: Broken Object Level Authorization (BOLA)
  subCategory: ADD_USER_ID
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://www.akto.io/blog/bola-exploitation-using-unauthorized-uuid-on-api-endpoint"
    - "https://www.akto.io/blog/what-is-broken-object-level-authorization-bola"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa1-broken-object-level-authorization.md"
    - "https://cwe.mitre.org/data/definitions/284.html"
    - "https://cwe.mitre.org/data/definitions/285.html"
    - "https://cwe.mitre.org/data/definitions/639.html"
  cwe:
    - CWE-639
    - CWE-284
    - CWE-285
  cve:
    - CVE-2022-34621
 
attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards: compliance/bola.conf
remediation: remediation/ADD_USER_ID.md
auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: "OPTIONS"
  response_headers:
    for_one:
      key:
        eq: content-type
      value:
        regex: json
  response_payload:
    length:
      gt: 0
    contains_all:
      - "{"
      - "}"
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  param_context:
    param: user|customer
    extract: user_context
execute:
  type: single
  requests:
    - req:
        - add_query_param:
            user_context.key: ${user_context.value}
validate:
  response_code:
    gte: 200
    lt: 300
  response_headers:
    for_one:
      key:
        eq: content-type
      value:
        regex: json
  response_payload:
    percentage_match:
      lt: 50
    percentage_match_schema:
      gte: 70
    length:
      gt: 0
    contains_all:
      - "{"
      - "}"
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
