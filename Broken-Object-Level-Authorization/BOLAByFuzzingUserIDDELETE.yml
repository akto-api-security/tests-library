id: FUZZ_USER_ID_DELETE
info:
  name: "BOLA by Accessing Existing User Data Through User ID Fuzzing for DELETE method APIs"
  description: >
    "This specific test involves accessing existing user data through new user ID fuzzing (where HTTP method is DELETE), where attackers manipulate identifiers like UUIDs, string IDs, and integers to exploit vulnerabilities and gain unauthorized access. This highlights the critical need for robust user ID handling to prevent Business Logic Abuse and protect against unauthorized data exposure."
  details: >
    "Attackers exploit a BOLA vulnerability by capturing a new user's ID and fuzzing it (where HTTP method is DELETE) with variations such as UUIDs, string IDs, and integer IDs. This manipulation allows them to gain unauthorized access to existing user data, potentially leading to privacy breaches and unauthorized disclosures. It underscores the importance of secure user ID handling and highlights the risks associated with BOLA abuse in systems."
  impact: >
    "The impact of this test can be severe, potentially leading to unauthorized access to sensitive user information. Exploiting business logic vulnerabilities in this manner may result in privacy breaches, unauthorized disclosures, and compromise the integrity of user data. Addressing such vulnerabilities promptly is crucial to prevent unauthorized access, protect user privacy, and maintain the overall security posture of the system."
  category:
    name: BOLA
    shortName: BOLA
    displayName: Broken Object Level Authorization (BOLA)
  subCategory: FUZZ_USER_ID_DELETE
  severity: CRITICAL
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://www.akto.io/blog/bola-exploitation-using-unauthorized-uuid-on-api-endpoint"
    - "https://www.akto.io/blog/what-is-broken-object-level-authorization-bola"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa1-broken-object-level-authorization.md"
    - "https://cwe.mitre.org/data/definitions/284.html"
    - "https://cwe.mitre.org/data/definitions/285.html"
    - "https://cwe.mitre.org/data/definitions/639.html"
  cwe:
    - CWE-284
    - CWE-285
    - CWE-639
  cve:
    - CVE-2023-39349
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(a)(1)
  SOC 2:
    - Logical and Physical Access Controls
  PCI DSS:
    - Requirement 7
    - Requirement 8
  ISO 27001:
    - A.9.1.2
    - A.9.4.1
  NIST 800-53:
    - AC-6
    - AC-3
  CSA CCM:
    - IAM-02
  CIS Controls:
    - IG1 Safeguard 4.4
    - IG1 Safeguard 5.2
    - IG2 Safeguard 7.3
  FedRAMP:
    - AC-2
    - AC-3
  NIST 800-171:
    - 3.1.1
    - 3.5.3
  FISMA:
    - AC-3
    - IA-5
  Cybersecurity Maturity Model Certification (CMMC):
    - AC.1.001
    - AC.2.003
auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    eq: DELETE
  response_payload:
    length:
      eq: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  or:
    - request_payload:
        for_one:
          key:
            regex: "^UserId$|^UserID$|^User-ID$|^user_id$|^user-id$|^userid$|username|^Username$|^USERNAME$|^uId$|^uid$|^UID$|^member_id$|^MemberId$|^memberId$|^profile_id$|^ProfileId$|^profileId$|^userIdentifier$|^UserIdentifier$|^user_identifier$|^account_id$|^AccountID$|^account-id$|^account_id$|^customer_id$|^CustomerID$|^customer-id$|^customer_id$"
            extract: userKey
    - query_param:
        for_one:
          key:
            regex: "^UserId$|^UserID$|^User-ID$|^user_id$|^user-id$|^userid$|^username$|^Username$|^USERNAME$|^uId$|^uid$|^UID$|^member_id$|^MemberId$|^memberId$|^profile_id$|^ProfileId$|^profileId$|^userIdentifier$|^UserIdentifier$|^user_identifier$|^account_id$|^AccountID$|^account-id$|^account_id$|^customer_id$|^CustomerID$|^customer-id$|^customer_id$"
            extract: userKey
wordLists:
  random_ids:
    source: sample_data
    key:
      regex: "^UserId$|^UserID$|^User-ID$|^user_id$|^user-id$|^userid$|username|^Username$|^USERNAME$|^uId$|^uid$|^UID$|^member_id$|^MemberId$|^memberId$|^profile_id$|^ProfileId$|^profileId$|^userIdentifier$|^UserIdentifier$|^user_identifier$|^account_id$|^AccountID$|^account-id$|^account_id$|^customer_id$|^CustomerID$|^customer-id$|^customer_id$"
    all_apis: true
execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            userKey: ${random_ids}
        - modify_query_param:
            userKey: ${random_ids}
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      eq: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
