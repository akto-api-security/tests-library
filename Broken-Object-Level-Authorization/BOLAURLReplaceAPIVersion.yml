id: BOLA_URL_REPLACE_API_VERSION
info:
  name: "Exploiting BOLA by replacing URL path with API Version IDs for Unauthorized Access."
  description: > 
    "This test involves exploiting security vulnerabilities by manipulating the URL 
    path with API Version IDs to gain unauthorized access. In this scenario, 
    attackers leverage BOLA to compromise the system by replacing the URL path, 
    tricking the system into granting access to sensitive data or functionalities 
    without proper authorization. This test aims to identify and rectify weaknesses 
    in object-level authorization mechanisms to ensure robust security measures 
    against unauthorized access attempts."
  details: >
    "This test focuses on identifying vulnerabilities where attackers manipulate URL 
    paths by substituting them with API Version IDs. This manipulation allows 
    unauthorized access to sensitive information or functionalities within a 
    system. By exploiting BOLA, attackers can circumvent proper authorization 
    mechanisms, posing a significant security risk. Conducting this test helps 
    organizations identify and address weaknesses in object-level authorization, 
    enhancing overall system security."
  impact: >
    "Exploiting Broken Object Level Authorization (BOLA) through the manipulation of 
    URL paths can have severe impacts on system security. Unauthorized access to 
    sensitive data or functionalities may lead to unauthorized disclosure, 
    alteration, or deletion of critical information. This security vulnerability 
    could result in a compromise of user privacy, financial losses, and reputational 
    damage for the affected organization. Addressing BOLA vulnerabilities is crucial 
    to mitigate these potential impacts and maintain the integrity of the system."
  remediation: "To mitigate security vulnerabilities from API Version ID manipulation in the URL path, enforce strict server-side authorization checks. Ensure that access controls are not solely reliant on URL paths and properly validate user permissions regardless of the API Version IDs provided. Strengthen object-level authorization mechanisms to prevent unauthorized access attempts and protect sensitive data or functionalities from exposure to unauthorized users. Improving security measures helps address weaknesses in the authorization process and enhances overall system security."
  category:
    name: BOLA
    shortName: BOLA
    displayName: Broken Object Level Authorization (BOLA)
  subCategory: BOLA_URL_REPLACE_API_VERSION
  severity: HIGH
  tags: 
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://www.akto.io/blog/bola-exploitation-using-unauthorized-uuid-on-api-endpoint"
    - "https://www.akto.io/blog/what-is-broken-object-level-authorization-bola"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa1-broken-object-level-authorization.md"
    - "https://cwe.mitre.org/data/definitions/284.html"
    - "https://cwe.mitre.org/data/definitions/285.html"
    - "https://cwe.mitre.org/data/definitions/639.html"
  cwe:
    - CWE-284
    - CWE-285
    - CWE-639
  cve:
    - CVE-2022-34770

auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  private_variable_context:
    gt: 0


wordLists:
  apiVersions:
    - v0
    - v1
    - v2
    - v3
    - v4
    - v5

execute:
  type: multiple
  requests:
    - req:
      - replace_auth_header: true
      - modify_url:
          token_replace:
            location: 1
            replace_with: ${apiVersions}
      - success: vulnerable
      - failure: x2
    - req:
      - replace_auth_header: true
      - modify_url:
          token_replace:
            location: 2
            replace_with: ${apiVersions}
      - success: vulnerable
      - failure: x3
    - req:
      - replace_auth_header: true
      - modify_url:
          token_replace:
            location: 3
            replace_with: ${apiVersions}
      - success: vulnerable
      - failure: x4
    - req:
      - replace_auth_header: true
      - modify_url:
          token_replace:
            location: 4
            replace_with: ${apiVersions}
validate:
  response_code:
    gte: 200
    lt: 300
  url:
    endpoint_in_traffic_context: false
  response_payload:
    length:
      gt: 0
    percentage_match:
      gte: 90
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
