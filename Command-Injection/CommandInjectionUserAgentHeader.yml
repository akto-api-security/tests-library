id: COMMAND_INJECTION_USER_AGENT_HEADER
info:
  name: "Command injection in User-Agent Header"
  description: "Command injection in the User-Agent header is a security vulnerability where an attacker includes malicious commands within the User-Agent field of an HTTP request header. When the server processes this header without proper validation or sanitization, the embedded commands can be executed on the server. This can lead to unauthorized access, data leakage, and control over the server, posing a significant security risk."
  details: >
    "Command injection in the User-Agent header involves an attacker embedding malicious commands within the User-Agent field of an HTTP request. When the server reads and processes this header, it may execute the malicious commands if proper input validation and sanitization are lacking. This type of attack can exploit web applications or services that log or otherwise utilize the User-Agent header without adequate security measures, potentially compromising server integrity and data security."
  impact: "The impact of command injection in the User-Agent header can be severe, leading to unauthorized command execution on the server. Attackers can gain access to sensitive information, modify server configurations, or take control of the server. This can result in data breaches, service disruptions, financial losses, and significant damage to an organization's reputation. Robust input validation and sanitization are essential to prevent such attacks."
  category:
    name: COMMAND_INJECTION
    shortName: Command Injection
    displayName: Command Injection
  subCategory: COMMAND_INJECTION_USER_AGENT_HEADER
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://twitter.com/trbughunters/status/1283133356922884096"
  cwe:
    - CWE-77
  cve:
    - CVE-2023-25826
    - CVE-2023-41031

settings:
  nature: INTRUSIVE
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: "OPTIONS"
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_headers:
    for_one:
      key:
        regex: "^User-Agent$|^user-agent$"
        extract: userKey
      value:
        extract: userVal
wordLists:
  specialOSPayloads:
    - " && id"
    - " || id"
execute:
  type: single
  requests:
    - req:
        - modify_header:
            userKey: ${userVal}${specialOSPayloads}
validate:
  response_payload:
    length:
      gt: 0
    contains_all:
      - "uid="
      - "gid="
      - "groups="
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - </html>
      - <html>
