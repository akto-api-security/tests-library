id: COMMAND_INJECTION_WITH_ENCODING_AND_CHAINING
info:
  name: "Command injection by chaining system commands and using Encoding and Character Manipulation"
  description: "Command injection by chaining system commands with encoding and character manipulation involves exploiting vulnerabilities to execute commands in a sequence while bypassing input validation. Attackers use techniques like encoding payloads (e.g., URL encoding) and manipulating special characters to evade security filters and inject malicious commands. This method allows for sophisticated attacks by combining multiple commands and using encoded or obfuscated inputs to gain unauthorized access or control over the system."
  details: >
    "Command injection by chaining system commands with encoding and character manipulation exploits vulnerabilities by combining multiple commands and disguising them with encoding techniques. Attackers might use URL encoding or base64 encoding to obfuscate payloads, allowing them to bypass input filters. For example, they could inject a sequence of commands separated by ;, with some commands encoded to evade detection. This approach can lead to complex attacks, including unauthorized access and system control, by leveraging encoded input to exploit security weaknesses and execute malicious operations."
  impact: "The impact of command injection through chaining and encoding can be severe, as it enables attackers to bypass security mechanisms and execute a series of malicious commands. By using encoding and character manipulation, attackers can evade detection and input filters, leading to unauthorized access, data breaches, or system compromise. This method can facilitate sophisticated attacks, allowing attackers to execute complex operations, escalate privileges, and manipulate or exfiltrate sensitive information, significantly compromising the security and integrity of the system."
  category:
    name: COMMAND_INJECTION
    shortName: Command Injection
    displayName: Command Injection
  subCategory: COMMAND_INJECTION_WITH_ENCODING_AND_CHAINING
  severity: CRITICAL
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://twitter.com/trbughunters/status/1283133356922884096"
  cwe:
    - CWE-77
  cve:
    - CVE-2023-25826
    - CVE-2023-41031

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
  HIPAA:
    - 45 CFR ยง 164.312(c)(1)
    - 45 CFR ยง 164.306(a)
  SOC 2:
    - System and Communications Controls
    - Logical and Physical Access Controls
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.6
  ISO 27001:
    - A.12.6.1
    - A.14.2.5
  NIST 800-53:
    - SI-10
    - SI-3
  CSA CCM:
    - APP-01
    - TVM-02
  CIS Controls:
    - IG1 Safeguard 16.2
    - IG2 Safeguard 18.3
  FedRAMP:
    - SI-10
    - SI-3
  NIST 800-171:
    - 3.14.1
    - 3.14.2
  FISMA:
    - SI-10
    - SI-3
  Cybersecurity Maturity Model Certification (CMMC):
    - SI.1.211
    - SI.2.216
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: "OPTIONS"
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  or:
    - request_payload:
        for_one:
          key:
            regex: .*
            extract: changed_body_key
          value:
            extract: changed_body_value
    - query_param:
        for_one:
          key:
            regex: .*
            extract: changed_query_key
          value:
            regex: .*
            extract: changed_query_value
wordLists:
  specialOSPayloads:
    - "id %26%26 date +\"%d-%B-%Y\""
    - "id%20&&%20date +\"%d-%B-%Y\""
    - "id\ndate +\"%d-%B-%Y\""
    - "id\rdate +\"%d-%B-%Y\""
    - "id\t&&\tdate +\"%d-%B-%Y\""
    - "id%00date +\"%d-%B-%Y\""
execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            changed_body_key: ${specialOSPayloads}
        - modify_query_param:
            changed_query_key: ${specialOSPayloads}
validate:
  response_payload:
    length:
      gt: 0
    contains_all:
      - "uid="
      - "gid="
      - "groups="
    contains_either:
      - "-January-"
      - "-February-"
      - "-March-"
      - "-April-"
      - "-May-"
      - "-June-"
      - "-July-"
      - "-August-"
      - "-September-"
      - "-October-"
      - "-November-"
      - "-December-"
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - <html>
      - </html>
