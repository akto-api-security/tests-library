id: COMMAND_INJECTION_SYS_INFO_RETRIEVAL
info:
  name: "Command injection for system info retrieval"
  description: "Command injection for system information retrieval involves exploiting vulnerabilities to execute arbitrary commands that extract detailed system data. By injecting commands into vulnerable applications, attackers can gain insights into the operating system, hardware, network configuration, and installed software. This information can be crucial for planning further targeted attacks, identifying potential weaknesses, and compromising the system."
  details: >
    "Command injection for system information retrieval leverages vulnerabilities in applications to run arbitrary system commands. Through this method, attackers can execute commands like uname -a, whoami, or ifconfig to gather detailed information about the operating system, user privileges, and network interfaces. This extracted data helps attackers understand the system's configuration and environment, enabling them to plan more effective and targeted attacks."
  impact: "The impact of command injection for system information retrieval can be significant, as it allows attackers to gather critical details about the target system. With this information, attackers can identify potential vulnerabilities, tailor their attacks to exploit specific system weaknesses, and gain unauthorized access or escalate privileges. This can lead to data breaches, system compromise, and a broader attack surface, ultimately jeopardizing the security and integrity of the affected system."
  category:
    name: COMMAND_INJECTION
    shortName: Command Injection
    displayName: Command Injection
  subCategory: COMMAND_INJECTION_SYS_INFO_RETRIEVAL
  severity: CRITICAL
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://twitter.com/trbughunters/status/1283133356922884096"
  cwe:
    - CWE-77
  cve:
    - CVE-2023-25826
    - CVE-2023-41031

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards: compliance/command-injection.conf

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: "OPTIONS"
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - "Linux"
      - "Kernel"
      - "root"
      - "en0: flags="
      - "<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST>"
      - "prefixlen"
      - "filesystem"
      - "capacity"
      - "buff/cache"
  or:
    - request_payload:
        for_one:
          key:
            regex: .*
            extract: changed_body_key
          value:
            extract: changed_body_value
    - query_param:
        for_one:
          key:
            regex: .*
            extract: changed_query_key
          value:
            regex: .*
            extract: changed_query_value
wordLists:
  specialOSPayloads:
    - "uname -a"
    - "ifconfig"
    - "ps aux"
    - "df -h"
    - "free -m"

execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            changed_body_key: ${specialOSPayloads}
        - modify_query_param:
            changed_query_key: ${specialOSPayloads}
validate:
  response_payload:
    length:
      gt: 0
    contains_either:
      - "Linux"
      - "Kernel"
      - "en0: flags="
      - "<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST>"
      - "prefixlen"
      - "filesystem"
      - "capacity"
      - "buff/cache"
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - <html>
      - </html>
