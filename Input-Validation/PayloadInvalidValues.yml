id: PAYLOAD_INVALID_VALUES
info:
  name: Payload Invalid Values
  description: >
    This test evaluates how the server handles various invalid payloads in HTTP requests to identify potential vulnerabilities arising from improper validation and processing.
  details: >
    The test involves sending a series of HTTP requests with different types of invalid payloads, which may include empty bodies, malformed JSON structures, and unsupported formats.
  impact: >
    Servers that do not handle invalid payloads appropriately may be susceptible to a range of security issues, including denial of service and unexpected application behavior.

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: PAYLOAD_INVALID_VALUES
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(c)(1)
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
  SOC 2:
    - Secure Application Development Controls
    - System and Communication Security
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.5.7
  ISO 27001:
    - A.12.6.1
    - A.14.2.5
  NIST 800-53:
    - SI-10
    - SA-11
  CSA CCM:
    - APP-02
    - TVM-03
  CIS Controls:
    - IG1 Safeguard 16.2
    - IG2 Safeguard 18.3
  FedRAMP:
    - SI-10
    - CA-7
  NIST 800-171:
    - 3.14.1
    - 3.14.2
  FISMA:
    - SI-10
    - SI-3
  Cybersecurity Maturity Model Certification (CMMC):
    - SI.2.216
    - RA.3.141
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
    or:
      - eq: PUT
      - eq: POST
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  query_param:
    for_one:
      key:
        regex: .*
        extractMultiple: queryKeys

wordLists:
  attemptValues:
    - ""
    - "{}"
    - "null"
    - "\0"

execute:
  type: single
  requests:
    - req:
        - replace_body: ${attemptValues}
        - ${queryKeys}:
            for_all:
              - delete_query_param: ${iteratorKey}

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
settings:
  duration: FAST
