id: MANIPULATING_REFUND_TYPE
info:
  name: "Manipulating Refund Type to Exploit Refund Policies"
  description: |
    "This test examines the potential for exploiting refund policies by manipulating the refund type parameter in API requests. The objective is to identify whether users can alter the refund type, such as changing from a partial refund to a full refund, to gain unauthorized advantages or refunds beyond the allowed policy."
  details: |
    "The test involves sending API requests to the order cancellation endpoint with different refund_type parameters, such as full or partial, to determine if the system appropriately validates these inputs. For example, when cancelling an order with the refund_type set to full, the test checks whether the system correctly processes the request based on the item's status, such as shipped or delivered. The goal is to ensure that the application enforces its refund policies correctly and does not allow unauthorized changes to the refund type."
  impact: |
    "Improper handling of the refund type can lead to financial losses and abuse of the refund policy. If users can manipulate the refund type to obtain full refunds where only partial refunds are allowed, it can result in significant revenue leakage and potentially fraudulent claims. Ensuring that refund types are accurately validated and processed according to the established policies is crucial to maintaining the integrity of the refund process and protecting the business from exploitation."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: MANIPULATING_REFUND_TYPE
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
attributes:
  nature: INTRUSIVE
  plan: STANDARD
  duration: FAST
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_payload:
    for_one:
      key:
        regex: "${probableInputParameters}"
        extract: userKey
      value:
        extract: userVal

wordLists:
  probableInputParameters:
    - refundType
    - refund_type
    - refundMethod
    - refundOption
    - refundCategory
    - typeOfRefund
    - refundMode
    - refundChoice
    - refundSelection
    - refundPreference

  probableOutputParameters:
    - success
    - done
    - completed
    - approved
    - confirmed
    - processed
    - finalized
    - granted
    - validated
    - accepted

  attemptValues:
    - full
    - complete
    - "100%"
    - maximum
    - total
    - entire
    - fullAmount
    - all
    - whole
    - fullRefund

execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            userKey: ${attemptValues}

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
    contains_either: ${probableOutputParameters}
