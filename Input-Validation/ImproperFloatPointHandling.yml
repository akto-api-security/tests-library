id: IMPROPER_FLOAT_POINT_HANDLING
info:
  name: "Improper Float Point Handling"
  description: >
    "This test evaluates the system's handling of floating-point numbers in financial or transactional operations. The goal is to identify vulnerabilities that could arise from improper rounding, precision errors, or inconsistencies in calculations involving floating-point numbers."
  details: >
    "The test involves sending API requests that use floating-point values with varying degrees of precision to check how the system processes these numbers. For example, submitting transaction amounts with excessive decimal places or near-limit precision values can test if the system correctly rounds or truncates numbers and maintains consistent accuracy across transactions. The test checks whether the application handles floating-point arithmetic correctly to prevent unexpected results or system errors."
  impact: >
    "Improper handling of floating-point numbers can lead to significant vulnerabilities, such as incorrect financial calculations, data corruption, or even system crashes due to overflows or unexpected precision errors. If the system fails to handle floating-point values accurately, it could result in financial discrepancies, unauthorized transactions, or denial of service. Ensuring robust validation and handling of floating-point numbers is critical to maintain the integrity, reliability, and security of financial and transactional operations."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: IMPROPER_FLOAT_POINT_HANDLING
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(c)(1)
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
  SOC 2:
    - Secure Application Development Controls
    - System and Communication Security
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.5.7
  ISO 27001:
    - A.12.6.1
    - A.14.2.5
  NIST 800-53:
    - SI-10
    - SA-11
  CSA CCM:
    - APP-02
    - TVM-03
  CIS Controls:
    - IG1 Safeguard 16.2
    - IG2 Safeguard 18.3
  FedRAMP:
    - SI-10
    - CA-7
  NIST 800-171:
    - 3.14.1
    - 3.14.2
  FISMA:
    - SI-10
    - SI-3
  Cybersecurity Maturity Model Certification (CMMC):
    - SI.2.216
    - RA.3.141
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
    contains_either: ${probableOutputParameters}
  request_payload:
    for_one:
      key:
        regex: "${probableInputParameters}"
        extract: userKey
      value:
        datatype: number
        extract: userVal

wordLists:
  probableInputParameters:
    - amount
    - price
    - fees
    - total
    - cost
    - balance
    - transactionAmount
    - subtotal
    - payment
    - charge
    - rate
    - tax
    - commission
    - interest
    - discount
    - value

  probableOutputParameters:
    - success
    - successful
    - validated
    - approved
    - confirmed
    - processed
    - verified
    - completed
    - accurate
    - adjusted
    - recalculated
    - calculationValidated

  responseErrorList:
    - Error
    - Internal Server
    - Failed
    - Unauthorized
    - access denied
    - Forbidden
    - Method Not allowed
    - Gateway timeout
    - request timeout
    - server error
    - server busy
    - authentication error
    - authorization error
    - validation error
    - Permission Denied
    - invalid token
    - token expired
    - session expired
    - session timeout
    - unexpected error
    - unable to process request
    - bad request
    - service unavailable
    - account is locked
    - account is blocked
    - multiple failed attempts
    - Attention Required!
    - CloudFlare
    - "Sorry, you have been blocked"

  attemptValues:
    - ".999999999"
    - ".012002130"
    - ".21324324563"

execute:
  type: multiple
  requests:
    - req:
        - delete_body_param: ${userKey}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
            and:
              - response_payload:
                  not_contains: ${responseErrorList}
              - response_payload:
                  not_contains: ${probableOutputParameters}
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: ${userVal}${attemptValues}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              not_contains: ${responseErrorList}
              contains_either: ${probableOutputParameters}
        - success: vulnerable
