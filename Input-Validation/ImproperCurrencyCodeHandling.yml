id: IMPROPER_CURRENCY_CODE_HANDLING
info:
  name: "Improper Currency Code Handling"
  description: |
    "This test evaluates the system's ability to correctly handle and validate currency codes, ensuring that only valid and supported currency codes are accepted for transactions. The objective is to identify vulnerabilities that could allow users to submit invalid or unsupported currency codes, potentially leading to financial inaccuracies or processing errors."
  details: |
    "The test involves sending API requests with various currency codes, including invalid or unsupported ones, to check whether the application correctly validates and processes the input."
  impact: |
    "Improper handling of currency codes can lead to financial discrepancies, incorrect processing of transactions, and potential vulnerabilities that could be exploited by malicious users. If the server accepts invalid currency codes, it may result in inaccurate financial records, incorrect currency conversion, or failures in payment processing. Ensuring robust validation of currency codes is essential to maintain financial accuracy and integrity within the application."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: IMPROPER_CURRENCY_CODE_HANDLING
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
settings:
  nature: INTRUSIVE
  plan: PRO
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_payload:
    for_one:
      key:
        regex: "${probableInputParameters}"
        extract: userKey

wordLists:
  probableInputParameters:
    - currency_code
    - currencyCode
    - currency
    - currCode
    - currencySymbol
    - currencyType
    - paymentCurrency
    - transactionCurrency

  attemptValues:
    - XYZ
    - ABC
    - 123
    - "###"
    - "NULL"
    - NaN
    - TEST
    - DUMMY
    - FAKE
    - NONE
    - INVALID
    - ZZZ
    - CUR
    - QQQ
    - UNDEFINED
    - CUSTOM
    - ADMIN
    - DEBUG

  responseErrorList:
    - Error
    - Internal Server
    - Failed
    - Unauthorized
    - access denied
    - Forbidden
    - Method Not allowed
    - Gateway timeout
    - request timeout
    - server error
    - server busy
    - authentication error
    - authorization error
    - validation error
    - Permission Denied
    - invalid token
    - token expired
    - session expired
    - session timeout
    - unexpected error
    - unable to process request
    - bad request
    - service unavailable
    - account is locked
    - account is blocked
    - multiple failed attempts
    - Attention Required!
    - CloudFlare
    - "Sorry, you have been blocked"

execute:
  type: multiple
  requests:
    - req:
        - delete_body_param: ${userKey}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              not_contains: ${responseErrorList}
        - success: exit
        - failure: x2
    - req:
        - modify_body_param:
            userKey: ${attemptValues}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              percentage_match_schema:
                gt: 90
              not_contains: ${responseErrorList}
        - success: vulnerable
