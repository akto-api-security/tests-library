id: PARAMETER_MANIPULATION_DISCOUNT_ABUSE
info:
  name: Parameter manipulation by abusing discount values by using additional discount coupons
  description: >
    "This test involves manipulating discount parameters by applying multiple or additional discount coupons to a single transaction in ways not intended by the application. The goal is to evaluate how the system handles multiple discount applications and to ensure it properly validates and limits discounts to prevent abuse or exploitation."
  details: >
    "The test focuses on scenarios where users might try to stack multiple discount coupons or use invalid combinations of discounts that exceed the allowed limits. This includes applying multiple discount codes in quick succession, using expired or restricted coupons, or combining promotional discounts in ways that the system was not designed to handle. By testing these cases, the objective is to identify flaws in the validation logic that could allow users to receive unauthorized discounts or benefits, ultimately safeguarding the integrity of promotional offers."
  impact: >
    "Improper handling of multiple or stacked discount applications can result in significant financial losses, revenue leakage, and damage to the company's promotional strategy. Exploiting such vulnerabilities could allow users to receive unintended discounts, abuse loyalty programs, or combine offers that were not meant to be combined. Ensuring robust validation and enforcement of discount rules is essential to protect the organization's financial interests, maintain fair pricing policies, and uphold the credibility of its promotions."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: PARAMETER_MANIPULATION_DISCOUNT_ABUSE
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
attributes:
  nature: INTRUSIVE
  plan: STANDARD
  duration: FAST
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts

    # Here we check for the modified values of contextual keys in response.
    for_one:
      key:
        regex: "${probableOutputParameters}"
        extract: outputUserKey
      value:
        datatype: number
        extract: outputUserValue
  or:
    - request_payload:
        for_one:
          key:
            regex: "${probableInputParameters}"
            extract: userKey
          value:
            extract: userVal
wordLists:
  probableInputParameters:
    - discountCode
    - promoCode
    - voucherCode
    - coupon
    - couponCode
    - giftCardCode
    - specialOfferCode
    - loyaltyCode
    - rebateCode
    - rewardCode
    - eCoupon
    - savingsCode
    - priceAdjustmentCode
    - memberDiscountCode

  probableOutputParameters:
    - price
    - discountApplied
    - totalPrice
    - finalDiscount
    - discountedPrice
    - totalAfterDiscount
    - netPrice
    - priceAfterCoupon
    - amountDue
    - adjustedPrice
    - totalPayable
    - savings
    - effectivePrice

  probableAdditionalInputParameters:
    - additionalDiscountCode
    - extraCouponCode
    - secondaryDiscountCode
    - combinedDiscountCode
    - stackedPromoCode
    - layeredCouponCode
    - bonusVoucherCode
    - multipleDiscountCode
    - surplusDiscountCode
    - specialStackedOffer
    - cumulativeDiscountCode
  codes:
    - ${userVal}
    - ${userVal}0

execute:
  type: single
  requests:
    - req:
        - add_body_param:
            ${probableAdditionalInputParameters}: ${codes}
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
    for_one:
      key:
        eq: "${outputUserKey}"
      value:
        neq: "${outputUserValue}"
