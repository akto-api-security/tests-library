id: BYPASS_TRANSACTION_VERIFICATION
info:
  name: "Bypassing User Verification on Transaction APIs"
  description: |
    "This test assesses the ability to bypass user verification requirements in transaction APIs. The goal is to determine if it's possible to execute transactions without proper verification, which should normally be a mandatory step for high-value or sensitive transactions."
  details: |
    "The test involves initiating transactions with verification requirements enabled and then attempting to bypass the verification step."
  impact: |
    "Bypassing user verification can have severe security implications, including unauthorized transactions and potential fraud. If users can bypass verification for high-value or sensitive transactions, it exposes the system to significant financial and security risks. This could result in unauthorized access to funds, financial losses, and damage to the company's reputation. Ensuring robust verification mechanisms are in place and enforced is crucial to safeguarding transaction integrity and preventing abuse."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: BYPASS_TRANSACTION_VERIFICATION
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
settings:
  nature: INTRUSIVE
  plan: STANDARD
  duration: FAST
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_payload:
    for_one:
      key:
        regex: "${probableInputParameters}"
        extract: userKey
      value:
        extract: userVal

wordLists:
  probableInputParameters:
    - verification
    - verificationRequired
    - verified
    - verificationStatus
    - isVerified
    - requireVerification
    - transactionVerification
    - verify

  probableOutputFailParameters:
    - denied
    - failed
    - blocked
    - rejected
    - error
    - notAllowed
    - verificationFailed
    - pending
    - invalid
    - notVerified

  probableOutputPassParameters:
    - success
    - bypassed
    - passed
    - successful
    - approved
    - completed
    - verified
    - confirmed
    - processed
    - acceptable

  responseErrorList:
    - Error
    - Internal Server
    - Failed
    - Unauthorized
    - access denied
    - Forbidden
    - Method Not allowed
    - Gateway timeout
    - request timeout
    - server error
    - server busy
    - authentication error
    - authorization error
    - validation error
    - Permission Denied
    - invalid token
    - token expired
    - session expired
    - session timeout
    - unexpected error
    - unable to process request
    - bad request
    - service unavailable
    - account is locked
    - account is blocked
    - multiple failed attempts
    - Attention Required!
    - CloudFlare
    - "Sorry, you have been blocked"

execute:
  type: multiple
  requests:
    - req:
        - modify_body_param:
            userKey: false
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              not_contains: ${responseErrorList}
              contains_either: ${probableOutputFailParameters}
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: true
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              not_contains: ${responseErrorList}
              contains_either: ${probableOutputPassParameters}
        - success: vulnerable
