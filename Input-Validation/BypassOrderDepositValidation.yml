id: BYPASS_ORDER_DEPOSIT_VALIDATION
info:
  name: "Bypass Deposit Validation for Orders and Pre-Orders"
  description: |
    "This test examines the ability to bypass the deposit validation mechanism for orders and pre-orders. The objective is to determine whether users can manipulate the deposit amount to secure a reservation or pre-order a product without meeting the required deposit criteria."
  details: |
    "The test involves sending API requests with different values to check if the system accurately validates the deposit requirement before confirming an order or reservation."
  impact: |
    "Bypassing deposit validation can lead to potential financial losses and inventory management issues. If users are able to secure reservations or pre-orders without providing the correct deposit, it could result in unpaid or incomplete transactions, reduced inventory control, and abuse of the ordering system. Ensuring proper validation and enforcement of deposit requirements is crucial to maintaining financial integrity, protecting against fraudulent activity, and ensuring fair business practices."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: BYPASS_ORDER_DEPOSIT_VALIDATION
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(c)(1)
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
  SOC 2:
    - Secure Application Development Controls
    - System and Communication Security
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.5.7
  ISO 27001:
    - A.12.6.1
    - A.14.2.5
  NIST 800-53:
    - SI-10
    - SA-11
  CSA CCM:
    - APP-02
    - TVM-03
  CIS Controls:
    - IG1 Safeguard 16.2
    - IG2 Safeguard 18.3
  FedRAMP:
    - SI-10
    - CA-7
  NIST 800-171:
    - 3.14.1
    - 3.14.2
  FISMA:
    - SI-10
    - SI-3
  Cybersecurity Maturity Model Certification (CMMC):
    - SI.2.216
    - RA.3.141
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_payload:
    for_one:
      key:
        regex: "${probableInputParameters}"
        extract: userKey
      value:
        extract: userVal

wordLists:
  probableInputParameters:
    - depositAmount
    - initialPayment
    - downPayment
    - upfrontAmount
    - bookingDeposit
    - preOrderAmount
    - reservationFee
    - advancePayment
    - securityDeposit
    - partialPayment
    - initialDeposit
    - holdingDeposit
    - advanceAmount
    - minimumDeposit
    - amountDue

  probableOutputPassParameters:
    - reserved
    - confirmed
    - success
    - reservationConfirmed
    - bookingSuccess
    - depositAccepted
    - orderPlaced
    - preOrderConfirmed
    - reservationSuccess
    - paymentReceived
    - validationPassed
    - orderConfirmed
    - bookingConfirmed
    - holdPlaced
    - secured

  attemptValues:
    - 0
    - 1
    - 5
    - 10

execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            userKey: ${attemptValues}

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
    contains_either: ${probableOutputPassParameters}
settings:
  duration: FAST
