id: CONDITIONAL_PROMO_CODE_EXPLOITATION
info:
  name: "Exploiting Conditional Promo Codes"
  description: |
    "This test evaluates whether the system correctly enforces the conditions tied to promotional codes. The goal is to identify vulnerabilities that could allow users to manipulate the conditions of a promotion, such as receiving discounts or benefits without meeting the necessary purchase requirements."
  details: |
    "The test involves sending API requests with promo codes that have specific conditions, such as 'Buy One Get One Free' (BUY1GET1), and attempting to exploit these conditions by altering purchase quantities or other parameters. For example, the system should only apply the promotion when the required number of items is purchased. This test checks whether the application accurately validates the conditions and ensures that users cannot claim promotional benefits without fulfilling the required actions."
  impact: |
    "Exploiting conditional promo codes can lead to significant financial losses and disrupt the intended effectiveness of promotional strategies. If users can manipulate the conditions to receive discounts or benefits without qualifying, it diminishes the value of the promotion and may result in an increase in fraudulent activity. Ensuring strict validation of promotional conditions is crucial to protect revenue, maintain the integrity of marketing campaigns, and prevent abuse of promotional offers."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: CONDITIONAL_PROMO_CODE_EXPLOITATION
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
attributes:
  nature: INTRUSIVE
  plan: STANDARD
  duration: FAST
compliance_standards: compliance/input-validation.conf

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  and:
    - or:
        - request_payload:
            for_one:
              key:
                regex: "${probableInputParameters1}"
                extract: userKey1
              value:
                neq: 1
                extract: userVal1
        - request_payload:
            for_one:
              key:
                regex: "${probableInputParameters2}"
                extract: userKey2
              value:
                extract: userVal2
    - request_payload:
        contains_either: "${probableInputVerificationParameters}"
wordLists:
  probableInputVerificationParameters:
    - promoCode
    - promotionCode
    - discountCode
    - voucherCode
    - offerCode
    - specialCode
    - couponCode
    - campaignCode
    - dealCode

  probableInputParameters1:
    - itemsPurchased
    - items
    - quantityPurchased
    - productQuantity
    - purchaseCount
    - totalItems
    - numberOfItems
    - unitsBought
    - productsBought
    - cartQuantity

  probableInputParameters2:
    - applyPromo
    - usePromotion
    - activatePromo
    - applyDiscount
    - redeemCode
    - useCoupon
    - applyOffer
    - enablePromo
    - applyCode
    - activateDiscount

  probableOutputParameters:
    - success
    - promotionApplied
    - promoApplied
    - discountApplied
    - offerActivated
    - dealApplied
    - promoSuccess
    - codeRedeemed
    - benefitGranted
    - promoValid
    - appliedSuccessfully

execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            userKey1: 1
        - modify_body_param:
            userKey2: true

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
    contains_either: ${probableOutputParameters}
