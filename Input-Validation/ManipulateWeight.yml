id: MANIPULATE_WEIGHT
info:
  name: "Manipulate Weight Input Parameters in Shipping or Logistics Related APIs"
  description: >
    "This test evaluates how well the application handles and validates weight input parameters in shipping or logistics-related APIs. The objective is to identify potential vulnerabilities or flaws that may arise from manipulating weight values, which could affect shipping costs and other logistics functions."
  details: >
    "The test involves modifying weight parameters in API requests to observe how the system calculates and responds to changes in weight."
  impact: >
    "Improper handling of weight input parameters can lead to significant issues, such as incorrect shipping costs, financial losses, or logistical errors. If an attacker or user can manipulate weight values, they may exploit the system to reduce shipping costs fraudulently or cause discrepancies in logistics operations. This could result in financial losses for the company, customer dissatisfaction, and potential damage to the company's reputation. Ensuring accurate and secure weight handling is crucial for maintaining proper billing, operational efficiency, and customer trust."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: MANIPULATE_WEIGHT
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
settings:
  nature: INTRUSIVE
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts

    # Here we check for the modified values of contextual keys in response.
    for_one:
      key:
        regex: "${probableOutputParameters}"
        extract: outputUserKey
      value:
        extract: outputUserValue
  request_payload:
    for_one:
      key:
        regex: "${probableInputParameters}"
        extract: userKey
      value:
        extract: userVal

wordLists:
  probableInputParameters:
    - weight
    - load

  probableOutputParameters:
    - shippingCost
    - shippingFees
    - shipping
    - cost
    - fees

  inputWeights:
    - "-1kg"
    - "-1g"
    - "-0.1kg"
    - "-0.1g"
    - "999999999kg"
    - "0.000000001g"
    - "0.00000001kg"

execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            userKey: ${inputWeights}

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
    for_one:
      key:
        eq: "${outputUserKey}"
      value:
        neq: "${outputUserValue}"

