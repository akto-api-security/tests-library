id: REFERRAL_EXPLOITATION
info:
  name: Exploit Referral Programs
  description: |
    "This test evaluates the potential for exploiting referral programs within an application by manipulating referral codes to gain unauthorized rewards or benefits. The objective is to identify weaknesses in the referral system that may allow users to abuse or exploit referral codes for undeserved rewards."
  details: |
    "The test involves sending API requests with modified or multiple referral codes to observe how the system processes these inputs."
  impact: |
    "Exploiting referral programs can lead to financial losses and reward abuse, as users might gain unauthorized benefits or rewards through manipulation. This could result in increased costs for the company, unfair advantages for certain users, and potential damage to the referral program's integrity. Ensuring robust validation and handling of referral codes is crucial to prevent exploitation, maintain program fairness, and protect the company's financial interests."
  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: REFERRAL_EXPLOITATION
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
settings:
  nature: INTRUSIVE
  plan: FREE
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
    for_one:
      key:
        regex: "${probableOutputParameters}"
        extract: outputUserKey
      value:
        extract: outputUserValue
  request_payload:
    for_one:
      key:
        regex: "${probableInputParameters}"
        extract: userKey
      value:
        extract: userVal

wordLists:
  probableInputParameters:
    - referralCode
    - referral
    - inviteCode
    - joiningCode
  probableOutputParameters:
    - reward
    - rewardAmount

  codes:
    source: sample_data
    key:
      regex: referralCode|referral|inviteCode|joiningCode
    location: payload

execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            userKey: "${codes}, ${userVal}"

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
    for_one:
      key:
        eq: "${outputUserKey}"
      value:
        neq: "${outputUserValue}"
