id: IMPROPER_CHARACTER_HANDLING
info:
  name: Improper Character Handling in Username
  description: |
    "This test involves assessing how the application handles improper or unexpected characters in the username field, such as special characters, whitespace, escape sequences, or non-ASCII symbols. The objective is to determine whether the application correctly validates and sanitizes user inputs to prevent security vulnerabilities or application errors caused by improper character handling."
  details: |
    "The test focuses on scenarios where users or attackers may input usernames containing special characters (e.g., @, #, $, %), whitespace, non-ASCII characters (e.g., emojis, accented letters), or escape sequences (e.g., \n, \r). It checks if the application properly processes and sanitizes these inputs, avoiding issues such as SQL injection, cross-site scripting (XSS), denial of service (DoS) attacks, or unintended behavior in the user interface. This test aims to identify any flaws in input validation or encoding mechanisms that could lead to vulnerabilities or errors."
  impact: |
    "Improper handling of characters in usernames can have serious security implications, including injection attacks (such as SQL injection or XSS), unauthorized access, or denial of service. If an application does not correctly validate or sanitize usernames, it may allow attackers to exploit these weaknesses to gain unauthorized access, disrupt services, or compromise sensitive data. Ensuring proper character handling and robust input validation is crucial to maintain the application's security, functionality, and reliability."
  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: IMPROPER_CHARACTER_HANDLING
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: compliance/input-validation.conf
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_payload:
    for_one:
      key:
        regex: "${probableInputParameters}"
        extract: userKey
      value:
        extract: userVal
wordLists:
  probableInputParameters:
    - name
    - username
    - login
    - user
    - userid
    - user_id
    - login_id
    - email
    - account
    - account_id
    - user_name
    - uname
    - profile
    - profile_id
    - signin
    - user_login
    - user_account
    - user_email

  invalidCharacters:
    - '&'
    - =
    - '-'
    - +
    - ","
    - '...'
    - '>'
    - <
    - "'"
execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            userKey: "${invalidCharacters}${userVal}${invalidCharacters}"
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    percentage_match:
      gte: 90
      neq: 100
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
      - "failure"
      - "not found"
