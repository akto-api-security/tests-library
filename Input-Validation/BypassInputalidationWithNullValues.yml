id: BYPASS_INPUT_VALIDATION_WITH_NULL_VALUES
info:
  name: "Bypass Input Validation with Null Values"
  description: >
    "This test evaluates the system's ability to handle and validate inputs correctly when null characters or null values are included. The objective is to identify vulnerabilities that could allow users to bypass input validation checks by inserting null characters or submitting null values, potentially leading to security breaches or unexpected application behavior."
  details: >
    "The test involves sending API requests with null characters (`\u0000`) or null values included within the input data, such as in fields for passwords, usernames, or other sensitive information."
  impact: >
    "Bypassing input validation with null values can lead to security vulnerabilities, unauthorized access, data corruption, or other unexpected behaviors. If users can manipulate input validation by inserting null characters, they could potentially gain access to restricted areas, bypass authentication mechanisms, or exploit other weaknesses in the application. Ensuring robust validation and sanitization of all input data, including null characters, is crucial to maintaining the security and integrity of the application."

  category:
    name: INPUT
    shortName: Input Validation
    displayName: Input Validation (INPUT)
  subCategory: BYPASS_INPUT_VALIDATION_WITH_NULL_VALUES
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/
    - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
    - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
    - CWE-20
  cve:
    - CVE-2018-20679
    - CVE-2019-14271

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(c)(1)
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
  SOC 2:
    - Secure Application Development Controls
    - System and Communication Security
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.5.7
  ISO 27001:
    - A.12.6.1
    - A.14.2.5
  NIST 800-53:
    - SI-10
    - SA-11
  CSA CCM:
    - APP-02
    - TVM-03
  CIS Controls:
    - IG1 Safeguard 16.2
    - IG2 Safeguard 18.3
  FedRAMP:
    - SI-10
    - CA-7
  NIST 800-171:
    - 3.14.1
    - 3.14.2
  FISMA:
    - SI-10
    - SI-3
  Cybersecurity Maturity Model Certification (CMMC):
    - SI.2.216
    - RA.3.141
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: OPTIONS
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts

  request_payload:
    for_one:
      key:
        regex: .*
        extract: userKey
      value:
        extract: userVal

wordLists:
  nullValues:
    - \u0000
    - \0
    - "NULL"
    - "null"
    - "0000"
    - \x00
    - "\0"
    - "\0"
    - NUL
    - "NUL"
    - "\0"
    - "\000"
    - 0x00
    - "\0null"

  responseErrorList:
    - Error
    - Internal Server
    - Failed
    - Unauthorized
    - access denied
    - Forbidden
    - Method Not allowed
    - Gateway timeout
    - request timeout
    - server error
    - server busy
    - authentication error
    - authorization error
    - validation error
    - Permission Denied
    - invalid token
    - token expired
    - session expired
    - session timeout
    - unexpected error
    - unable to process request
    - bad request
    - service unavailable
    - account is locked
    - account is blocked
    - multiple failed attempts
    - Attention Required!
    - CloudFlare
    - "Sorry, you have been blocked"

execute:
  type: multiple
  requests:
    - req:
        - delete_body_param: ${userKey}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              not_contains: ${responseErrorList}
        - success: exit
        - failure: x2
    - req:
        - modify_body_param:
            userKey: ${userVal}${nullValues}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              percentage_match:
                gte: 90
              percentage_match_schema:
                gt: 90
              not_contains: ${responseErrorList}
        - success: vulnerable
