id: MCP_COMMAND_INJECTION_BASE64_ENCODING_CHAINED
info:
  name: Command injection via base64 encoding with echo and chained system instruction (MCP)
  description: Command injection via base64 encoding with `echo` and chained system
    instructions involves exploiting vulnerabilities by encoding malicious commands
    in base64 format. Attackers inject these encoded commands into an application,
    which then decodes and executes them using `echo` and other chained system instructions.
    This technique allows attackers to bypass input validation and execute complex
    command sequences, potentially leading to unauthorized access, data manipulation,
    or system compromise by leveraging obfuscated payloads.
  details: '"Command injection via base64 encoding with `echo` and chained system
    instructions involves encoding malicious payloads in base64 to evade detection
    and input validation. Attackers inject these encoded commands into an application,
    which decodes them using `echo` or similar mechanisms, and then executes them
    as part of a chain of system instructions. By chaining these commands, attackers
    can perform complex operations, access sensitive data, or modify system configurations,
    leveraging the encoding to bypass security filters and execute harmful actions."

    '
  impact: The impact of command injection via base64 encoding with `echo` and chained
    system instructions can be severe, as it allows attackers to bypass security filters
    and execute obfuscated commands. This method can lead to unauthorized access,
    data breaches, and system compromise by executing complex sequences of operations.
    The use of base64 encoding to obscure payloads makes it harder for security mechanisms
    to detect and prevent the attack, increasing the risk of severe consequences for
    system integrity and confidentiality.
  category:
    name: MCP
    shortName: MCP
    displayName: Model Context Protocol (MCP) Security
  subCategory: MCP_COMMAND_INJECTION_BASE64_ENCODING_CHAINED
  severity: CRITICAL
  tags:
  - Business logic
  - OWASP top 10
  - HackerOne top 10
  references:
  - https://twitter.com/trbughunters/status/1283133356922884096
  cwe:
  - CWE-77
  cve:
  - CVE-2023-25826
  - CVE-2023-41031
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    eq: POST
  request_payload:
    contains_all:
    - jsonrpc
    - method
    - id
    for_one:
      key:
        regex: ^(?!id|params|method|jsonrpc|name)
        extract: changed_body_key
      value:
        extract: changed_body_value
wordLists:
  specialOSPayloads:
  - eval "$(echo "aWQgJiYgZGF0ZSArIiVkLSVCLSVZIg==" | base64 --decode)"
execute:
  type: single
  requests:
  - req:
    - modify_body_param:
        changed_body_key: ${specialOSPayloads}
validate:
  response_payload:
    length:
      gt: 0
    contains_all:
    - uid=
    - gid=
    - groups=
    contains_either:
    - -January-
    - -February-
    - -March-
    - -April-
    - -May-
    - -June-
    - -July-
    - -August-
    - -September-
    - -October-
    - -November-
    - -December-
    not_contains:
    - Error
    - Internal Server
    - Failed
    - Unauthorized
    - access denied
    - Forbidden
    - Method Not allowed
    - Gateway timeout
    - request timeout
    - server error
    - server busy
    - authentication error
    - authorization error
    - validation error
    - Permission Denied
    - invalid token
    - token expired
    - session expired
    - session timeout
    - unexpected error
    - unable to process request
    - bad request
    - service unavailable
    - account is locked
    - account is blocked
    - multiple failed attempts
    - <html>
    - </html>
