id: MASS_ASSIGNMENT_CHANGE_ROLE
info:
  name: "Mass assignment leading to modification of role"
  description: "The endpoint appears to be vulnerable to Mass Assignment attack. The original request was replayed by modifyinh role param in request body. The application responded with 2XX success code in response."
  details: >
    "The endpoint appears to be vulnerable to Mass Assignment attack. The original request was replayed by modifyinh role param in request body. The application responded with 2XX success code in response.
    <b>Background:</b>
    Objects in modern applications might contain many properties. Some of these properties should be updated directly by the client (e.g., user.first_name or user.address) and some of them should not (e.g., user.is_vip flag).\n"
    "An API endpoint is vulnerable if it automatically converts client parameters into internal object properties, without considering the sensitivity and the exposure level of these properties. This could allow an attacker to update object properties that they should not have access to.\n"
    "Examples for sensitive properties:
    Permission-related properties: user.is_admin, user.is_vip should only be set by admins.
    Process-dependent properties: user.cash should only be set internally after payment verification.
    Internal properties: article.created_time should only be set internally by the application."
  impact: "Exploitation can lead to privilege escalation."
  category:
    name: MA
    shortName: Mass Assignment
    displayName: Mass Assignment (MA)
  subCategory: MASS_ASSIGNMENT_CHANGE_ROLE
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa3-broken-object-property-level-authorization.md"
  cwe:
    - CWE-915
  cve:
    - CVE-2023-32079
    - CVE-2023-42768

attributes:
  nature: INTRUSIVE
  plan: STANDARD
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(c)(1)
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
  SOC 2:
    - Secure Application Development Controls
    - System and Communication Security
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.5.8
  ISO 27001:
    - A.12.6.1
    - A.14.2.5
  NIST 800-53:
    - AC-6
    - SI-10
  CSA CCM:
    - APP-02
    - TVM-03
  CIS Controls:
    - IG1 Safeguard 16.2
    - IG2 Safeguard 18.3
  FedRAMP:
    - AC-6
    - SI-10
  NIST 800-171:
    - 3.1.3
    - 3.14.2
  FISMA:
    - AC-6
    - SI-10
  Cybersecurity Maturity Model Certification (CMMC):
    - AC.2.005
    - SI.2.216
api_selection_filters:
  response_code:
    gte: 200
    lt: 300

  method:
    contains_either:
      - "PUT"
      - "POST"
      - "PATCH"

  response_payload:
    for_one:
      key:
        contains_either: role
        extract: role_key

  request_payload:
    for_one:
      key:
        not_contains: ${role_key}

  param_context:
    param: ${role_key}
    extract: role_context

execute:
  type: single
  requests:
    - req:
        - add_body_param:
            role_context.key: ${role_context.value}

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    for_one:
      key:
        eq: ${role_key}
      value:
        eq: ${role_context.value}
