id: WALLET_PRICE_MASS_ASSIGN
info:
  name: "Mass Assignment vulnerability test for wallet price parameter"
  description: "Mass Assignment vulnerability in a wallet's price parameter occurs when an API allows unintended fields to be modified, enabling attackers to update wallet balances or transaction amounts. Testing involves sending unexpected parameters (e.g., wallet_balance, price_override) to see if unauthorized modifications are accepted. Exploiting this can lead to financial manipulation or privilege escalation."
  details: "To test for Mass Assignment in a wallet's price parameter, intercept API requests and modify the payload by adding fields like `wallet_balance`, `price`, or `discount`. If the application accepts and applies these unauthorized changes, it indicates a vulnerability. Ensure proper allowlisting of fields and enforce server-side validation to prevent exploitation."
  impact: "If a Mass Assignment vulnerability exists in the wallet's price parameter, attackers can manipulate balances, bypass payment restrictions, or exploit discounts. This can lead to financial losses, fraud, or privilege escalation. Exploiting this flaw could compromise transaction integrity and damage user trust."
  category:
    name: MA
    shortName: Mass Assignment
    displayName: Mass Assignment (MA)
  subCategory: WALLET_PRICE_MASS_ASSIGN
  severity: HIGH
  tags:
  - Business logic
  - OWASP top 10
  - HackerOne top 10
  references:
  - https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa3-broken-object-property-level-authorization.md
  cwe:
  - CWE-915
  cve:
  - CVE-2023-32079
  - CVE-2023-42768

attributes:
  nature: INTRUSIVE
  plan: STANDARD
  duration: FAST

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
    extract: resp_code
  response_payload:
    for_one:
      key:
        eq: price
        extract: priceKey
      value:
        datatype: string
    length:
      gt: 0
    not_contains:
      - error
      - uuid
execute:
  type: single
  requests:
  - req:
    - add_body_param:
        priceKey: -1000
validate:
  response_code:
    eq: "${resp_code}"
  response_payload:
    for_one:
      key:
        contains_either: priceKey
      value:
        contains_either: -1000
