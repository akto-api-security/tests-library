id: MISCONFIGURED_X_FRAME_OPTIONS_HEADER
info:
  name: Misconfigured X-Frame-Options Header
  description: "The X-Frame-Options header is misconfigured."
  details: >
    "The X-Frame-Options header is used to indicate whether the browser should be allowed to render the response in a frame. If the X-Frame-Options header is not set or is set to "DENY", the browser will not render the response in a frame. If the X-Frame-Options header is set to "SAMEORIGIN", the browser will only render the response in a frame if the origin of the request is the same as the origin of the response. If the X-Frame-Options header is set to "ALLOW FROM origin", the browser will only render the response in a frame if the origin of the request is the same as the origin of the response. If the X-Frame-Options header is set to "ALLOW FROM *", the browser will render the response in a frame regardless of the origin of the request."
  impact: >
    "If the Referer header is not properly sanitized or validated, it can be used to expose sensitive information to attackers. This can lead to unauthorized access to sensitive data, phishing attacks, and other security breaches."
  category:
    name: MHH
    shortName: Misconfigured HTTP Headers
    displayName: Misconfigured HTTP Headers (MHH)
  subCategory: MISCONFIGURED_X_FRAME_OPTIONS_HEADER
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://web.dev/security-headers/"
    - "https://www.keycdn.com/blog/http-security-headers"
    - "https://www.invicti.com/white-papers/whitepaper-http-security-headers"
    - "https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Headers_Cheat_Sheet.html"
  cwe:
    - CWE-693
  cve:
    - CVE-2022-41915
    - CVE-2022-37436

settings:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: "OPTIONS"
  or:
    - response_headers:
        for_one:
          key:
            eq: X-Frame-Options
          value:
            regex: "^(?!.*\bDENY\b)(?!.*\bSAMEORIGIN\b)(?!.*\bALLOW FROM\b).*"
    - response_headers:
        for_one:
          key:
            eq: X-Frame-Options
          value:
            regex: "(?=.*\bDENY\b)(?=.*\bSAMEORIGIN\b)|(?=.*\bDENY\b)(?=.*\bALLOW FROM\b)|(?=.*\bSAMEORIGIN\b)(?=.*\bALLOW FROM\b)"
    - request_payload:
        regex: "<meta[^>]*http-equiv=['\"]X-Frame-Options['\"][^>]*>"

execute:
  type: single
  requests:
    - req: []

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    percentage_match:
      gte: 40

strategy:
  run_once: /
