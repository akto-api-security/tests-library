id: SQLI_ERROR_BASED_QUERY_PARAM_CLICKHOUSE
info:
  name: "Error Based SQL Injection test for Query Parameters for Click House"
  description: >
    "Some API endpoints expecting GET query parameter values might be directly exposed to Click House. 
    Attackers can trigger an error by breaking the structure of the functions\' parameters used 
    for communicating with the database. "
  details: >
    "Some API endpoints expecting GET query parameter values might be directly exposed to Click House.
    Causing an error in SQL query syntax can expose the underlying query or DB data."
  impact: >
    "Possible data leakage due to illegal DB access. Successful SQL injection attacks 
    may completely compromise or destroy a system."
  category:
    name: SQL
    shortName: Injection Attack
    displayName: Injection Attacks (SQL)
  subCategory: SQLI_ERROR_BASED_QUERY_PARAM_CLICKHOUSE
  severity: HIGH
  tags:
    - Injection Attack
    - OWASP Top 10
    - HackerOne Top 10
  references:
    - "https://github.com/sqlmapproject/sqlmap/blob/master/data/xml/errors.xml"
    - "https://brightsec.com/blog/error-based-sql-injection/"
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    contains_either:
      - POST
      - GET
      - PUT
      - PATCH
  query_param:
    for_one:
      key:
        regex: .*
        extract: changed_query_key
wordLists:
  specialCharacters:
    - "\""
    - "'"
    - ")"
    - "()"
    - ","
    - "."
execute:
  type: single
  requests:
    - req:
        - modify_query_param: 
            changed_query_key: ${specialCharacters}
validate:
  or:
    - response_payload:
        regex: "Code: \\d+. DB::Exception:"
    - response_payload:
        regex: "Syntax error: failed at position \\d+"