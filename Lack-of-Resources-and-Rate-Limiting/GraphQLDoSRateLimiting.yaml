id: GRAPHQL_DOS_RATE_LIMITING
info:
  name: "Denial of Service Test on GraphQL API by replaying same request for rate limiting"
  description: "This test involves repeatedly sending identical requests to the API within a short timeframe to trigger rate limiting mechanisms. This test aims to assess the effectiveness of rate limiting measures in preventing excessive usage and potential service degradation. By simulating such attacks, testers can evaluate if the API adequately defends against DoS attempts by limiting the frequency of incoming requests."
  details: "In this test, identical requests are sent to the GraphQL API in rapid succession, aiming to overwhelm the system and trigger its rate limiting mechanism. The goal is to evaluate how effectively the API mitigates potential denial of service (DoS) attacks by restricting the rate of incoming requests from a single source. By simulating such scenarios, testers can gauge the resilience of the API against DoS attempts through rate limiting mechanisms."
  impact: "The impact of this test can be significant, potentially resulting in service degradation or even temporary unavailability. By overwhelming the API's rate limiting mechanism, attackers can disrupt normal operations, leading to increased response times or outright service failure. Addressing this vulnerability is crucial to maintaining the availability, reliability, and security of the GraphQL API under high traffic conditions."
  category:
    name: RL
    shortName: Lack of Resources & Rate Limiting
    displayName: Lack of Resources & Rate Limiting (RL)
  subCategory: GRAPHQL_DOS_RATE_LIMITING
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa4-unrestricted-resource-consumption.md"
  cwe:
    - CWE-400
  cve:
    - CVE-2023-4647
    - CVE-2023-38254

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: SLOW
wordLists:
  dummyHeaderValues:
    - a
    - b
    - c
    - d
    - e
    - f
    - g
    - h
    - i
    - j
api_selection_filters:
  method:
    neq: "OPTIONS"
  url:
    regex: graphql
  response_payload:
    length:
      gt: 0
    not_contains:
      - error
      - issue
      - UserNotAuthorizedError
      - INTERNAL_SERVER_ERROR
      - "GRAPHQL_VALIDATION_FAILED"
      - "graphQL syntax error"
      - "Syntax Error: Expected Name, found <EOF>."
      - "GRAPHQL_PARSE_FAILED"
      - "Bad Request"
execute:
  type: multiple
  requests:
    - req:
        - add_header:
            dummyKey: dummyVal
        - validate:
            response_payload:
              percentage_match:
                gte: 80
        - success: x2
        - failure: exit
    - req:
        - add_header:
            dummyKey: ${dummyHeaderValues}
        - validate:
            response_code:
              gt: 505
validate:
  and:
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - 5001
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - ${x1.response.stats.median_response_time} * 5
strategy:
  run_once: /
