id: REPLAY_CAPTCHA
info:
  name: "Replaying request with same captcha"
  description: "The server fails to enforce captcha expiration, allowing users to submit multiple requests using the same captcha value without time restrictions."
  details: >
            "Successful replaying of captchas presents a significant problem for companies, as it enables malicious actors to bypass security measures, potentially leading to spamming, data breaches, and reputation damage."
  impact: "Bypassing CAPTCHA protection enables hackers to automate malicious activities, such as unauthorized account access, spamming, data harvesting, and DDoS attacks."
  remediation: "Replaying a request with the same CAPTCHA response can pose a security risk, especially if the request involves sensitive actions such as user authentication or transaction processing. To remediate this issue, it's crucial to implement anti-replay mechanisms on the server-side to prevent attackers from reusing CAPTCHA responses. One approach is to generate unique tokens for each CAPTCHA challenge-response pair and validate them on the server side to ensure they are used only once. Additionally, implementing session-based or time-based expiry for CAPTCHA responses can further mitigate the risk of replay attacks. Regularly monitoring and logging CAPTCHA usage can also help detect and mitigate suspicious or malicious activity."
  category:
    name: RL
    shortName: Lack of Resources & Rate Limiting
    displayName: Lack of Resources & Rate Limiting (RL)
  subCategory: REPLAY_CAPTCHA
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://hackerone.com/reports/223324"
  cwe:
    - CWE-287
    - CWE-294
  cve:
    - CVE-2021-29047
    - CVE-2022-34983

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    not_contains_either:
      - invalid
      - error
      - failed
  or:
    - request_payload:
        for_one:
          key:
            contains_either: captcha
    - query_param:
        for_one:
          key:
            contains_either: captcha

execute:
  type: single
  requests:
    - req:
        - add_header: 
            x-akto-ignore: "0"

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    percentage_match: 
      gt: 80
    length:
      gt: 0
    not_contains_either:
      - invalid
      - error
      - expired