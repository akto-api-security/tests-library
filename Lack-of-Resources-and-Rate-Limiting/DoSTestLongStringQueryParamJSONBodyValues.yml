id: DOS_QUERY_PARAM_JSON_BODY_VALUES
info:
  name: "Denial of Service test by entering long and random strings in Query Param or JSON Body Param Values"
  description: "This test involves intentionally overwhelming a system's resources to disrupt its normal functioning. This particular method focuses on input fields such as Query Parameters or JSON Body Parameters, where long and random strings are entered to assess how the system handles excessive data loads. By simulating such attacks, developers can gauge the system's resilience against potential DoS vulnerabilities."
  details: "In this type of Denial of Service (DoS) test, the system is subjected to excessive loads by inputting unusually long and random strings into Query Parameters or JSON Body Parameters. The aim is to observe how the system responds under such stress, identifying potential vulnerabilities that attackers could exploit to disrupt its normal operation. By conducting these tests, developers can proactively strengthen the system's defenses against DoS attacks."
  impact: "The impact of a successful Denial of Service (DoS) attack using long and random strings in Query Parameters or JSON Body Parameters can be severe. It may lead to system slowdowns, unresponsiveness, or even complete service outage, disrupting operations and causing financial losses. Furthermore, such attacks can tarnish the organization's reputation, eroding trust among users and stakeholders due to the perceived lack of robustness in their systems."
  category:
    name: RL
    shortName: Lack of Resources & Rate Limiting
    displayName: Lack of Resources & Rate Limiting (RL)
  subCategory: DOS_QUERY_PARAM_JSON_BODY_VALUES
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa4-unrestricted-resource-consumption.md"
  cwe:
    - CWE-400
  cve:
    - CVE-2023-4647
    - CVE-2023-38254

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: SLOW
compliance_standards: compliance/dos.conf
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  or:
    - request_payload:
        for_one:
          key:
            regex: ".*"
            extract: userKey
    - query_param:
        for_one:
          key:
            regex: ".*"
            extract: userKey
wordLists:
  queryParamValues:

    - "; : ! @ # $ % ^ & * ( ) < > ? | { } [ ] ~"
    - "%s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s"
    - "你好你好你好你好你好你好你好你好你好你好你好"
    - "\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0"
    - "😀 😃 😄 😁 😆 😅 😂 🤣 😊 😇"
    - "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
execute:
  type: multiple
  requests:
    - req:
        - add_header:
            dummy_Header_Key: "dummyValue"
        - validate:
            percentage_match:
              gte: 90
        - success: x2
        - failure: exit
    - req:
        - modify_query_param:
            userKey: "${queryParamValues}"
        - modify_body_param:
            userKey: "${queryParamValues}"
        - validate:
            response_code:
              gt: 505
validate:
  and:
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - 5001
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - ${x1.response.stats.median_response_time} * 5
