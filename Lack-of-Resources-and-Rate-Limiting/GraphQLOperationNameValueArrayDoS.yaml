id: GRAPHQL_OPERATION_NAME_VALUE_ARRAY_DOS
info:
  name: "Denial of Service Test on GraphQL API with Operation Name Value Array Test"
  description: "A Denial of Service (DoS) test on a GraphQL API with Operation Name Value Array Test involves assessing the API's resilience against malicious overload attempts by sending numerous requests with varying operation names. Testers systematically increase the load on the API by altering the operation names in requests to determine if it can handle the increased traffic without crashing or experiencing significant degradation in performance. This test helps ensure the GraphQL API's stability and reliability under potential DoS attack scenarios."
  details: "In a Denial of Service (DoS) test on a GraphQL API with Operation Name Value Array Test, testers send a large volume of requests, each with different operation names, to overload the server. By varying operation names, they aim to stress the API's parsing and execution capabilities. This test helps identify potential weaknesses in the API's handling of diverse request patterns, ensuring it can withstand DoS attacks effectively."
  impact: "If a Denial of Service (DoS) test on a GraphQL API with Operation Name Value Array Test uncovers vulnerabilities, attackers could exploit them to overwhelm the server with malicious requests. This could result in service downtime, degraded performance, or even server crashes, leading to disrupted operations and user experience. The impact may include financial losses, reputation damage, and loss of user trust, making it crucial to address any weaknesses in the API's handling of such attacks."
  category:
    name: RL
    shortName: Lack of Resources & Rate Limiting
    displayName: Lack of Resources & Rate Limiting (RL)
  subCategory: GRAPHQL_OPERATION_NAME_VALUE_ARRAY_DOS
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa4-unrestricted-resource-consumption.md"
  cwe:
    - CWE-400
  cve:
    - CVE-2023-4647
    - CVE-2023-38254


attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: SLOW


api_selection_filters:
  method:
    neq: "OPTIONS"
  url:
    regex: graphql
  response_payload:
    length:
      gt: 0
    not_contains:
      - error
      - issue
      - UserNotAuthorizedError
      - INTERNAL_SERVER_ERROR
      - "GRAPHQL_VALIDATION_FAILED"
      - "graphQL syntax error"
      - "Syntax Error: Expected Name, found <EOF>."
      - "GRAPHQL_PARSE_FAILED"
      - "Bad Request"

execute:
  type: multiple
  requests:
    - req:
        - add_header:
            dummyKey: dummyVal
        - validate:
            response_payload:
              percentage_match:
                gte: 80
        - success: x2
        - failure: exit

    - req:
        - modify_body_param:
            operationName:

              - "; : ! @ # $ % ^ & * ( ) < > ? | { } [ ] ~"
              - "%s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s"
              - "你好你好你好你好你好你好你好你好你好你好你好"
              - "\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0"
              - "😀 😃 😄 😁 😆 😅 😂 🤣 😊 😇"
              - "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

validate:
  or:
    - and:
        - compare_greater:
            - ${x2.response.stats.median_response_time}
            - 5001
        - compare_greater:
            - ${x2.response.stats.median_response_time}
            - ${x1.response.stats.median_response_time} * 5
    - response_payload:
        length:
          gt: 0
        contains_either:
          - "Maximum call stack size exceeded"
strategy:
  run_once: /
