id: GRAPHQL_DOS_QUERY_NAME_SPCL_CHARS
info:
  name: "Denial of Service Test on GraphQL API with special Character strings in Query Name in a request"
  description: "This test involves sending GraphQL queries with query names containing special characters. This test examines how the API handles such irregular input, as processing these names can potentially exploit parsing vulnerabilities. The goal is to identify weaknesses that could be leveraged to overload the server, ensuring the API is robust against such DoS attack vectors."
  details: "This test assesses the API's robustness by sending queries with names that include special characters. This test checks how the server processes these atypical query names and whether it can handle them without performance issues or crashes. By simulating such requests, testers can uncover vulnerabilities that might allow attackers to disrupt service by overloading the server with complex parsing tasks."
  impact: "The impact of this test can be significant, potentially leading to increased server load, memory exhaustion, or even crashes. This vulnerability can be exploited by attackers to disrupt normal operations, resulting in degraded performance, service outages, and negative user experience. Addressing this issue is essential to maintain the stability, reliability, and security of the API."
  category:
    name: RL
    shortName: Lack of Resources & Rate Limiting
    displayName: Lack of Resources & Rate Limiting (RL)
  subCategory: GRAPHQL_DOS_QUERY_NAME_SPCL_CHARS
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa4-unrestricted-resource-consumption.md"
  cwe:
    - CWE-400
  cve:
    - CVE-2023-4647
    - CVE-2023-38254
auth:
  authenticated: true
wordLists:
  specialValues:

    - "; : ! @ # $ % ^ & * ( ) < > ? | { } [ ] ~"
    - "%s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s"
    - "你好你好你好你好你好你好你好你好你好你好你好"
    - "\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0"
    - "😀 😃 😄 😁 😆 😅 😂 🤣 😊 😇"
    - "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"

api_selection_filters:
  url:
    regex: graphql
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - error
      - issue
      - UserNotAuthorizedError
      - INTERNAL_SERVER_ERROR
      - "GRAPHQL_VALIDATION_FAILED"
      - "graphQL syntax error"
      - "Syntax Error: Expected Name, found <EOF>."
      - "GRAPHQL_PARSE_FAILED"
      - "Bad Request"

execute:
  type: multiple
  requests:
    - req:
      - add_header:
          dummyKey: dummyVal
      - validate:
          response_payload:
            percentage_match:
              gte: 80
      - success: x2
      - failure: exit

    - req:
      - replace_body: '{"query": "query ${specialValues}{__typename}"}'

      
      - validate:
          response_code:
            gt: 505

validate:
  and:
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - 3001
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - ${x1.response.stats.median_response_time} * 3
strategy:
  run_once: /
