id: USER_ENUM_RESPONSE_TIME
info:
  name: "Broken Authentication Test - Username Enumeration via Response time analysis"
  description: > 
    "This test is a security assessment method focused on detecting vulnerabilities in 
    authentication systems. By scrutinizing the response times of authentication attempts, 
    it aims to discern subtle differences that may reveal the validity of provided usernames. 
    This approach leverages variations in response times to uncover potential weaknesses, 
    aiding in the prevention of username enumeration attacks."
  details: >
    "This test is a security evaluation method that scrutinizes authentication systems for 
    vulnerabilities. It involves analyzing response times during login attempts to discern 
    patterns that may expose valid usernames. By leveraging variations in response times, 
    this test helps identify and address potential weaknesses, fortifying systems against 
    the risk of unauthorized username enumeration attacks."
  impact: >
    "The impact of this test can be severe, as it exposes the vulnerability of authentication 
    systems to unauthorized access attempts. By discerning valid usernames through response 
    time patterns, attackers gain a crucial foothold for launching targeted attacks, such 
    as brute force or phishing campaigns. This can lead to unauthorized access, data 
    breaches, and compromise of sensitive information, posing significant risks to the 
    security and integrity of the affected systems and user accounts."
  remediation: "To mitigate username enumeration via response time analysis, ensure that the response time for both existing and non-existing usernames is consistent. Avoid providing significantly different response times that could indicate the existence of a username. Implement rate limiting and account lockout mechanisms to prevent brute force attacks. Regularly review and update security measures to address any identified vulnerabilities and enhance overall system security."
  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: USER_ENUM_RESPONSE_TIME
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
    - "https://cwe.mitre.org/data/definitions/798.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2023-3897
    - CVE-2023-40758

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  url:
    contains_either:
      - login
      - signin
      - authenticate
      - auth
  and:
    - request_payload:
        for_one:
          key:
            regex: "^username$|^user$|^userid$|^user_id$|^login$|^login_id$|^email$|^account$|^account_id$|^member$|^member_id$|^id$|^user_name$|^uname$|^identifier$|^user_identifier$|^admin$|^nick$|^nickname$|^handle$|^alias$|^principal$|^profile$|^profile_id$|^name$|^signin$|^auth$|^credential$|^user_login$|^user_account$|^user_email$|^employee$|^employee_id$|^operator$|^customer_id$|^client_id$|^subscriber$|^subscriber_id$|^participant$|^participant_id$|^client_id$|^userLoginID$|^client-name$"
            extract: userKey
    - request_payload:
        for_one:
          key:
            regex: "^password$|^pass$|^pwd$|^user_password$|^userpass$|^passwd$|^user_pwd$|^password1$|^userPass$|^login_password$|^loginpassword$|^user_pass$|^access_password$|^secret$|^user_secret$"
            extract: passKey
wordLists:
  invalidPasswords:
    - "Default1!"
    - "Default1!"
    - "Default1!"
    - "Default1!"
    - "Default1!"
execute:
  type: multiple
  requests:
  - req:
    - modify_body_param:
        passKey: ${invalidPasswords}
    - validate:
        response_code:
          eq: 429
    - success: exit
    - failure: x2
  - req:
    - modify_body_param:
        userKey: dummyemail@mail.com
    - modify_body_param:
        passKey: ${invalidPasswords}
    - validate:
        response_code:
          eq: 429
validate:
  compare_greater:
    - ${x1.response.stats.median_response_time}
    - ${x2.response.stats.median_response_time} * 1.2

