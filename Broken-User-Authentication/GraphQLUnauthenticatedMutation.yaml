id: GRAPHQL_UNAUTHENTICATED_MUTATION
info:
  name: "GraphQL test for checking Unauthenticated Mutation Query"
  description: "A GraphQL test for checking Unauthenticated Mutation Query involves assessing whether the GraphQL API allows unauthorized users to perform mutation operations without proper authentication. Testers send mutation queries to the API without authentication credentials to determine if the server correctly denies access to mutation endpoints for unauthenticated requests. This evaluation helps ensure that sensitive data and functionality are protected from unauthorized modifications by enforcing proper authentication mechanisms."
  details: "In this test, we send mutation requests to the GraphQL API without providing authentication credentials. They analyze the server's response to determine if it properly rejects the mutation requests from unauthenticated users. This test helps ensure that sensitive data and operations are safeguarded against unauthorized modifications by enforcing authentication requirements for mutation operations."
  impact: "If a GraphQL API allows unauthenticated mutation queries, it poses a significant security risk as attackers can exploit this vulnerability to manipulate data without proper authorization. This could lead to unauthorized changes in user accounts, data corruption, or even system compromise. Such vulnerabilities may result in reputational damage, loss of trust from users, and potential legal consequences for the organization. Testing and fixing these issues are crucial to maintaining the integrity and security of the GraphQL API."
  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: GRAPHQL_UNAUTHENTICATED_MUTATION
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(a)(2)(i)
    - 45 CFR ยง 164.308(a)(5)(ii)(C)
  SOC 2:
    - Logical and Physical Access Controls
    - User Authentication Mechanisms
  PCI DSS:
    - Requirement 8
    - Requirement 10
  ISO 27001:
    - A.9.2.2
    - A.9.4.3
  NIST 800-53:
    - IA-2
    - IA-5
  CSA CCM:
    - IAM-03
    - IAM-06
  CIS Controls:
    - IG1 Safeguard 5.1
    - IG1 Safeguard 5.4
    - IG2 Safeguard 16.11
  FedRAMP:
    - IA-2
    - IA-5
  NIST 800-171:
    - 3.5.1
    - 3.5.2
  FISMA:
    - IA-2
    - IA-5
  Cybersecurity Maturity Model Certification (CMMC):
    - IA.1.076
    - IA.2.078
auth:
  authenticated: true
api_selection_filters:
  url:
    regex: graphql
  method:
    eq: POST
  request_payload:
    contains_either: mutation
  response_payload:
    length:
      gt: 0
    not_contains:
      - error
      - issue
      - UserNotAuthorizedError
      - INTERNAL_SERVER_ERROR
      - "GRAPHQL_VALIDATION_FAILED"
      - "graphQL syntax error"
      - "Syntax Error: Expected Name, found <EOF>."
      - "GRAPHQL_PARSE_FAILED"
      - "Bad Request"

execute:
  type: single
  requests:
    - req:
        - remove_auth_header: true

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    percentage_match:
      gte: 90
    length:
      gt: 0
    not_contains:
      - error
      - issue
      - UserNotAuthorizedError
      - INTERNAL_SERVER_ERROR
      - "GRAPHQL_VALIDATION_FAILED"
      - "graphQL syntax error"
      - "Syntax Error: Expected Name, found <EOF>."
      - "GRAPHQL_PARSE_FAILED"
      - "Bad Request"
strategy:
  run_once: /
settings:
  duration: FAST
