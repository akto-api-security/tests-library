id: BYPASS_2FA_BRUTE_FORCE
info:
  name: "2FA Bypass with brute-force attack"
  description: > 
    "This test examines vulnerabilities in multi-factor authentication (2FA) systems. It 
    simulates a scenario where attackers exploit weaknesses to bypass the additional 
    security layer through brute-force methods, potentially gaining unauthorized access 
    to sensitive accounts or systems. This test helps identify gaps in authentication 
    mechanisms and fortify defenses against sophisticated attacks."
  details: >
    "In this test, security analysts scrutinize the effectiveness of multi-factor 
    authentication (MFA) setups. They simulate scenarios where attackers attempt to 
    circumvent 2FA protections using brute-force techniques, such as systematically 
    guessing combinations until successful. By assessing these vulnerabilities, 
    organizations can refine their authentication protocols, reinforce security measures, 
    and thwart potential breaches before they occur."
  impact: >
    "The impact of this test could be severe. It may lead to unauthorized access to 
    critical systems or sensitive data, compromising confidentiality, integrity, 
    and possibly compliance requirements. Such breaches can damage reputation, incur 
    financial losses, and disrupt operations, highlighting the critical need for 
    robust authentication mechanisms to thwart sophisticated cyber threats effectively."
  remediation: "To mitigate vulnerabilities in multi-factor authentication (2FA) systems, strengthen defenses against brute-force attacks. Implement rate limiting and account lockout mechanisms to prevent multiple failed login attempts. Regularly review and update authentication mechanisms to address identified vulnerabilities and enhance security. Conduct thorough testing and monitoring to detect and prevent unauthorized access attempts, safeguarding sensitive accounts and systems against sophisticated attacks."
  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: BYPASS_2FA_BRUTE_FORCE
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
auth:
  authenticated: true
api_selection_filters:
  method:
    not_contains_either:
      - GET
  response_code:
    gte: 200
    lte: 300
    extract: resp_code
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_payload:
    for_one:
      key:
        regex: "(?i)(captcha|2fa[-_]?code|mfa[-_]?code|auth[-_]?code|verification[-_]?code|security[-_]?code)"
        extract:  captchaKey
      value:
        regex: "^\\d+$"
wordLists:
  randomCaptcha:
    - "123455"
    - "123435"
    - "123456"
    - "123457"
    - "123459"
    - "12345"
    - "12344"
    - "12347"
    - "12321"
    - "12999"
execute:
  type: single
  requests:
  - req:
      modify_body_param:
        captchaKey: ${randomCaptcha}
validate:
  response_code:
    eq: ${resp_code}
  response_payload:
    percentage_match_schema:
      gt: 90
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
