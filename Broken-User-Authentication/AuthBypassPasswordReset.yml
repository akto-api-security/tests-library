id: AUTH_BYPASS_PASSWORD_RESET
info:
  name: "Authentication Bypass with replaying Password Reset Endpoint"
  description: > 
    "Authentication Bypass via Password Reset Endpoint Replay is a security vulnerability 
    where attackers intercept and replay previously captured password reset requests. 
    Exploiting this flaw enables unauthorized access to user accounts without valid 
    credentials. This underscores the importance of implementing robust security 
    measures to prevent and detect replay attacks in password reset processes, crucial 
    for maintaining overall system security."
  details: >
    "Authentication Bypass via Password Reset Endpoint Replay is a security vulnerability 
    where attackers intercept and replay captured password reset requests, enabling 
    unauthorized access to user accounts without valid credentials. This exploitation 
    poses a significant threat to system security, emphasizing the need for robust 
    measures in password reset processes to detect and prevent replay attacks effectively. 
    Implementing dynamic and secure authentication controls is crucial for safeguarding 
    user accounts and maintaining overall system integrity."
  impact: >
    "The impact of Authentication Bypass via Password Reset Endpoint Replay is profound, 
    as it allows malicious actors to gain unauthorized access to user accounts without 
    valid credentials. This exploitation can lead to compromised user privacy, 
    unauthorized data access, and potential account takeovers. Organizations may 
    face severe consequences, including reputational damage and regulatory issues, 
    highlighting the critical importance of implementing stringent security measures 
    to thwart replay attacks in password reset processes."
  remediation: "To mitigate Authentication Bypass via Password Reset Endpoint Replay, implement measures to prevent replay attacks in the password reset process. Use techniques such as one-time tokens or request validation to ensure that each reset request is unique and cannot be replayed. Additionally, implement strong authentication controls to detect and block suspicious activities, crucial for maintaining overall system security. Regular security assessments and monitoring can help identify and address potential vulnerabilities in the password reset process."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: AUTH_BYPASS_PASSWORD_RESET
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
api_selection_filters:
  method:
    not_contains_either:
      - GET
  response_code:
    gte: 200
    lt: 300
    extract: resp_code
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  url:
    contains_either:
      - password-reset
      - reset-password
      - "user/reset"
      - "account/recover"
      - "api/password_reset"
      - "password/reset"
      - "password/forgot"
      - "reset/confirm"
      - "password/new"
      - "account/reset-password-request"
      - "password_reset_request"
      - "unlock_account"
      - "account_recovery"
  request_payload:
    for_one:
      key:
        regex: "^password$|^pass$|^pwd$|^user_password$|^userpass$|^passwd$|^user_pwd$|^password1$|^userPass$|^login_password$|^loginpassword$|^user_pass$|^access_password$|^secret$|^user_secret$"

execute:
  type: single
  requests:
  - req: []

validate:
  response_code:
    eq: ${resp_code}
  response_payload:
    percentage_match_schema:
      gte: 90
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts