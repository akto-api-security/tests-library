id: USER_ENUM_REGISTER
info:
  name: "Broken Authentication Test - Username Enumeration via Registration Endpoint"
  description: >
    "In this scenario, security testing assesses a system's authentication by attempting user  registration with valid and invalid usernames. Testers analyze responses to detect patterns  that may reveal the existence of valid usernames, aiming to uncover vulnerabilities in the  registration process. This evaluation strengthens overall authentication security and  mitigates the risk of unauthorized access."
  details: >
    "This test assesses a system by attempting user registrations with different usernames.  Testers analyze responses to identify patterns that may reveal valid usernames, addressing  vulnerabilities in the registration process to enhance overall authentication security  and prevent potential unauthorized access."
  impact: >
    "The impact of a successful Broken Authentication Test - Username Enumeration via Registration  Endpoint is significant. It may lead to the inadvertent disclosure of valid usernames, enabling  targeted attacks for unauthorized access. This vulnerability poses a risk of compromised user  accounts, potential data breaches, and increased security threats. Swift mitigation is crucial  to fortify authentication security and prevent unauthorized access."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: USER_ENUM_REGISTER
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901


attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: https://github.com/akto-api-security/tests-library/blob/hotfix/fixed_some_minor_bugs/compliance/bua.conf
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    neq: "OPTIONS"
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  url:
    contains_either:
      - register
      - signup
      - "users/create"
      - "account/create"
      - "create_account"
  and:
    - request_payload:
        for_one:
          key:
            regex: "username|^user$|^userid$|^user_id$|^login$|^login_id$|email|^account$|^account_id$|^member$|^member_id$|^id$|^user_name$|^uname$|^identifier$|^user_identifier$|^admin$|^nickname$|^handle$|^alias$|^principal$|^profile$|^profile_id$|^name$|^signin$|^auth$|^credential$|^user_login$|^user_account$|^user_email$|^employee$|^employee_id$|^operator$|^customer_id$|^subscriber$|^subscriber_id$|^participant$|^participant_id$|client_id|^userLoginID$|^client-name$"
            extract: userKey
          value:
            regex: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
    - request_payload:
        for_one:
          key:
            regex: "password|^pass$|^pwd$|^user_password$|^userpass$|passwd|^user_pwd$|^password1$|^userPass$|^login_password$|^loginpassword$|^user_pass$|^access_password$|^secret$|^user_secret$|^code$|^token$"
            extract: passKey
execute:
  type: multiple
  requests:
    - req:
        - modify_body_param:
            passKey: Default1!
        - validate:
            response_code:
              gte: 400
              lt: 410
            response_payload:
              not_contains:
                - rate limit
                - rate_limit
                - rate limit
                - account is locked
                - account is blocked
                - multiple failed attempt
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: dummymail@dummy.com
        - modify_body_param:
            passKey: Default1!
        - validate:
            or:
              - response_payload:
                  neq: "${x1.response.body}"
                  not_contains:
                    - rate limit
                    - rate_limit
                    - rate limit
                    - account is locked
                    - account is blocked
                    - multiple failed attempt
              - response_code:
                  neq: "${x1.response.status_code}"
        - success: x3
        - failure: exit
    - req:
        - modify_body_param:
            userKey: dummymail@dummy.com
        - modify_body_param:
            passKey: Default2!
        - validate:
            or:
              - response_payload:
                  eq: "${x2.response.body}"
                  not_contains:
                    - rate limit
                    - rate_limit
                    - rate limit
                    - account is locked
                    - account is blocked
                    - multiple failed attempt

        - success: vulnerable
