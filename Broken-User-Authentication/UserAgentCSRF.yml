id: "USER_AGENT_CSRF"
info:
  name: "Authentication Bypass using API replay with no CSRF/XSRF tokens"
  description: > 
    "If replaying a request with a user-agent identified as a browser and lacking 
    'csrf' or 'xsrf' headers successfully authenticates the API, it indicates a potential 
    broken authentication vulnerability. This scenario suggests that the absence of 
    anti-CSRF (Cross-Site Request Forgery) protection allows for unauthorized replay 
    of authenticated requests, potentially leading to account compromise or 
    unauthorized access. Addressing this vulnerability involves implementing 
    proper CSRF protections to fortify authentication mechanisms and prevent exploitation 
    through unauthorized replay attacks"
  details: >
    "Replaying a request without 'csrf' or 'xsrf' headers, and successful API authentication 
    when the user-agent is a browser, signals a potential broken authentication 
    vulnerability. In this context, the absence of anti-CSRF protection could allow 
    unauthorized replay attacks, jeopardizing the integrity of user accounts and 
    access controls. Mitigating this vulnerability requires implementing robust 
    anti-CSRF measures to bolster authentication security and prevent unauthorized 
    request replays."
  impact: >
    "The impact of successfully replaying a request without 'csrf' or 'xsrf' headers in a 
    browser's user-agent, leading to authenticated API access, signifies a critical 
    broken authentication vulnerability. This vulnerability could enable malicious 
    actors to perform unauthorized actions, compromise user accounts, and potentially 
    gain control over sensitive information. Implementing effective anti-CSRF protections 
    is imperative to mitigate this risk, ensuring the resilience of authentication 
    mechanisms and safeguarding against unauthorized replay attacks."
  remediation: "To mitigate Authentication Bypass using API replay with no CSRF/XSRF tokens, ensure that all API requests are protected with CSRF/XSRF tokens. Implement strict validation on the server-side to reject requests that do not include valid tokens. Additionally, consider implementing other security measures such as rate limiting and monitoring for suspicious activity to detect and prevent unauthorized access attempts. Regularly review and update your security mechanisms to address any identified vulnerabilities and enhance overall system security."
  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: USER_AGENT_CSRF
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
auth:
  authenticated: true
api_selection_filters:
  method:
    not_contains_either:
      - GET
  response_code:
    gte: 200
    lte: 300
    extract: resp_code
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  and:
    - request_headers:
        not_contains:
        - csrf
        - xsrf
    - request_headers:
        for_one:
          key: 
            eq: "User-Agent"
          value:
            contains_either:
              - "Mozilla"
              - "curl"
              - AppleWebKit
              - Gecko
              - Safari
              - Chrome
              - KHTML
              - Edg
              - Googlebot
    - request_headers:
        for_one:
          key:
            eq: Cookie
            extract: cookieKey
      
execute:
  type: multiple
  requests:
  - req: 
    - delete_header: $(cookieKey)
    - validate:
        response_code:
          eq: ${resp_code}
        response_payload:
          length:
            gt: 0
          percentage_match:
            gte: 90
          not_contains_either:
            - Error
            - Internal Server 
            - Failed
            - Unauthorized
            - access denied
            - Forbidden
            - Method Not allowed
            - Gateway timeout
            - request timeout
            - server error
            - server busy
            - authentication error
            - authorization error
            - validation error
            - Permission Denied
            - invalid token
            - token expired
            - session expired
            - session timeout
            - unexpected error
            - unable to process request
            - bad request
            - service unavailable
            - account is locked
            - account is blocked
            - multiple failed attempts
    - success: exit
    - failure: x2
  - req:
    - add_header: 
        dummyHeader: "dummyData"
    - validate:
        response_code:
          eq: ${resp_code}
        response_payload:
          length:
            gt: 0
          percentage_match:
            gte: 90
          not_contains_either:
            - Error
            - Internal Server 
            - Failed
            - Unauthorized
            - access denied
            - Forbidden
            - Method Not allowed
            - Gateway timeout
            - request timeout
            - server error
            - server busy
            - authentication error
            - authorization error
            - validation error
            - Permission Denied
            - invalid token
            - token expired
            - session expired
            - session timeout
            - unexpected error
            - unable to process request
            - bad request
            - service unavailable
            - account is locked
            - account is blocked
            - multiple failed attempts
strategy:
  run_once: /