id: AUTH_BYPASS_LOCKED_ACCOUNT_TOKEN_ROLE
info:
  name: "Authentication Bypass with Locked Account Token Role Test"
  description: > 
    "Authentication Bypass with Locked Account Token Role Test involves attempting to 
    access authenticated APIs using a token associated with a locked user account. 
    Attackers exploit flaws in the authentication system by leveraging tokens that 
    retain unauthorized access even after an account is locked. This security 
    vulnerability can lead to unauthorized actions, underscoring the importance 
    of robust account lockout policies and secure token management to prevent 
    potential authentication bypass threats."
  details: >
    "In Authentication Bypass with Locked Account Token Role Test, attackers exploit 
    weaknesses in the authentication system by using tokens associated with locked 
    user accounts to access authenticated APIs. Despite account lockout status, 
    these tokens enable unauthorized access, highlighting a critical security 
    flaw. Mitigation involves enhancing account lockout policies and implementing 
    secure token management practices to prevent unauthorized actions and bolster 
    the overall integrity of the authentication process."
  impact: >
    "The impact of Authentication Bypass with Locked Account Token Role Test can be 
    significant, allowing attackers to access authenticated APIs despite a user 
    account being locked. This security vulnerability may result in unauthorized 
    actions, potential data breaches, or compromise of sensitive information. 
    Addressing this issue requires strengthening account lockout policies and 
    implementing secure token management practices to prevent unauthorized access 
    and maintain the overall security of the authentication system."
  remediation: "To mitigate Authentication Bypass with Locked Account Token Role vulnerabilities, enforce robust account lockout policies. Ensure that tokens associated with locked user accounts are immediately invalidated to prevent unauthorized access. Implement secure token management practices to revoke access tokens when accounts are locked. Additionally, conduct regular security assessments to identify and address flaws in the authentication system, ensuring the prevention of potential authentication bypass threats."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: AUTH_BYPASS_LOCKED_ACCOUNT_TOKEN_ROLE
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
execute:
  type: single
  requests:
    - req:
      - modify_header:
          ${roles_access_context.LOCKED_ACCOUNT_SYSTEM_ROLE}: 1       
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    percentage_match:
      gte: 90
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts