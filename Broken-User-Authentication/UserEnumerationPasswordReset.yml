id: USER_ENUM_PASSWORD_RESET
info:
  name: "Broken Authentication Test - Username Enumeration on Password Reset Endpoint"
  description: >
    "This test involves identifying security vulnerabilities by testing the  system's response to password reset requests with valid and invalid usernames, aiming  to uncover potential information disclosure risks"
  details: >
    "Broken Authentication Test - Username Enumeration on Password Reset Endpoint  is a security evaluation where testers probe a system by submitting password  reset requests with various usernames. The objective is to detect if the system  responds differently for valid and invalid usernames, potentially revealing  sensitive information. This testing helps organizations identify and  rectify vulnerabilities in their authentication mechanisms to prevent unauthorized access."
  impact: >
    "A successful Broken Authentication Test - Username Enumeration on Password Reset Endpoint  can lead to unauthorized access, as attackers exploit revealed valid usernames. This may  result in compromised user accounts, unauthorized data access, and potential privacy  breaches. Addressing such vulnerabilities is crucial to maintaining the integrity and  security of the system."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: USER_ENUM_PASSWORD_RESET
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
    - "https://cwe.mitre.org/data/definitions/798.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2021-45901
    - CVE-2021-4191

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: https://github.com/akto-api-security/tests-library/blob/hotfix/fixed_some_minor_bugs/compliance/bua.conf
api_selection_filters:
  response_code:
    gte: 200
  method:
    neq: "OPTIONS"
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  url:
    contains_either:
      - password-reset
      - reset-password
      - forgot-password
      - "user/reset"
      - "account/recover"
      - "api/password_reset"
      - "password/reset"
      - "account/reset-password-request"
      - "password_reset_request"
      - "account_recovery"
  and:
    - request_payload:
        for_one:
          key:
            regex: "username|^user$|^userid$|^user_id$|^login$|^login_id$|email|^account$|^account_id$|^member$|^member_id$|^id$|^user_name$|^uname$|^identifier$|^user_identifier$|^admin$|^nickname$|^handle$|^alias$|^principal$|^profile$|^profile_id$|^name$|^signin$|^auth$|^credential$|^user_login$|^user_account$|^user_email$|^employee$|^employee_id$|^operator$|^customer_id$|^subscriber$|^subscriber_id$|^participant$|^participant_id$|client_id|^userLoginID$|^client-name$"
            extract: userKey
          value:
            regex: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
    - request_payload:
        for_one:
          key:
            regex: "password|^pass$|^pwd$|^user_password$|^userpass$|passwd|^user_pwd$|^password1$|^userPass$|^login_password$|^loginpassword$|^user_pass$|^access_password$|^secret$|^user_secret$|^code$|^token$"
            extract: passKey
execute:
  type: multiple
  requests:
    - req:
        - modify_body_param:
            passKey: Default1!
        - validate:
            response_code:
              gte: 400
              lt: 410
            response_payload:
              not_contains:
                - rate_limit
                - rate limit
                - rate-limit
                - account is locked
                - account is blocked
                - multiple failed attempts
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: dummymail@dummy.com
        - modify_body_param:
            passKey: Default1!
        - validate:
            or:
              - response_code:
                  neq: "${x1.response.status_code}"
              - response_payload:
                  neq: "${x1.response.body}"
                  not_contains:
                    - rate_limit
                    - rate limit
                    - account is locked
                    - account is blocked
                    - multiple failed attempts
        - success: x3
        - failure: exit
    - req:
        - modify_body_param:
            userKey: dummymail@dummy.com
        - modify_body_param:
            passKey: Default2!
        - validate:
            or:
              - response_payload:
                  neq: "${x2.response.body}"
                  not_contains:
                    - rate_limit
                    - rate limit
                    - account is locked
                    - account is blocked
                    - multiple failed attempts
        - success: vulnerable
