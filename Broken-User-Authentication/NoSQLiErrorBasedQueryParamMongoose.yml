id: NOSQLI_ERROR_BASED_QUERY_PARAM_MONGOOSE
info:
  name: "Error Based NoSQL Injection test for Query Parameters for Mongoose Error"
  description: >
    "Some API endpoints expecting GET query parameter values might be directly exposed to MongoDB. Attackers can trigger an error by breaking the structure of the functions\' parameters used for communicating with the database. "
  details: >
    "Some API endpoints expecting GET query parameter values might be directly exposed to MongoDB. MongoDB uses NoSQL. Causing an error in NoSQL query syntax can expose the underlying query or DB data."
  impact: >
    "Possible data leakage due to illegal DB access. Successful NoSQL injection attacks may completely compromise or destroy a system."
  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: NOSQLI_ERROR_BASED_QUERY_PARAM_MONGOOSE
  severity: MEDIUM
  tags:
    - Injection Attack
    - OWASP Top 10
    - HackerOne Top 10
  references:
    - "https://github.com/Charlie-belmer/nosqli"
    - "https://owasp.org/www-community/Injection_Flaws"
  cwe:
    - CWE-943
    - CWE-89
  cve:
    - CVE-2020-35847
    - CVE-2021-22911
    - CVE-2023-28359

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(a)(2)(i)
    - 45 CFR ยง 164.308(a)(5)(ii)(C)
  SOC 2:
    - Logical and Physical Access Controls
    - User Authentication Mechanisms
  PCI DSS:
    - Requirement 8
    - Requirement 10
  ISO 27001:
    - A.9.2.2
    - A.9.4.3
  NIST 800-53:
    - IA-2
    - IA-5
  CSA CCM:
    - IAM-03
    - IAM-06
  CIS Controls:
    - IG1 Safeguard 5.1
    - IG1 Safeguard 5.4
    - IG2 Safeguard 16.11
  FedRAMP:
    - IA-2
    - IA-5
  NIST 800-171:
    - 3.5.1
    - 3.5.2
  FISMA:
    - IA-2
    - IA-5
  Cybersecurity Maturity Model Certification (CMMC):
    - IA.1.076
    - IA.2.078
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    contains_either:
      - GET
  query_param:
    for_one:
      key:
        regex: .*
        extract: changed_query_key
      value:
        regex: .*
        extract: changed_query_value
execute:
  type: single
  requests:
    - req:
        - delete_query_param: ${changed_query_key}
        - add_query_param:
            !!str ${changed_query_key} [$]: ${changed_query_value}
validate:
  and:
    - response_payload:
        not_contains:
          - <html>
          - </html>
    - or:
        - response_payload:
            regex: "Uncaught MongoDB\\\\Driver\\\\Exception\\\\CommandException: unknown operator"
        - response_payload:
            regex: "(?i)MongoError"
        - response_payload:
            regex: "(?i)unterminated string literal"
        - response_payload:
            regex: "Cast to string failed for value"
settings:
  duration: FAST
