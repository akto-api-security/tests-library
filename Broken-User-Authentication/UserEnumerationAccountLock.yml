id: USER_ENUM_ACCOUNT_LOCK
info:
  name: "User Enumeration using Locked Account Role"
  description: >
    "In a Broken Authentication test involving user enumeration via account lock,  security assessors aim to identify vulnerabilities in an application's authentication  mechanism. By intentionally triggering account lockouts through multiple login  attempts, they assess whether the system inadvertently discloses valid usernames  or provides distinguishing responses for valid and invalid accounts. This testing  approach helps uncover potential security weaknesses in account lockout policies,  aiding in the prevention of user enumeration attacks that could assist malicious  actors in identifying valid user accounts for further exploitation."
  details: >
    "During a Broken Authentication test focusing on user enumeration via account lock,  security assessments involve intentionally triggering account lockouts through  multiple login attempts. The objective is to identify whether the system reveals  valid usernames or exhibits distinguishable responses for valid and invalid  accounts. This testing method helps uncover vulnerabilities in account lockout  policies, preventing potential user enumeration attacks and fortifying the  application against unauthorized access attempts."
  impact: >
    "The impact of a Broken Authentication test revealing user enumeration via account  lock can be severe, potentially exposing valid usernames and aiding malicious  actors in targeted attacks. Knowledge of valid user accounts allows for more  focused and successful exploitation attempts, such as brute force attacks or  phishing. Mitigation measures involve strengthening account lockout policies,  implementing robust user verification processes, and conducting regular security  assessments to identify and address vulnerabilities in the authentication system."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: USER_ENUM_ACCOUNT_LOCK
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
attributes:
  nature: NON_INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: https://github.com/akto-api-security/tests-library/blob/hotfix/fixed_some_minor_bugs/compliance/bua.conf
auth:
  authenticated: true
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  request_payload:
    for_one:
      key:
        regex: "username|^user$|^userid$|^user_id$|^login$|^login_id$|email|^account$|^account_id$|^member$|^member_id$|^id$|^user_name$|^uname$|^identifier$|^user_identifier$|^admin$|^nickname$|^handle$|^alias$|^principal$|^profile$|^profile_id$|^name$|^signin$|^auth$|^credential$|^user_login$|^user_account$|^user_email$|^employee$|^employee_id$|^operator$|^customer_id$|^subscriber$|^subscriber_id$|^participant$|^participant_id$|client_id|^userLoginID$|^client-name$"
        extract: userKey
      value:
        regex: "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
execute:
  type: multiple
  requests:
    - req:
        - modify_body_param:
            userKey: dummyUser@dummy.com
        - validate:
            response_code:
              gte: 400
              lt: 410
            response_payload:
              not_contains:
                - rate-limit
                - rate_limit
                - rate limit
                - multiple failed attempts
                - account is locked
                - account is blocked
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: dummyUser@dummy.com
        - modify_header:
            ${roles_access_context.LOCKED_ACCOUNT_SYSTEM_ROLE}: 1
        - validate:
            response_payload:
              neq: "${x1.response.body}"
              not_contains:
                - rate-limit
                - rate_limit
                - rate limit
                - multiple failed attempts
                - account is locked
                - account is blocked
            response_code:
              eq: "${x1.response.status_code}"
        - success: vulnerable

