id: PASSWD_RESET_POISON_MIDDLEWARE
info:
  name: "Password Reset Endpoint Poisoning via Middleware"
  description: > 
    "Password reset poisoning via middleware is a security risk where attackers manipulate 
    middleware components during the password reset process. By injecting malicious code 
    or intercepting and modifying reset requests, attackers compromise the reset mechanism, 
    potentially leading to unauthorized access and account compromise. Securing middleware 
    components is crucial to prevent such exploits and maintain the integrity of password 
    reset functionalities in web applications."
  details: >
    "Password reset poisoning via middleware is a security vulnerability where attackers 
    manipulate middleware components during the password reset process, potentially 
    injecting malicious code or intercepting and modifying reset requests. This 
    compromise can lead to unauthorized access and account compromise, highlighting 
    the need to secure middleware to ensure the integrity of password reset functionalities 
    in web applications."
  impact: >
    "The impact of password reset poisoning via middleware can be severe, as it allows 
    attackers to compromise the password reset process, leading to unauthorized access and 
    potential account hijacking. By manipulating middleware components, malicious actors 
    may inject malicious code, posing a risk of broader system vulnerabilities and data 
    breaches. Addressing and mitigating this vulnerability promptly is crucial to 
    prevent unauthorized access and uphold the overall security of web applications."
  remediation: "To mitigate password reset poisoning via middleware, ensure middleware components are securely configured and protected against unauthorized access. Implement input validation and encryption to prevent injection attacks and data tampering. Monitor for suspicious activity and regularly audit security measures to maintain the integrity of password reset functionalities."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: PASSWD_RESET_POISON_MIDDLEWARE
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
api_selection_filters:
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
  response_code:
    gte: 200
    lte: 300
    extract: resp_code
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  method:
    not_contains_either:
      - GET
  url:
    contains_either:
      - password-reset
      - reset-password
      - "user/reset"
      - "account/recover"
      - "api/password_reset"
      - "password/reset"
      - "password/forgot"
      - "reset/confirm"
      - "password/new"
      - "account/reset-password-request"
      - "password_reset_request"
      - "unlock_account"
      - "account_recovery"
  request_headers:
    for_one:
      key:
        eq: host
execute:
  type: single
  requests:
  - req:
      - modify_header:
          host: evil.com

validate:
  response_code:
    eq: ${resp_code}
  response_headers:
    for_one:
      value:
        contains_either: evil.com
  response_payload:
    percentage_match_schema:
      gt: 90
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts