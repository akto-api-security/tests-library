id: GRAPHQL_HTTP_METHOD_CSRF
info:
  name: "CSRF test with HTTP Method in GraphQL"
  description: "In this CSRF test with HTTP method manipulation in GraphQL, we examine the vulnerability of a GraphQL endpoint to Cross-Site Request Forgery attacks by altering HTTP methods. By sending GraphQL queries with modified HTTP methods like POST or GET, the test assesses if the server properly validates and protects against unauthorized requests. This evaluation helps ensure the GraphQL API's resilience to CSRF attacks and maintains the security of user data and actions."
  details: "In this CSRF test with HTTP method manipulation in GraphQL, testers modify the HTTP methods used in requests to assess if the GraphQL endpoint is susceptible to unauthorized actions. By sending GraphQL queries with alternative methods like POST or GET, they determine if the server correctly validates and protects against CSRF attacks. This evaluation helps identify potential security flaws and ensures the GraphQL API is resilient to unauthorized access or modification of data."
  impact: "If a CSRF test with HTTP method manipulation in GraphQL exposes vulnerabilities, it could allow attackers to forge requests and perform unauthorized actions on behalf of users. This may lead to severe consequences such as data theft, account takeover, or unauthorized data modifications. Exploiting these weaknesses could damage the organization's reputation, result in financial losses, and even lead to legal repercussions."
  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: GRAPHQL_HTTP_METHOD_CSRF
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(a)(2)(i)
    - 45 CFR ยง 164.308(a)(5)(ii)(C)
  SOC 2:
    - Logical and Physical Access Controls
    - User Authentication Mechanisms
  PCI DSS:
    - Requirement 8
    - Requirement 10
  ISO 27001:
    - A.9.2.2
    - A.9.4.3
  NIST 800-53:
    - IA-2
    - IA-5
  CSA CCM:
    - IAM-03
    - IAM-06
  CIS Controls:
    - IG1 Safeguard 5.1
    - IG1 Safeguard 5.4
    - IG2 Safeguard 16.11
  FedRAMP:
    - IA-2
    - IA-5
  NIST 800-171:
    - 3.5.1
    - 3.5.2
  FISMA:
    - IA-2
    - IA-5
  Cybersecurity Maturity Model Certification (CMMC):
    - IA.1.076
    - IA.2.078
auth:
  authenticated: true
api_selection_filters:
  url:
    regex: graphql
  method:
    eq: POST
  request_payload:
    for_one:
      key:
        contains_either: mutation
  response_payload:
    length:
      gt: 0
    not_contains:
      - error
      - issue
      - UserNotAuthorizedError
      - INTERNAL_SERVER_ERROR
      - "GRAPHQL_VALIDATION_FAILED"
      - "graphQL syntax error"
      - "Syntax Error: Expected Name, found <EOF>."
      - "GRAPHQL_PARSE_FAILED"
      - "Bad Request"

execute:
  type: single
  requests:
    - req:
        - modify_method: GET


validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    percentage_match:
      gte: 90
    length:
      gt: 0
    not_contains:
      - error
      - issue
      - UserNotAuthorizedError
      - INTERNAL_SERVER_ERROR
      - "GRAPHQL_VALIDATION_FAILED"
      - "graphQL syntax error"
      - "Syntax Error: Expected Name, found <EOF>."
      - "GRAPHQL_PARSE_FAILED"
      - "Bad Request"
strategy:
  run_once: /
