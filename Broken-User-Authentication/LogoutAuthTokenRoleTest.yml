id: LOGOUT_AUTH_TOKEN_TEST
info:
  name: "Authentication Bypass with Logged Out Token by hitting Authenticated APIs"
  description: > 
    "Authentication Bypass with Logged Out Token occurs when attackers exploit flaws in 
    an application's authentication system by using tokens that should be invalidated 
    after a user logs out. The attack involves attempting to access authenticated APIs 
    with expired tokens, taking advantage of weaknesses in token validation. This 
    vulnerability can result in unauthorized access, emphasizing the need for robust 
    token management practices to prevent potential security breaches."
  details: >
    "Authentication Bypass with Logged Out Token occurs when attackers exploit 
    vulnerabilities in an application's authentication system by using tokens that 
    should be invalidated after a user logs out. By attempting unauthorized access 
    to authenticated APIs with expired tokens, attackers take advantage of weaknesses 
    in token validation, potentially leading to security breaches. Addressing this 
    issue requires strengthening token management practices to ensure robust and 
    secure authentication processes."
  impact: >
    "The impact of Authentication Bypass with Logged Out Token is significant, as it 
    exposes the application to unauthorized access even after users have logged out. 
    Attackers exploiting this vulnerability can gain entry to authenticated APIs, 
    potentially compromising sensitive data or functionalities. This security lapse 
    underscores the importance of promptly addressing token validation issues to 
    prevent post-logout unauthorized access and ensuring the overall security of 
    the authentication mechanism."
  remediation: "To mitigate Authentication Bypass with Logged Out Token, ensure that tokens are properly invalidated after a user logs out. Implement robust token management practices, such as setting short expiration times for tokens and actively revoking tokens upon logout. Additionally, strengthen token validation mechanisms to detect and reject expired or revoked tokens. Regularly review and update the authentication system to address any identified vulnerabilities and enhance security measures. Conduct security assessments to identify potential weaknesses in token management and validation processes."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: LOGOUT_AUTH_TOKEN_TEST
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901
auth:
  authenticated: true
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
execute:
  type: single
  requests:
    - req:
      - modify_header:
          ${roles_access_context.LOGGED_OUT_SYSTEM_ROLE}: 1       
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    percentage_match:
      gte: 90
    not_contains_either:
      - Error
      - Internal Server 
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
