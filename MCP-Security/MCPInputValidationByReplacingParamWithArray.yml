---
id: INPUT_VALIDATION_BY_REPLACING_PARAM_WITH_ARRAY_MCP
info:
  name: Input Validation by Replacing Param with Array (MCP)
  description: |
    This test analyzes the application's response when parameters expected to be a single value are replaced with arrays.
  details: |
    The test involves submitting requests where parameters are altered to be arrays, allowing for observation of the applicationâ€™s validation and error handling.
  impact: |
    Insufficient input validation may cause processing errors, unexpected application behavior, or the potential for exploitation through malformed input.
  category:
    name: MCP_INPUT_VALIDATION
    shortName: MCP_INPUT_VALIDATION
    displayName: Model Context Protocol (MCP) Security - Input Validation
  subCategory: INPUT_VALIDATION_BY_REPLACING_PARAM_WITH_ARRAY_MCP
  severity: LOW
  tags:
  - Business logic
  - OWASP top 10
  - HackerOne top 10
  references:
  - https://endava.github.io/cats/docs/fuzzers/header-fuzzers
  - https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
  - https://owasp.org/www-project-developer-guide/draft/design/web_app_checklist/validate_inputs/
  cwe:
  - CWE-20
  cve:
  - CVE-2018-20679
  - CVE-2019-14271
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: SLOW
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    eq: POST
  request_payload:
    contains_all:
    - jsonrpc
    - method
    - params
    for_one:
      key:
        contains_either: "$magic From the request body, locate the `params` object. Inside `params`, locate the `arguments` object if it exists. Select any one key inside `arguments` whose value is a primitive (string, number, boolean). Do not select keys whose values are arrays or objects. Do not select the key `name`. Return the key name."
        extract: userKey
      value:
        extract: userVal
execute:
  type: multiple
  requests:
  - req:
    - delete_body_param: "${userKey}"
    - validate:
        response_payload:
          contains_either: "$magic Check whether the response contains any kind of error response (error status, error fields, error messages, error flags or any json key related to error). If there is any error then return nothing just empty braces []. Else return a list of words from the response only in case of successful response."
    - success: exit
    - failure: x2
  - req:
    - modify_body_param:
        userKey:
        - "${userVal}"
    - validate:
        response_payload:
          contains_either: "$magic Check whether the response contains any kind of error response (error status, error fields, error messages, error flags or any json key related to error). If there is any error then return nothing just empty braces []. Else return a list of words from the response only in case of successful response."
    - success: vulnerable
