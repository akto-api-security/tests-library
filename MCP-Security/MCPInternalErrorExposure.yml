---
id: MCP_INTERNAL_ERROR_EXPOSURE
info:
  name: Internal Error Exposure (MCP)
  description: >
    This test checks whether the MCP server leaks internal error details such as stack traces, file paths, or exception messages in response payloads.
    It also verifies that a valid MCP-compliant error object with a properly ranged error code is returned and that basic error format is respected.
  details: >
    The test modifies only valid-looking parameters to simulate internal logic or runtime failures while preserving the MCP schema.
    It marks the response as vulnerable if:
    - Internal error traces are exposed
    - OR no valid MCP error code (-32603 to -32000) is returned
    - OR the response includes a broken/invalid error object
    - OR internal leakage is detected using an LLM validator
  impact: >
    Improper error handling or exposing internals breaks encapsulation, helps attackers fingerprint internal services,
    and may allow exploit development or behavior probing.
  category:
    name: MCP
    shortName: MCP
    displayName: Model Context Protocol (MCP) Security
  subCategory: MCP_INTERNAL_ERROR_EXPOSURE
  severity: MEDIUM
  tags:
    - Error handling
    - Information Disclosure
    - OWASP top 10
    - MCP security
    - mcp-security
  references:
    - https://cheatsheetseries.owasp.org/cheatsheets/Improper_Error_Handling_Cheat_Sheet.html
    - https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/02-Testing_for_Error_Code
  cwe:
    - CWE-209
    - CWE-497
  cve: []
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  method:
    eq: POST
  and:
    - request_payload:
        for_one:
          key:
            regex: ^(?!id|params|method|jsonrpc|name|arguments)
            extract: changed_body_key    
    - request_payload:
        contains_all:
          - jsonrpc
          - method
          - params
wordLists:
  invalidValues:
    - "null"
    - "123"
    - "true"
  mcpValidErrorCodes:
    - '-32603'
    - '-32602'
    - '-32600'
    - '-32000'
    - '-32001'
    - '-32099'
  mcpInvalidErrorIndicators:
    - '"code": 0'
    - '"code": null'
    - '"code": 200'
    - '"error": {}'
    - '"error": null'
    - '"message": "Something went wrong"'
  errorLeakIndicators:
    - "Traceback (most recent call last):"
    - "java.lang.Exception"
    - "TypeError:"
    - "ReferenceError:"
    - "IndexError:"
    - "File \"/"
    - "at com."
    - "at org."
    - "Exception in thread"
    - "RuntimeError:"
    - "InternalError"
    - "module.exports"
    - "__stack__"
    - "System.StackTrace"
    - "Stacktrace"
    - "Failed to evaluate"
execute:
  type: single
  requests:
  - req: 
      - add_header:
          x-akto-ignore: 123
      - modify_body_param:
          changed_body_key: ${invalidValues}
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    or:
      - contains_either: "${errorLeakIndicators}"
      - contains_either:
          - $magic Check if this response exposes any internal server behavior, such as stack traces, error class names, file paths, or debugging output â€” even if wrapped in a valid JSON-RPC error structure.
      - not_contains: "${mcpValidErrorCodes}"
      - contains_either: "${mcpInvalidErrorIndicators}"