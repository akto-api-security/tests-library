id: HTTP_HEADER_IP_INJECTION_DOS_MCP
info:
  name: "Denial of Service test by entering long and random IP Address in headers containing IP Address (MCP)"
  description: "This test involves deliberately injecting excessively long or random IP addresses into HTTP headers, such as `X-Forwarded-For`. This test aims to overwhelm the system by causing processing errors or excessive resource consumption. By exploiting the system's handling of these malformed IP addresses, the test can reveal vulnerabilities that may lead to service degradation or outages."
  details: "In this test, attackers input unusually long or random IP addresses into HTTP headers, such as `X-Forwarded-For`, to evaluate how the system handles such input. The intent is to see if the server or application becomes unresponsive or crashes due to excessive resource usage or malformed input processing. This can help identify weaknesses in how the system parses and manages IP address data, potentially leading to Denial of Service (DoS) conditions."
  impact: "The impact of this Denial of Service (DoS) test can be significant, potentially causing system slowdowns, crashes, or outages. By overwhelming the system with excessively long or random IP addresses, the test may lead to resource exhaustion or processing errors. This disruption can affect the availability and reliability of the service, potentially resulting in downtime or degraded performance for users."
  category:
    name: MCP
    shortName: MCP
    displayName: Model Context Protocol (MCP) Security
  subCategory: HTTP_HEADER_IP_INJECTION_DOS_MCP
  severity: MEDIUM
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa4-unrestricted-resource-consumption.md"
  cwe:
    - CWE-400
  cve:
    - CVE-2023-4647
    - CVE-2023-38254
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: SLOW


api_selection_filters:
  method:
    eq: POST
  request_payload:
    contains_all:
    - jsonrpc
    - method
    - params
  request_headers:
    for_one:
      key:
        regex: "^X-Forwarded-For$|^X-Real-IP$|^X-Forwarded-Host$|^X-Cluster-Client-IP$|^Forwarded$|^CF-Connecting-IP$|^True-Client-IP$|^X-Original-Forwarded-For$|^X-Client-IP$|^Client-IP$|^X-Azure-Client-IP$|^X-Azure-ClientIP$|^X-Akamai-Client-IP$|^X-Originating-IP$|^X-Remote-IP$|^X-Appengine-User-IP$|^Via$|^X-Host$|^X-ProxyUser-Ip$|^X-Forwarded$|^X-Real-IP-From$|^CF-Connecting-IPv6$|^Remote-Addr$|^X-Client-Public-IP$|^X-Forwarded-For-IP$|^X-Cloudflare-CDN-Loop$|^X-Coming-From$|^X-Originating-URL$|^X-Client-Connection-IP$"
        extract: userKey
      value:
        regex: "\b(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b"
        extract: userVal
execute:
  type: multiple
  requests:
    - req:
        - add_header:
            dummy_Header_Key: "dummyValue"
        - validate:
            response_payload:
              not_contains:
              - Error
              - Internal Server
              - Failed
              - Unauthorized
              - access denied
              - Forbidden
              - Method Not allowed
              - Gateway timeout
              - request timeout
              - server error
              - server busy
              - authentication error
              - authorization error
              - validation error
              - Permission Denied
              - invalid token
              - token expired
              - session expired
              - session timeout
              - unexpected error
              - unable to process request
              - bad request
              - service unavailable
              - account is locked
              - account is blocked
              - multiple failed attempts
              - NotAuthenticated
        - success: x2
        - failure: exit
    - req:
        - modify_header:
            userKey: "1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1, 1.1.1.1"
        - validate:
            response_code:
              gt: 505
validate:
  and:
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - 5001
    - compare_greater:
        - ${x2.response.stats.median_response_time}
        - ${x1.response.stats.median_response_time} * 5

strategy:
  run_once: /