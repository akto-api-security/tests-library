---
id: MCP_INVALID_ORIGIN_HEADER_REBINDING
info:
  name: MCP Origin Header Validation - Rebinding Protection
  description: |
    This test verifies whether the MCP server enforces DNS rebinding protection by validating the Origin header during streamable HTTP connections (e.g., SSE or WebSocket upgrade). DNS rebinding attacks exploit browsers to bypass same-origin policies and access internal resources.
  details: |
    The test sends a request with a spoofed Origin header to the MCP streamable transport endpoint. A secure server must reject requests where the Origin does not match allowed trusted origins. If the server accepts the request and begins streaming or upgrading the connection, it indicates missing or misconfigured rebinding protection.
  impact: |
    If the Origin header is not validated, attackers can exploit DNS rebinding to trick the browser into sending authenticated requests to internal services (like localhost-bound MCP endpoints). This may lead to unauthorized access or sensitive data exposure.
  category:
    name: MCP
    shortName: MCP
    displayName: Model Context Protocol (MCP) Security
  subCategory: MCP_INVALID_ORIGIN_HEADER_REBINDING
  severity: HIGH
  tags:
  - DNS rebinding
  - Origin validation
  - Streamable HTTP
  - API security
  - OWASP top 10
  references:
  - https://owasp.org/www-community/attacks/DNS_Rebinding
  - https://datatracker.ietf.org/doc/html/rfc6454#section-7
  - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin
  cwe:
  - CWE-346
  - CWE-441
  cve: []
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
api_selection_filters:
  method:
    eq: POST
  request_payload:
    contains_all:
    - jsonrpc
    - id
    - method
  request_headers:
    for_one:
      key:
        regex: (?i)origin
        extract: originHeaderKey
      value:
        extract: originHeaderValue
execute:
  type: single
  requests:
    req:
      modify_header:
        ${originHeaderKey}: https://malicious.attacker.com/
validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    contains_either: "$magic If the response indicates any error related to the Origin header, CORS validation, or failed due to invalid origin or similar origin-based issue, then return ONLY not_found. For all other types of responses proceed with normal evaluation using rule type - contains_either"
