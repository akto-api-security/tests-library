---
id: MCP_ACCESS_CONTROL_BYPASS_SENSITIVE_RESOURCE
info:
  name: Access Control Bypass on Sensitive Resource (MCP)
  description: |
    This test attempts to access sensitive or protected MCP resources without proper authorization or authentication to identify missing or misconfigured access controls.
  details: |
    Sensitive resources such as model weights, internal diagnostics, or configuration files must be protected with strict access controls. This test targets `resources/read` methods where the `uri` indicates a protected or restricted file, and checks if access is wrongly permitted.
  impact: |
    Improper access controls may allow unauthorized users to access confidential data, model artifacts, or internal server logic, leading to severe data leaks and security breaches.
  category:
    name: MCP
    shortName: MCP
    displayName: Model Context Protocol (MCP) Security
  subCategory: MCP_ACCESS_CONTROL_BYPASS_SENSITIVE_RESOURCE
  severity: HIGH
  tags:
  - Access Control
  - Broken Authentication
  - MCP Resource Abuse
  - Sensitive Resource Exposure
  references:
  - https://modelcontextprotocol.io/docs/concepts/resources
  - https://owasp.org/Top10/A01_2021-Broken_Access_Control
  cwe:
  - CWE-284
  cve: []
attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
api_selection_filters:
  method:
    eq: POST
  response_code:
    gte: 200
    lt: 300
  and:
  - request_payload:
      contains_all:
      - jsonrpc
      - method
      - params
  - request_payload:
      for_one:
        key:
          eq: method
        value:
          regex: ^resources/read
  - request_payload:
      for_one:
        key:
          eq: uri
          extract: uriParam
wordLists:
  sensitiveUris:
  - /internal/model-weights.bin
  - /config/secrets.yaml
  - /logs/internal.log
  - /private/data.db
  - /debug/memory.dump
  accessBypassIndicators:
  - model loaded
  - access granted
  - 'configuration:'
  - 'secret:'
  - log contents
  - memory dump
  - authentication not required
execute:
  type: single
  requests:
  - req:
    - modify_body_param:
        uriParam: "${sensitiveUris}"
validate:
  response_payload:
    or:
    - contains_either: "${accessBypassIndicators}"
    - contains_either: |
        $magic Analyze whether the response indicates access to sensitive or protected resources, such as model weights, secret configs, logs, or internal binaries, without proper authentication or authorization. Look for leaked content or permissive access behaviors.
