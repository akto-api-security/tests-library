id: PUPPETEER_RENDERER_LFI
info:
  name: "Puppeteer Renderer Directory Traversal Test"
  description: "The Puppeteer Renderer Directory Traversal Test examines the security of a Puppeteer-based application to identify potential directory traversal vulnerabilities. Directory traversal occurs when an attacker manipulates file paths to access files or directories outside of the intended directory scope. In this test, the focus is on ensuring that the Puppeteer renderer, which automates browser actions, does not allow users to navigate beyond permitted directories. Proper input sanitization and path validation are critical to preventing attackers from accessing sensitive files or system resources."
  details: "The Puppeteer Renderer Directory Traversal Test checks for vulnerabilities where an attacker can manipulate file paths to traverse directories in a Puppeteer-based application. Puppeteer automates browser tasks, but if not properly secured, users could exploit this flaw to access files outside of the designated directory, such as sensitive configuration files or system resources. This test identifies areas where user-supplied input, like file paths, may not be adequately sanitized or validated. Ensuring proper path sanitization and restricting access to critical files can mitigate the risk of directory traversal attacks."
  impact: "The impact of a **Puppeteer Renderer Directory Traversal** vulnerability is significant, as it can allow attackers to access sensitive files or system resources outside the intended directory. This could lead to unauthorized access to configuration files, credentials, or other confidential data. Exploiting this flaw could also result in data leakage, privilege escalation, or further attacks on the system. Ensuring proper input sanitization and limiting file access to authorized directories is crucial to preventing such security risks."
  category:
    name: LFI
    shortName: Local File Inclusion
    displayName: Local File Inclusion (LFI)
  subCategory: PUPPETEER_RENDERER_LFI
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion"
    - "https://raw.githubusercontent.com/emadshanab/LFI-Payload-List/master/LFI%20payloads.txt"
  cwe:
    - CWE-98
    - CWE-22
  cve:
    - CVE-2021-39433
    - CVE-2023-22973


settings:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
wordLists:
  paths:
    - '/html?url=file:///etc/passwd'
execute:
  type: single
  requests:
    - req:
        - modify_url: "${paths}"
        - modify_method: GET
        - replace_body: '{}'
validate:
  response_code:
    eq: 200
  response_payload:
    length:
      gt: 0
    regex: "root:.*:0:0:"
strategy:
  run_once: /
