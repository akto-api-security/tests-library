id: NODEJS_DIRECTORY_TRAVERSAL
info:
  name: "Node.js Local File Inclusion"
  description: "Node.js Local File Inclusion (LFI) is a security vulnerability that occurs in Node.js applications when user input is not properly validated, allowing attackers to include arbitrary files from the server's filesystem. If an application allows users to specify file paths without adequate checks, attackers can exploit this weakness to access sensitive files, such as configuration settings or logs. This unauthorized access can lead to information disclosure and may provide attackers with insights that facilitate further exploitation of the application. To mitigate this risk, it is essential to implement strict input validation and avoid using user-defined file paths in file operations."
  details: "Node.js Local File Inclusion (LFI) occurs when a Node.js application improperly handles user input for file paths, allowing malicious users to include files from the server's filesystem. Attackers can craft requests to manipulate the file path, potentially gaining access to sensitive files, such as environment variables, configuration files, or user data stored on the server. This vulnerability can lead to critical information disclosure, enabling attackers to escalate privileges or exploit further weaknesses in the application. To prevent LFI, developers should ensure strong input validation, implement whitelisting for acceptable file paths, and follow secure coding practices in file handling operations."
  impact: "The impact of Node.js Local File Inclusion (LFI) can be significant, as it allows attackers to access sensitive files on the server, potentially leading to severe information disclosure and security breaches. By exposing critical data such as configuration files, API keys, or user credentials, attackers can leverage this information to escalate privileges, manipulate application behavior, or gain unauthorized access to other systems. Such breaches can result in reputational damage, financial losses, and regulatory penalties for organizations. Additionally, if attackers gain insights into the systemâ€™s architecture through LFI, they may exploit other vulnerabilities, increasing the overall risk to the application and its infrastructure."
  category:
    name: LFI
    shortName: Local File Inclusion
    displayName: Local File Inclusion (LFI)
  subCategory: NODEJS_DIRECTORY_TRAVERSAL
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/11.1-Testing_for_Local_File_Inclusion"
    - "https://raw.githubusercontent.com/emadshanab/LFI-Payload-List/master/LFI%20payloads.txt"
  cwe:
    - CWE-98
    - CWE-22
  cve:
    - CVE-2021-39433
    - CVE-2023-22973


settings:
  nature: INTRUSIVE
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
wordLists:
  paths:
    - '/static/../../../a/../../../../etc/passwd'
execute:
  type: single
  requests:
    - req:
        - modify_url: "${paths}"
        - modify_method: GET
        - replace_body: '{}'
validate:
  response_code:
    eq: 200
  response_payload:
    length:
      gt: 0
    regex: "root:.*:0:0:"
    not_contains:
      - <html>
      - </html>
strategy:
  run_once: /
