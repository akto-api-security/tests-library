id: BASIC_XSS_DELETE
info:
  name: "XSS by changing request parameters with DELETE HTTP method"
  description: "XSS by changing request parameters with the DELETE HTTP method exploits the flexibility of DELETE requests, which partially update server resources. Attackers manipulate input parameters in the DELETE request body or URL to inject malicious scripts. If the server improperly sanitizes this input, the payload is stored or reflected, leading to Cross-Site Scripting (XSS). This method targets dynamic web applications that handle user-modifiable content without robust validation."
  details: "This vulnerability arises when applications allow partial resource updates but fail to validate input parameters properly. Attackers craft DELETE requests with malicious scripts in fields like JSON payloads or query parameters. If the application stores or reflects the payload without sanitization, it can execute in a victim's browser. This technique is particularly potent in APIs and dynamic applications with user-modifiable content."
  impact: "The impact of this test includes unauthorized script execution in users' browsers, leading to data theft, session hijacking, or account compromise. Attackers can deface web pages, spread malware, or escalate privileges by exploiting trust in the vulnerable application. In severe cases, it may also enable lateral movement within the target system, threatening overall application security."
  category:
    name: XSS
    shortName: XSS
    displayName: Cross-site scripting (XSS)
  subCategory: BASIC_XSS_DELETE
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-community/attacks/xss/"
  cwe:
    - CWE-79
  cve:
    - CVE-2022-34196
    - CVE-2023-44764

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST


api_selection_filters:
  response_code:
    gte: 200
    lt: 300

  method:
    contains_either:
      - "DELETE"
  

  response_payload:
    contains_either:
      - <!doctype html>

  request_payload:
    for_one:
      key:
        regex: .*
        extract: body_param_key

execute:
  type: single
  requests:
    - req:
        - modify_body_param:
            body_param_key: '%22%3E%3C%2Fscript%3E%3Cscript%3Ealert%28document.domain%29%3C%2Fscript%3E'

validate:
  response_payload:
    contains_all:
      - "<script>alert(document.domain)</script>"
      - <!doctype html>
  response_code:
    eq: 204
