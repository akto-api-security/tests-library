id: BASIC_XSS
info:
  name: "XSS by changing request parameters"
  description: "Testing vulnerability by injecting malicious scripts in query parameters to bypass security measures and execute unauthorized code." 
  details: >
            "Security test that aims to identify vulnerabilities in web applications. By injecting malicious scripts in query parameters , attackers can bypass security measures and execute unauthorized code on the victim's browser."
            "This test helps developers uncover and address potential XSS (Cross-Site Scripting) vulnerabilities, ensuring robust protection against malicious attacks."
  impact: "An XSS vulnerability can have significant impacts, including the potential for data theft, unauthorized access, session hijacking, defacement of web pages, and the injection of malicious content."
  remediation: "To mitigate XSS by changing request parameters, implement thorough input validation and output encoding. Sanitize user inputs to remove any potentially malicious characters, particularly those that could trigger script execution. Utilize frameworks or libraries that automatically escape or encode user-supplied data before rendering it in HTML responses. Employ Content Security Policy (CSP) headers to restrict the sources from which scripts can be loaded, further mitigating the risk of XSS attacks. Additionally, conduct regular security reviews and penetration testing to identify and address any potential vulnerabilities in your application's input handling mechanisms."
  category:
    name: XSS
    shortName: XSS
    displayName: Cross-site scripting (XSS)
  subCategory: BASIC_XSS
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-community/attacks/xss/"
  cwe:
    - CWE-79
  cve:
    - CVE-2022-34196 
    - CVE-2023-44764

api_selection_filters:
  response_code:
    gte: 200
    lt: 300

  method:
    contains_either:
      - "GET"

  response_payload:
    contains_either:
      - <!doctype html>

  query_param:
    for_one:
      key:
        regex: .*
        extract: query_param_key

execute:
  type: single
  requests:
    - req:
      - modify_query_param:
          query_param_key: '%22%3E%3C%2Fscript%3E%3Cscript%3Ealert%28document.domain%29%3C%2Fscript%3E'

validate:
  response_payload:
    contains_all:
      - "<script>alert(document.domain)</script>"
      - <!doctype html>