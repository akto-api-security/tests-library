id: APACHE_HTTP_SERVER_XSS
info:
  name: "Apache HTTP Server Cross-Site Scripting"
  description: "Apache HTTP Server Cross-Site Scripting (XSS) vulnerabilities occur when the server improperly handles user input, allowing malicious scripts to be injected into web pages. These scripts can run in the browsers of users visiting the affected site, potentially leading to session hijacking, data theft, or unauthorized actions. Proper input validation, escaping of dynamic content, and secure configuration can help prevent XSS in Apache HTTP Server."
  details: "Apache HTTP Server Cross-Site Scripting (XSS) vulnerabilities arise when the server fails to properly validate or sanitize user inputs. This allows attackers to inject harmful scripts into web pages, which execute in the browsers of unsuspecting users. These scripts can be used to steal sensitive information, hijack user sessions, or impersonate users. To prevent XSS in Apache HTTP Server, it's essential to implement input validation, escape dynamic content, and regularly update server configurations."
  impact: "The impact of Apache HTTP Server Cross-Site Scripting (XSS) vulnerabilities can be significant, enabling attackers to inject malicious scripts into web pages viewed by others. This can lead to session hijacking, theft of sensitive data like login credentials, or unauthorized actions performed on behalf of users. In some cases, XSS can also be exploited to distribute malware or launch further attacks, compromising the security and integrity of the server and its users."
  category:
    name: XSS
    shortName: XSS
    displayName: Cross-site scripting (XSS)
  subCategory: APACHE_HTTP_SERVER_XSS
  severity: LOW
  references:
    - "https://owasp.org/www-community/attacks/xss/"
    - "https://hackerone.com/reports/840759"
  cwe:
    - CWE-79
  cve:
    - CVE-2019-10092

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: compliance/xss.conf

api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
execute:
  type: single
  requests:
    - req:
        - modify_method: GET
        - modify_url: "/%5cgoogle.com/evil.html"
        - replace_body: '{}'

validate:
  response_payload:
    length:
      gt: 0
    contains_all:
      - "Proxy Error"
      - "<a href=\"/\\google.com/evil.html\">"
strategy:
  run_once: /
