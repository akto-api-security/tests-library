id: SELENIUM_NODE_EXPOSURE
info:
  name: "Selenium - Node Exposure"
  description: "Selenium - Node Exposure refers to the security risk where the Selenium WebDriver server is exposed to the internet, allowing attackers to send arbitrary commands to interact with web applications. If the Selenium Node, responsible for running tests on the browser, is not properly secured, it can lead to remote code execution, unauthorized access, or manipulation of the application being tested. Proper firewall configurations and access controls are essential to mitigate this risk."
  details: "Selenium - Node Exposure occurs when the Selenium WebDriver node, used for running browser-based automation tests, is exposed to the public internet without adequate security measures. This exposure allows attackers to send malicious commands to the WebDriver server, potentially executing arbitrary actions on the web application being tested. Insecure configurations, such as failing to restrict access to trusted IPs or using weak authentication, can make the Selenium Node vulnerable to exploitation. Proper isolation and access control are essential to mitigate these risks."
  impact: "The impact of Selenium - Node Exposure can be severe, as attackers can gain remote access to the exposed Selenium WebDriver node and execute arbitrary commands on the web application. This could lead to data theft, unauthorized actions, or manipulation of the application, potentially compromising its integrity. Exploiting this vulnerability may also allow attackers to execute malicious code, escalate privileges, or disrupt testing and development environments."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: SELENIUM_NODE_EXPOSURE
  severity: MEDIUM
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-200
    - CWE-16
  cve:
    - CVE-2021-43798

attributes:
  nature: NON_INTRUSIVE
  plan: PRO
  duration: FAST


api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
wordLists:
  paths:
    - '/wd/hub'
execute:
  type: single
  requests:
    - req:
        - modify_url: "${paths}"
        - follow_redirect: true
        - modify_method: GET
        - replace_body: '{}'
validate:
  response_code:
    eq: 200
  response_payload:
    length:
      gt: 0
    contains_either:
      - 'WebDriverRequest'
      - '<title>WebDriver Hub</title>'
strategy:
  run_once: /
