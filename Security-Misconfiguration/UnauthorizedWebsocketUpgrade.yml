id: UNAUTHORIZED_WEBSOCKET_UPGRADE
info:
  name: "Unauthorized WebSocket Upgrade"
  description: >
    "Unauthorized WebSocket upgrade occurs when an attacker successfully upgrades an HTTP connection to a WebSocket connection, gaining unauthorized access to internal services or sensitive resources. This typically happens when proper access control mechanisms or authentication are not enforced during the WebSocket upgrade process."
  details: >
    "WebSockets allow bidirectional communication between the client and server over a persistent connection. If the server does not properly validate or restrict WebSocket upgrade requests, attackers can upgrade to WebSocket connections intended for internal or administrative use, thereby gaining unauthorized access. This attack vector exploits the trust model of WebSocket connections, where sensitive endpoints may be exposed due to weak or missing authentication controls during the upgrade."
  impact: >
    "An unauthorized WebSocket upgrade can lead to significant security risks, including access to sensitive data, administrative functions, or internal services not intended for public access. Attackers could perform actions like sending commands, accessing privileged information, or manipulating real-time data flows over the WebSocket connection. This could result in data breaches, service disruptions, or unauthorized control over internal systems."

  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: UNAUTHORIZED_WEBSOCKET_UPGRADE
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-16
    - CWE-215

settings:
  nature: INTRUSIVE
  plan: FREE
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300

wordLists:
  attemptUrls:
    - /ws/admin

  probableOutputParams:
    - websocket established
    - connection upgraded
    - connection established

execute:
  type: single
  requests:
    - req:
        - modify_url: ${attemptUrls}
        - add_header:
            Connection: Upgrade
        - add_header:
            Upgrade: websocket

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    contains_either: ${probableOutputParams}

strategy:
  run_once: /
