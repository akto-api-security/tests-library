id: APACHE_PULSAR_EXPOSED
info:
  name: Exposed Apache Pulsar
  description: >
    Exposure of Apache Pulsar services can lead to unauthorized access to messaging and streaming data. This vulnerability occurs when Pulsar's administrative interfaces or APIs are not properly secured.
  details: >
    When the Apache Pulsar admin REST API is exposed without adequate authentication or access controls, attackers can gain access to sensitive information, manipulate topics, or modify configurations. This could allow for data leakage, message interception, or service disruption.
  impact: >
    Unauthorized access to the Pulsar administration API can result in critical security risks, including data breaches, loss of integrity of messaging systems, and potential denial of service. Proper security measures, including IP whitelisting and strong authentication, should be implemented to protect these services.

  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: APACHE_PULSAR_EXPOSED
  severity: LOW
  references:
    - https://pulsar.apache.org/admin-rest-api
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-16
    - CWE-200

attributes:
  nature: NON-INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
    - 45 CFR ยง 164.312(a)(2)(i)
  SOC 2:
    - System Configuration and Management Controls
    - Access and Authorization Settings
  PCI DSS:
    - Requirement 2.2
    - Requirement 6.2
  ISO 27001:
    - A.12.1.1
    - A.12.6.2
  NIST 800-53:
    - CM-6
    - AC-17
  CSA CCM:
    - IVS-09
    - TVM-04
  CIS Controls:
    - IG1 Safeguard 4.6
    - IG1 Safeguard 5.5
  FedRAMP:
    - CM-6
    - AC-17
  NIST 800-171:
    - 3.4.6
    - 3.5.7
  FISMA:
    - CM-6
    - AC-17
  Cybersecurity Maturity Model Certification (CMMC):
    - CM.2.068
    - AC.2.008
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300

wordLists:
  attemptPaths:
    - "/brokers/internal-configuration"
    - "/brokers/leaderBroker"
    - "/bookies/all"

execute:
  type: single
  requests:
    - req:
        - modify_method: GET
        - remove_auth_header: true
        - replace_body: "{}"
        - modify_url: ${attemptPaths}

validate:
  response_code:
    eq: 200
  response_payload:
    length:
      gt: 0
    contains_either:
      - bookkeeperMetadataServiceUri
      - zookeeperServers
      - brokerId
      - serviceUrl
      - bookies
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"

strategy:
  run_once: /
