id: WPCONFIG_AWS_KEY
info:
  name: AWS S3 keys Leak
  description: "WordPress configuration file (wp-config.php) leaked, exposing AWS S3 keys and sensitive database credentials."
  details: >
              "This template searches for the presence of the wp-config.php file and checks for the presence of AWS S3 keys, database access credentials, and other sensitive information within the file."
  impact: "Exposing AWS S3 keys and database credentials can result in unauthorized access, data breaches, and potential compromise of the entire system's security."
  remediation: "To mitigate AWS S3 keys leaks, avoid hardcoding credentials in code or configuration files, opting for IAM roles with least privilege instead. Implement robust access controls and bucket policies to limit access to authorized entities. Regularly rotate access keys and audit access logs for suspicious activity. Consider using AWS services like AWS Secrets Manager for secure storage and retrieval of sensitive credentials."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: WPCONFIG_AWS_KEY
  severity: HIGH
  references:
    - https://securityboulevard.com/2021/04/understanding-and-preventing-s3-leaks/
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-200
    - CWE-213
  cve:
    - CVE-2022-31159
    - CVE-2022-2582

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  url:
    extract: urlVar

wordLists:
  urlPaths:
    - ${urlVar}/wp-config.php-backup
    - ${urlVar}/%c0
  
execute:
  type: single
  requests:
    - req:
      - modify_url: ${urlPaths}

validate:
  response_payload:
    contains_all:
      - 'access-key-id'
      - 'secret-access-key'
      - 'DB_NAME'
      - 'DB_PASSWORD'