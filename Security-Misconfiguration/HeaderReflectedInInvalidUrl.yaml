id: HEADER_REFLECTED_IN_INVALID_URLS
info:
  name: Header Reflection in Invalid URLs
  description: "Adds a random header to a request for a non-existent page and checks if it is reflected in the response."
  details: >
    "By adding a random header to a request for a non-existent page, we check if the response is reflecting all headers, including http-only cookies.
     If (when) an XSS is found on the domain, this page can be used to fetch all cookies for an administrator and take over their session on the site."
  impact: "If XSS is found on the website then hacker can steal http-only cookies and can gain unauthorized access to the system"
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: HEADER_REFLECTED_IN_INVALID_URLS
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://hackerone.com/reports/792998"
  cwe:
    - CWE-16
    - CWE-113
  cve:
    - CVE-2022-37724

attributes:
  nature: NON_INTRUSIVE
  plan: STANDARD
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
    - 45 CFR ยง 164.312(a)(2)(i)
  SOC 2:
    - System Configuration and Management Controls
    - Access and Authorization Settings
  PCI DSS:
    - Requirement 2.2
    - Requirement 6.2
  ISO 27001:
    - A.12.1.1
    - A.12.6.2
  NIST 800-53:
    - CM-6
    - AC-17
  CSA CCM:
    - IVS-09
    - TVM-04
  CIS Controls:
    - IG1 Safeguard 4.6
    - IG1 Safeguard 5.5
  FedRAMP:
    - CM-6
    - AC-17
  NIST 800-171:
    - 3.4.6
    - 3.5.7
  FISMA:
    - CM-6
    - AC-17
  Cybersecurity Maturity Model Certification (CMMC):
    - CM.2.068
    - AC.2.008
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  url:
    extract: urlVar
  response_payload:
    contains_either:
      - <!doctype html>
  method:
    eq: GET

execute:
  type: single
  requests:
    - req:
        - add_header:
            test-header: akto
        - modify_url: ${urlVar}/
        - modify_url:
            regex_replace:
              regex: \/+$
              replace_with: '/random-url'


validate:
  response_headers:
    key:
      eq: test-header
    value:
      eq: akto
