id: RABBIT_MQ_DEFAULT_LOGIN
info:
  name: "RabbitMQ Default Login"
  description: >
    "This vulnerability arises when RabbitMQ's default credentials are not changed, allowing unauthorized access."
  details: >
    "RabbitMQ ships with a default username and password, typically 'guest' for both. If these credentials are not modified, anyone with network access can authenticate and gain full access to the management interface, which may include sensitive information and administrative controls."
  impact: >
    "Using default credentials can lead to unauthorized access, allowing attackers to manipulate message queues, read sensitive data, and potentially disrupt services. It is crucial to change these credentials to maintain security and prevent unauthorized exploitation."

  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: RABBIT_MQ_DEFAULT_LOGIN
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/"
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-16
    - CWE-200
  cve:
    - CVE-2017-7529

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
    - 45 CFR ยง 164.312(a)(2)(i)
  SOC 2:
    - System Configuration and Management Controls
    - Access and Authorization Settings
  PCI DSS:
    - Requirement 2.2
    - Requirement 6.2
  ISO 27001:
    - A.12.1.1
    - A.12.6.2
  NIST 800-53:
    - CM-6
    - AC-17
  CSA CCM:
    - IVS-09
    - TVM-04
  CIS Controls:
    - IG1 Safeguard 4.6
    - IG1 Safeguard 5.5
  FedRAMP:
    - CM-6
    - AC-17
  NIST 800-171:
    - 3.4.6
    - 3.5.7
  FISMA:
    - CM-6
    - AC-17
  Cybersecurity Maturity Model Certification (CMMC):
    - CM.2.068
    - AC.2.008
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  request_headers:
    for_one:
      key:
        eq: Host
      value:
        extract: hostVal

wordLists:
  attemptValues:
    - "http://${hostVal}:15672/api/auth"
    - "/api/auth"

execute:
  type: single
  requests:
    - req:
        - modify_url: ${attemptValues}
        - modify_method: POST
        - replace_body: '{ "username": "guest", "password": "guest" }'

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - <html>
      - </html>
    contains_either:
      - "success"
      - "authentication successful"

strategy:
  run_once: /
settings:
  duration: FAST
