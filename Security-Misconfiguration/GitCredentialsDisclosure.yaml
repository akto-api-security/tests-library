id: GIT_CREDENTIALS_DISCLOSURE
info:
  name: Git Credentials Disclosure
  description: "Searches for the pattern and log file on passed URLs."
  details: >
    "Git Credentials Disclosure refers to the vulnerability where the presence of Git credentials and log files is checked on provided URLs. The .git-credentials file contains sensitive information, including HTTPS URLs and authentication credentials. Promptly addressing this vulnerability is crucial to prevent unauthorized access, protect the integrity of source code, and safeguard sensitive information from being exposed."
  impact: "Disclosing Git credentials exposes sensitive information, including HTTPS URLs and authentication credentials, enabling unauthorized access to Git repositories and potential code manipulation."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: GIT_CREDENTIALS_DISCLOSURE
  severity: MEDIUM
  references:
    - https://github.com/detectify/ugly-duckling/blob/master/modules/crowdsourced/git-credentials-disclosure.json
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-256
  cve:
    - CVE-2020-5260

attributes:
  nature: NON_INTRUSIVE
  plan: STANDARD
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
    - 45 CFR ยง 164.312(a)(2)(i)
  SOC 2:
    - System Configuration and Management Controls
    - Access and Authorization Settings
  PCI DSS:
    - Requirement 2.2
    - Requirement 6.2
  ISO 27001:
    - A.12.1.1
    - A.12.6.2
  NIST 800-53:
    - CM-6
    - AC-17
  CSA CCM:
    - IVS-09
    - TVM-04
  CIS Controls:
    - IG1 Safeguard 4.6
    - IG1 Safeguard 5.5
  FedRAMP:
    - CM-6
    - AC-17
  NIST 800-171:
    - 3.4.6
    - 3.5.7
  FISMA:
    - CM-6
    - AC-17
  Cybersecurity Maturity Model Certification (CMMC):
    - CM.2.068
    - AC.2.008
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  url:
    extract: urlVar

execute:
  type: single
  requests:
    - req:
        - modify_url: ${urlVar}/.git-credentials

validate:
  response_code:
    eq: 200
  response_payload:
    length:
      gt: 0
    contains_all:
      - "https://"
      - "@github.com"
  response_headers:
    for_one:
      value:
        not_contains: 'text/html'
