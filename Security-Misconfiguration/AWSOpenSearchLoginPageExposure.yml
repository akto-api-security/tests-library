id: AWS_OPENSEARCH_LOGIN_PAGE_EXPOSURE
info:
  name: "AWS OpenSearch Login Page Exposure"
  description: "This test refers to the unintentional exposure of the login page for AWS OpenSearch, making it accessible over the internet without proper access controls. This could allow unauthorized users to attempt brute force attacks or exploit vulnerabilities to gain access to the OpenSearch dashboard. Ensuring secure network configurations and multi-factor authentication is essential to prevent such exposure."
  details: "AWS OpenSearch Login Page Exposure occurs when the login page for an OpenSearch cluster is publicly accessible without adequate security measures like IP restrictions or multi-factor authentication. This can allow attackers to target the login page, attempting unauthorized access via brute force or credential stuffing attacks. To mitigate this risk, administrators should enforce strict access controls, use strong credentials, and apply network security measures like VPC peering or private endpoints."
  impact: "The impact of AWS OpenSearch Login Page Exposure can be critical, as attackers may exploit the publicly accessible login page to gain unauthorized access to the OpenSearch cluster. This could lead to data theft, index tampering, or the complete compromise of the search infrastructure. In addition, attackers may disrupt services, modify search analytics, or escalate their access to other AWS resources, resulting in operational downtime and potential financial loss."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: AWS_OPENSEARCH_LOGIN_PAGE_EXPOSURE
  severity: MEDIUM
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-200
    - CWE-16
  cve:
    - CVE-2021-43798

attributes:
  nature: NON_INTRUSIVE
  plan: STANDARD
  duration: FAST
compliance_standards: compliance/security-misconfiguration.conf
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
execute:
  type: single
  requests:
    - req:
        - modify_url: "/_dashboards/app/login"
        - modify_method: GET
        - replace_body: '{}'
validate:
  response_code:
    eq: 200
  response_payload:
    length:
      gt: 0
    contains_either:
      - "Please login to OpenSearch Dashboards"
strategy:
  run_once: /
