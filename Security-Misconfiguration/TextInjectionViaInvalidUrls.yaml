id: TEXT_INJECTION_VIA_INVALID_URLS
info:
  name: Text injection via invalid URLs
  description: "Injecting malicious content into a web url to mislead users."
  details: >
    "Content spoofing vulnerability is a web application security flaw where attackers inject malicious content into user-supplied data.
    By exploiting this vulnerability, attackers can manipulate the displayed content, misleading users. An example involves redirecting users from valid website to a fake website. "
  impact: "This attack is typically used as, or in conjunction with, social engineering because the attack is exploiting a code-based vulnerability and a user’s trust."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: TEXT_INJECTION_VIA_INVALID_URLS
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-community/attacks/Content_Spoofing"
    - "https://infosecwriteups.com/text-based-injection-content-spoofing-96e9eb1615d8"
  cwe:
    - CWE-74
  cve:
    - CVE-2019-1680
    - CVE-2022-42889

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR § 164.308(a)(1)(ii)(A)
    - 45 CFR § 164.312(a)(2)(i)
  SOC 2:
    - System Configuration and Management Controls
    - Access and Authorization Settings
  PCI DSS:
    - Requirement 2.2
    - Requirement 6.2
  ISO 27001:
    - A.12.1.1
    - A.12.6.2
  NIST 800-53:
    - CM-6
    - AC-17
  CSA CCM:
    - IVS-09
    - TVM-04
  CIS Controls:
    - IG1 Safeguard 4.6
    - IG1 Safeguard 5.5
  FedRAMP:
    - CM-6
    - AC-17
  NIST 800-171:
    - 3.4.6
    - 3.5.7
  FISMA:
    - CM-6
    - AC-17
  Cybersecurity Maturity Model Certification (CMMC):
    - CM.2.068
    - AC.2.008
api_selection_filters:
  method:
    neq: "OPTIONS"
  url:
    extract: urlVar

execute:
  type: single
  requests:
    - req:
        - modify_url: ${urlVar}/has%20been%20changed%20to%20https%3A%2F%2Fwww.fakewebsite.com.%20so%20please%20visit%20https%3A%2F%2Fwww.fakewebsite.com%20as%20your%20requested%20link

validate:
  response_payload:
    contains_either:
      - "has been changed to https://www.fakewebsite.com. so please visit https://www.fakewebsite.com as your requested link"
  response_headers:
    for_one:
      key:
        eq: Content-Type
      value:
        contains_either: "text/html"

