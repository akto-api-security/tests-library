id: ESMTPRC_CONFIG
info:
  name: eSMTP - Config Discovery
  description: "eSMTP configuration was discovered."
  details: >
              "eSMTP - Config Discovery refers to the vulnerability where the eSMTP configuration file, .esmtprc, is discovered due to misconfiguration. This file contains sensitive information like the hostname, username, and password, which can be exploited by attackers for unauthorized access, email impersonation, and spam/phishing campaigns. Promptly addressing this vulnerability is critical to protect the integrity and confidentiality of email communications."
  impact: "Discovering the eSMTP configuration file exposes sensitive information, allowing attackers to impersonate users, send spam/phishing emails, and gain unauthorized access to email accounts."
  remediation: "To prevent eSMTP configuration discovery, ensure that sensitive information such as email server credentials and SMTP configurations are not exposed. Configure proper access controls to restrict access to configuration files containing sensitive information. Regularly audit and review your email server's configuration to detect and remediate any potential vulnerabilities or misconfigurations. Additionally, consider implementing encryption for sensitive data transmission and limiting access to SMTP services from trusted networks only."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: ESMTPRC_CONFIG
  severity: HIGH
  references:
    - https://linux.die.net/man/5/esmtprc
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-16
    - CWE-200
    - CWE-538

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  url:
    extract: urlVar
  
execute:
  type: multiple
  requests:
    - req:
      - modify_url: ${urlVar}/this-sub-url-path-will-never-exist-123456
      - validate:
          response_payload:
            or:
              - contains_all:
                  - "hostname"
                  - "username"
                  - "password"
              - regex: "hostname\\s*=\\s*([^\\s]+)"
              - regex: "starttls\\s*=\\s*"
              - regex: "identity\\s*=\\s*"
          response_headers:
            for_one:
              value:
                contains_all:
                  - text/html
      - success: exit
      - failure: x2
    - req:
      - modify_url: ${urlVar}/.esmtprc
      - validate:
          response_payload:
            or:
              - contains_all:
                  - "hostname"
                  - "username"
                  - "password"
              - regex: "hostname\\s*=\\s*([^\\s]+)"
              - regex: "starttls\\s*=\\s*"
              - regex: "identity\\s*=\\s*"
          response_headers:
            for_one:
              value:
                contains_all:
                  - text/html
      - success: vulnerable
      - failure: exit
strategy:
  run_once: /