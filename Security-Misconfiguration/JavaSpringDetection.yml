id: JAVA_SPRING_DETECTION
info:
  name: "Java Spring Framework Detection"
  description: "Java Spring Framework Detection involves identifying the presence and version of the Spring Framework in an application. This is crucial for assessing potential vulnerabilities, such as outdated versions or misconfigurations. Detection methods often include analyzing HTTP headers, endpoints, or application behavior, as Spring-specific patterns (e.g., `Spring Boot Actuator`) can reveal its use. Security tools and manual checks aid in detecting and mitigating risks associated with Spring applications."
  details: "Java Spring Framework Detection focuses on identifying if an application uses the Spring Framework and its specific version. Techniques include examining HTTP response headers, paths like `/actuator`, or error messages that expose Spring-related details. Tools like Wappalyzer or specialized scanners can automate detection. Identifying the framework helps in assessing security risks, ensuring up-to-date versions, and addressing vulnerabilities like Spring4Shell."
  impact: "Detecting the Java Spring Framework in applications can expose security risks if outdated or vulnerable versions are in use, such as susceptibility to exploits like Spring4Shell. Attackers can use this information to tailor specific attacks, such as exploiting misconfigured endpoints or accessing sensitive data. Timely detection helps mitigate risks by enabling patch management, secure configuration, and informed defense strategies."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: JAVA_SPRING_DETECTION
  severity: LOW
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-200
    - CWE-213
  cve:
    - CVE-2018-10245


attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
    - 45 CFR ยง 164.312(a)(2)(i)
  SOC 2:
    - System Configuration and Management Controls
    - Access and Authorization Settings
  PCI DSS:
    - Requirement 2.2
    - Requirement 6.2
  ISO 27001:
    - A.12.1.1
    - A.12.6.2
  NIST 800-53:
    - CM-6
    - AC-17
  CSA CCM:
    - IVS-09
    - TVM-04
  CIS Controls:
    - IG1 Safeguard 4.6
    - IG1 Safeguard 5.5
  FedRAMP:
    - CM-6
    - AC-17
  NIST 800-171:
    - 3.4.6
    - 3.5.7
  FISMA:
    - CM-6
    - AC-17
  Cybersecurity Maturity Model Certification (CMMC):
    - CM.2.068
    - AC.2.008
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
wordLists:
  paths:
    - '/error'
execute:
  type: single
  requests:
    - req:
        - modify_url: "${paths}"
        - modify_method: GET
        - replace_body: '{}'
        - follow_redirect: true
validate:
  response_code:
    eq: 500
  response_payload:
    length:
      gt: 0
    contains_either: '"status":999'
strategy:
  run_once: /
settings:
  duration: FAST
