id: ZOOKEEPER_EXPOSED
info:
  name: "Zookeeper APIs Exposed"
  description: >
    "This vulnerability occurs when Apache Zookeeper APIs are accessible without proper authentication, allowing unauthorized users to interact with the Zookeeper service."
  details: >
    "Exposed Zookeeper APIs can lead to unauthorized access to critical configuration data, service coordination tasks, and cluster management capabilities. Attackers could exploit this exposure to modify or delete znodes, which can disrupt service operations and impact application stability."
  impact: >
    "The exposure of Zookeeper APIs can result in severe security risks, including data loss, service downtime, and unauthorized manipulation of application configurations. This can compromise the integrity and availability of the systems relying on Zookeeper for coordination and configuration."

  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: ZOOKEEPER_EXPOSED
  severity: LOW
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-16
    - CWE-200
    - CWE-538

attributes:
  nature: NON-INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
    - 45 CFR ยง 164.312(a)(2)(i)
  SOC 2:
    - System Configuration and Management Controls
    - Access and Authorization Settings
  PCI DSS:
    - Requirement 2.2
    - Requirement 6.2
  ISO 27001:
    - A.12.1.1
    - A.12.6.2
  NIST 800-53:
    - CM-6
    - AC-17
  CSA CCM:
    - IVS-09
    - TVM-04
  CIS Controls:
    - IG1 Safeguard 4.6
    - IG1 Safeguard 5.5
  FedRAMP:
    - CM-6
    - AC-17
  NIST 800-171:
    - 3.4.6
    - 3.5.7
  FISMA:
    - CM-6
    - AC-17
  Cybersecurity Maturity Model Certification (CMMC):
    - CM.2.068
    - AC.2.008
auth:
  authenticated: true

api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  url:
    contains_either: ${probableInputParams}

wordLists:
  probableInputParams:
    - "znodes"
    - "zookeeper"

execute:
  type: single
  requests:
    - req:
        - remove_auth_header: true

validate:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    percentage_match:
      gt: 90
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts
      - Attention Required!
      - CloudFlare
      - "Sorry, you have been blocked"
