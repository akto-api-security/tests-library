id: NEXT_JS_CACHE_POISONING
info:
  name: "Next.JS Cache Poisoning"
  description: "Next.js Cache Poisoning refers to an attack where malicious actors exploit vulnerabilities in the caching mechanisms of a Next.js application. By injecting or manipulating untrusted data, attackers can serve malicious or incorrect responses to other users. Common vectors include unvalidated query parameters, headers, or cookies, leading to potential security issues like leaking sensitive data or serving unauthorized content. Proper cache configuration and validation mechanisms are crucial to mitigate this risk."
  details: "Next.js Cache Poisoning occurs when attackers manipulate the cache key or stored data in a Next.js application to serve malicious or unintended responses to users. This can happen if caching is improperly configured, allowing inputs like headers, cookies, or query parameters to alter the cached content. It can lead to unauthorized access, data leaks, or compromised functionality. Mitigation involves validating inputs, normalizing cache keys, and implementing strict caching policies."
  impact: "The impact of Next.js Cache Poisoning can be significant, including serving malicious content to users, leaking sensitive or private data, and bypassing authentication or authorization controls. It may disrupt user experience, compromise application integrity, and expose vulnerabilities that attackers can exploit further. These issues can lead to reputational damage, user trust loss, and potential legal or compliance consequences."
  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: NEXT_JS_CACHE_POISONING
  severity: MEDIUM
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-200
    - CWE-16
  cve:
    - CVE-2021-43798

attributes:
  nature: NON_INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: https://github.com/akto-api-security/tests-library/blob/hotfix/fixed_some_minor_bugs/compliance/security-misconfiguration.conf
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
execute:
  type: multiple
  requests:
    - req:
        - modify_url: "/?cb=abcd1"
        - modify_header:
            priority: "u=1"
        - modify_method: GET
        - replace_body: '{}'
        - add_header:
            x-invoke-status: 888
        - validate:
            response_code:
              eq: 888
            response_payload:
              contains_either: '/_error'
        - success: x2
        - failure: exit
    - req:
        - modify_url: "/?cb=abcd1"
        - modify_method: GET
        - replace_body: '{}'
        - validate:
            response_code:
              eq: 888
            response_payload:
              contains_either: '/_error'
        - success: vulnerable
        - failure: exit
strategy:
  run_once: /
