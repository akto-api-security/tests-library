id: GOOGLE_API_KEY_DISCLOSURE
info:
  name: "Google API Key Disclosure"
  description: >
    "Google API key disclosure occurs when an application inadvertently exposes Google API keys in the source code, URLs, or other publicly accessible locations. These keys can grant unauthorized access to various Google services, including Maps, Cloud, or Gmail APIs, leading to potential misuse and abuse of the services."
  details: >
    "Google API keys provide access to Google's suite of services and are often embedded in web applications to facilitate integration with these services. However, if these keys are exposed in public-facing resources such as JavaScript files, URLs, or HTML, attackers can steal the keys and use them for malicious purposes. This scan identifies locations where Google API keys might be disclosed and alerts the user to the potential risk."
  impact: >
    "Exposing Google API keys can result in unauthorized access to Google services, allowing attackers to perform actions such as sending emails, accessing cloud resources, or leveraging Google Maps without authorization. This could lead to abuse of the associated Google services, increased billing costs for the owner, and potential data breaches. Ensuring that API keys are kept confidential and properly secured is critical to preventing misuse and protecting your Google services."

  category:
    name: SM
    shortName: Misconfiguration
    displayName: Security Misconfiguration (SM)
  subCategory: GOOGLE_API_KEY_DISCLOSURE
  severity: MEDIUM
  references:
    - https://cwe.mitre.org/data/definitions/200.html
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-256
  cve:
    - CVE-2020-5260

attributes:
  nature: NON_INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards: https://github.com/akto-api-security/tests-library/blob/hotfix/fixed_some_minor_bugs/compliance/security-misconfiguration.conf
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    for_one:
      key:
        regex: .*
      value:
        regex: "AIza[0-9A-Za-z\\-_]{35}"
  response_headers:
    for_one:
      value:
        not_contains:
          - image/png
          - image/jpeg
          - image/gif
          - application/x-shockwave-flash
          - application/pdf

execute:
  type: single
  requests:
    - req: []
validate:
  response_code:
    eq: 200
  response_payload:
    for_one:
      key:
        regex: .*
      value:
        regex: "AIza[0-9A-Za-z\\-_]{35}"
    length:
      gt: 0
    not_contains:
      - <html>
      - </html>
  response_headers:
    for_one:
      value:
        not_contains:
          - image/png
          - image/jpeg
          - image/gif
          - application/x-shockwave-flash
          - application/pdf
