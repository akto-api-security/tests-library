id: SSTI_IN_FREEMARKER
info:
  name: "SSTI in Freemarker"
  description: "Fuzzing vulnerable payloads in request body and query params to assess Server-Side Template Injection vulnerability."
  details: >
    "By fuzzing vulnerable payloads in request bodies and query parameters, it aims to identify and exploit Server-Side Template Injection vulnerabilities specific to FreeMarker templates.
    This test assesses the risk of arbitrary code execution, data exposure, and server compromise within the FreeMarker templating engine, ensuring comprehensive security assessment."
  impact: "Server-Side Template Injection (SSTI) allows attackers to execute arbitrary code on a server, leading to data exposure, remote code execution, and potential server compromise, posing severe security and privacy risks."
  category:
    name: SSTI
    shortName: Server Side Template Injection
    displayName: Server Side Template Injection (SSTI)
  subCategory: SSTI_IN_FREEMARKER
  severity: HIGH
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://www.cobalt.io/blog/a-pentesters-guide-to-server-side-template-injection-ssti"
  cwe:
    - CWE-1336
    - CWE-94
  cve:
    - CVE-2022-24442
    - CVE-2021-25770

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
    - Article 25
  HIPAA:
    - 45 CFR ยง 164.312(c)(1)
    - 45 CFR ยง 164.308(a)(1)(ii)(A)
  SOC 2:
    - Secure Application Development Controls
    - System and Communication Security
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.5.8
  ISO 27001:
    - A.12.6.1
    - A.14.2.5
  NIST 800-53:
    - SI-10
    - SA-11
  CSA CCM:
    - APP-02
    - TVM-03
  CIS Controls:
    - IG1 Safeguard 16.2
    - IG2 Safeguard 18.3
  FedRAMP:
    - SI-10
    - CA-7
  NIST 800-171:
    - 3.14.1
    - 3.14.2
  FISMA:
    - SI-10
    - SA-11
  Cybersecurity Maturity Model Certification (CMMC):
    - SI.2.216
    - RA.3.141
api_selection_filters:
  method:
    neq: "OPTIONS"
  response_payload:
    not_contains:
      - error
      - invalid
      - failed
  or:
    - request_payload:
        for_one:
          key:
            regex: .*
            extract: payloadKey
    - query_param:
        for_one:
          key:
            regex: .*
            extract: queryKey

execute:
  type: single
  requests:
    - req:
        - modify_query_param:
            queryKey: '%24%7B89%20*%2091%7D'
        - modify_body_param:
            payloadKey: ${89*91}

validate:
  and:
    - response_payload:
        regex: "(?<![\\w-])8099(?![\\w-])"
    - response_payload:
        not_contains:
          - error
          - invalid
          - expired
