id: SQL_INJECTION_URL_PATH
info:
  name: SQL Injection Test via Special Inputs for Verbose Error Messages
  description: "SQL Injection Test via Special Inputs for Verbose Error Messages involves sending crafted SQL queries as inputs to a web application's input fields. By intentionally injecting SQL code that triggers error messages, testers can analyze the application's responses for clues about its underlying database structure and potential vulnerabilities. This method helps identify weaknesses in input validation and error handling, enabling developers to fortify their application's defenses against SQL injection attacks."
  details: "SQL Injection Test via Special Inputs for Verbose Error Messages involves deliberately injecting SQL queries containing syntax errors or manipulative commands into input fields of a web application. By analyzing the verbose error messages returned by the application, testers can gather insights into the database structure and potential vulnerabilities. This method aids in uncovering weaknesses in input validation and error handling, facilitating developers in strengthening the application's resilience against SQL injection attacks."
  impact: "The impact of SQL Injection Test via Special Inputs for Verbose Error Messages lies in its ability to expose critical vulnerabilities in web applications. Exploiting these weaknesses can lead to unauthorized access to sensitive data, manipulation of database contents, and even complete system compromise. By detecting and addressing these vulnerabilities, organizations can prevent data breaches, protect user privacy, and maintain the integrity of their systems and data."
  remediation: "To mitigate SQL injection via special inputs, sanitize user inputs, use parameterized queries, and ensure error messages don't reveal sensitive information. Limit database user permissions and conduct regular security testing for proactive vulnerability management."
  category:
    name: VEM
    shortName: Verbose Error Messages
    displayName: Verbose Error Messages (VEM)
  subCategory: SQL_INJECTION_URL_PATH
  severity: MEDIUM
  tags: 
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-community/Improper_Error_Handling"
    - "https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/01-Testing_For_Improper_Error_Handling"
    - "https://hackerone.com/reports/1033423"
  cwe:
    - CWE-215
    - CWE-489
  cve:
    - CVE-2017-12794

api_selection_filters:
  response_code:
    gte: 200
    lt: 300
  url:
    extract: urlVar

execute:
  type: single
  requests:
    - req:
      - modify_url: "${urlVar}'"

validate:
  response_payload:
    length:
      gt: 0
    contains_either:
      - SQL syntax
      - MySQL
      - mysqli
      - MySQLSyntaxErrorException
      - Mysqli_Exception
      - MySqlException
      - SQLSTATE
      - PostgreSQL
      - valid PostgreSQL result
      - Npgsql
      - PSQLException
      - SQL Server
      - SQLServer JDBC Driver
      - SqlConnection
      - SqlException
      - Oracle error
      - quoted string not properly terminated
      - OracleException
      - SQLite
      - SQLITE_ERROR
      - "sqlite3.OperationalError"
      - "SQLite3::SQLException"
      - "SQLiteException"
      - "SQLITE_CONSTRAINT"