id: DESCRIPTIVE_ERROR_MESSAGE_INVALID_PAYLOAD
info:
  name: Descriptive Error Message Using invalid payloads
  description: "Verifies error messages for sensitive information leakage, specifically preventing the exposure of stack traces, enhancing application security."
  details: >
    "The DESCRIPTIVE_ERROR_MESSAGE test ensures that error messages do not leak sensitive information, specifically avoiding the exposure of stack traces.  It verifies that error messages provide useful and informative feedback without disclosing implementation details, reducing the risk of exposing vulnerabilities and aiding in maintaining the security and integrity of the application."
  impact: "This information can be used to facilitate more sophisticated attacks on your application"
  category:
    name: VEM
    shortName: Verbose Error Messages
    displayName: Verbose Error Messages (VEM)
  subCategory: DESCRIPTIVE_ERROR_MESSAGE_INVALID_PAYLOAD
  severity: LOW
  tags:
    - Business logic
    - OWASP top 10
    - HackerOne top 10
  references:
    - "https://owasp.org/www-community/Improper_Error_Handling"
  cwe:
    - CWE-209
    - CWE-200
  cve:
    - CVE-2020-11883
    - CVE-2020-15652

attributes:
  nature: INTRUSIVE
  plan: FREE
  duration: FAST
compliance_standards:
  GDPR:
    - Article 32
  HIPAA:
    - 45 CFR Â§ 164.312(c)(1)
    - 45 CFR Â§ 164.308(a)(1)(ii)(A)
  SOC 2:
    - System and Communication Security
    - Vulnerability and Configuration Management
  PCI DSS:
    - Requirement 6.5.1
    - Requirement 6.5.10
  ISO 27001:
    - A.12.4.1
    - A.12.6.1
  NIST 800-53:
    - SI-11
    - SI-10
  CSA CCM:
    - APP-02
    - TVM-03
  CIS Controls:
    - IG1 Safeguard 4.7
    - IG1 Safeguard 16.3
  FedRAMP:
    - SI-11
    - SI-10
  NIST 800-171:
    - 3.14.1
    - 3.14.3
  FISMA:
    - SI-11
    - SI-10
  Cybersecurity Maturity Model Certification (CMMC):
    - SI.2.216
    - CM.2.068
api_selection_filters:
  method:
    contains_either:
      - "PUT"
      - "POST"
      - "PATCH"
  response_payload:
    not_contains:
      - column
      - row
      - line
      - function
      - class
      - stacktrace
    length:
      gt: 0

execute:
  type: single
  requests:
    - req:
        - replace_body: "random payload containing 5s3c1@al characters and emojisðŸ˜Š"
validate:
  or:
    - response_payload:   # Javascript / Node.js errors
        contains_either:
          - "TypeError: Cannot"
          - "SyntaxError: Unexpected"
          - "ReferenceError:"
    - response_payload:   # Python errors
        contains_either:
          - "ValueError: invalid"
          - "TypeError: unsupported"
          - "KeyError: "
    - response_payload:   # Java errors
        contains_either:
          - "java.lang.NullPointerException"
          - "java.lang.ArrayIndexOutOfBoundsException"
          - "java.lang.IllegalArgumentException"
    - response_payload:   # C# errors
        contains_either:
          - "System.NullReferenceException"
          - "System.IndexOutOfRangeException"
          - "System.InvalidOperationException"
    - response_payload:   # PHP errors
        contains_either:
          - "Fatal error: Call"
          - "Parse error: syntax error"
          - "Exception: "
    - response_payload:   # Ruby errors
        contains_either:
          - "RuntimeError: "
          - "NoMethodError: "
          - "ArgumentError: "
    - response_payload:   # Go errors
        contains_either:
          - "panic: runtime error"
